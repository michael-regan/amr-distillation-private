[
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: list all boardgames by gmt\nList of semantic frames: "
            }
        ],
        "question": "list all boardgames by gmt",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "list-01"
            ],
            [
                "you"
            ],
            [
                "boardgame"
            ],
            [
                "imperative"
            ],
            [
                "all"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "gmt"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "list-01"
                    ],
                    [
                        "you"
                    ],
                    [
                        "boardgame"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "all"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "gmt"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / list-01 :mode imperative :ARG0 (y / you) :ARG1 (b / boardgame :mod (a / all) :prep-by (c / company :name (n / name :op1 \"GMT\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who developed skype\nList of semantic frames: "
            }
        ],
        "question": "who developed skype",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "develop-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "product"
            ],
            [
                "name"
            ],
            [
                "skype"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "develop-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "product"
                    ],
                    [
                        "name"
                    ],
                    [
                        "skype"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / develop-02 :ARG0 (a / amr-unknown) :ARG1 (p / product :name (n / name :op1 \"Skype\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which people were born in heraklion\nList of semantic frames: "
            }
        ],
        "question": "which people were born in heraklion",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "heraklion"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "heraklion"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :mod (a / amr-unknown)) :location (c / city :name (n / name :op1 \"Heraklion\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: in which u.s. state is area 51 located\nList of semantic frames: "
            }
        ],
        "question": "in which u.s. state is area 51 located",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "locate-01"
            ],
            [
                "state"
            ],
            [
                "facility"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "area"
            ],
            [
                "51"
            ],
            [
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "locate-01"
                    ],
                    [
                        "state"
                    ],
                    [
                        "facility"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "area"
                    ],
                    [
                        "51"
                    ],
                    [
                        "u.s."
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / locate-01 :ARG1 (f / facility :name (n / name :op1 \"Area\" :op2 \"51\")) :location (s / state :mod (a / amr-unknown) :mod (c / country :name (n2 / name :op1 \"U.S.\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the mayor of new york city\nList of semantic frames: "
            }
        ],
        "question": "who is the mayor of new york city",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "city"
            ],
            [
                "mayor"
            ],
            [
                "name"
            ],
            [
                "new"
            ],
            [
                "york"
            ],
            [
                "city"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "city"
                    ],
                    [
                        "mayor"
                    ],
                    [
                        "name"
                    ],
                    [
                        "new"
                    ],
                    [
                        "york"
                    ],
                    [
                        "city"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-org-role-91 :ARG0 (a / amr-unknown) :ARG1 (c / city :name (n / name :op1 \"New\" :op2 \"York\" :op3 \"City\")) :ARG2 (m / mayor))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which countries have places with more than two caves\nList of semantic frames: "
            }
        ],
        "question": "which countries have places with more than two caves",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-03"
            ],
            [
                "place"
            ],
            [
                "country"
            ],
            [
                "cave"
            ],
            [
                "amr-unknown"
            ],
            [
                "more-than"
            ],
            [
                "2"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-03"
                    ],
                    [
                        "place"
                    ],
                    [
                        "country"
                    ],
                    [
                        "cave"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "2"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (p / place :ARG0-of (h2 / have-03 :ARG1 (c2 / cave :quant (m / more-than :op1 2)))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: where did abraham lincoln die\nList of semantic frames: "
            }
        ],
        "question": "where did abraham lincoln die",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "die-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "abraham"
            ],
            [
                "lincoln"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "die-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "abraham"
                    ],
                    [
                        "lincoln"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / die-01 :ARG1 (p / person :name (n / name :op1 \"Abraham\" :op2 \"Lincoln\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which airports does air china serve\nList of semantic frames: "
            }
        ],
        "question": "which airports does air china serve",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "serve-01"
            ],
            [
                "company"
            ],
            [
                "airport"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "air"
            ],
            [
                "china"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "serve-01"
                    ],
                    [
                        "company"
                    ],
                    [
                        "airport"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "air"
                    ],
                    [
                        "china"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / serve-01 :ARG0 (c / company :name (n / name :op1 \"Air\" :op2 \"China\")) :ARG2 (a / airport :mod (a2 / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all actors starring in movies directed by and starring william shatner\nList of semantic frames: "
            }
        ],
        "question": "give me all actors starring in movies directed by and starring william shatner",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "star-01"
            ],
            [
                "direct-01"
            ],
            [
                "star-01"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "william"
            ],
            [
                "shatner"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "direct-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "william"
                    ],
                    [
                        "shatner"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (s / star-01 :ARG2 (m / movie :ARG1-of (d / direct-01 :ARG0 (p2 / person :name (n / name :op1 \"William\" :op2 \"Shatner\"))) :ARG2-of (s2 / star-01 :ARG1 p2)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what are the official languages of the philippines\nList of semantic frames: "
            }
        ],
        "question": "what are the official languages of the philippines",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "language"
            ],
            [
                "official"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "philippines"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "language"
                    ],
                    [
                        "official"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "philippines"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / language :mod (o / official) :domain (a / amr-unknown) :poss (c / country :name (n / name :op1 \"Philippines\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all danish films\nList of semantic frames: "
            }
        ],
        "question": "give me all danish films",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "film"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "denmark"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "film"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "denmark"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (f / film :mod (a / all) :mod (c / country :name (n / name :op1 \"Denmark\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which movies starring brad pitt were directed by guy ritchie\nList of semantic frames: "
            }
        ],
        "question": "which movies starring brad pitt were directed by guy ritchie",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "direct-01"
            ],
            [
                "star-01"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "guy"
            ],
            [
                "ritchie"
            ],
            [
                "brad"
            ],
            [
                "pitt"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "direct-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "guy"
                    ],
                    [
                        "ritchie"
                    ],
                    [
                        "brad"
                    ],
                    [
                        "pitt"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Guy\" :op2 \"Ritchie\")) :ARG1 (m / movie :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 (p2 / person :name (n2 / name :op1 \"Brad\" :op2 \"Pitt\")))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the grandchildren of bruce lee\nList of semantic frames: "
            }
        ],
        "question": "give me the grandchildren of bruce lee",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "grandchild"
            ],
            [
                "name"
            ],
            [
                "bruce"
            ],
            [
                "lee"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "grandchild"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bruce"
                    ],
                    [
                        "lee"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Bruce\" :op2 \"Lee\")) :ARG2 (g2 / grandchild))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which other weapons did the designer of the uzi develop\nList of semantic frames: "
            }
        ],
        "question": "which other weapons did the designer of the uzi develop",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "develop-02"
            ],
            [
                "design-01"
            ],
            [
                "person"
            ],
            [
                "weapon"
            ],
            [
                "weapon"
            ],
            [
                "other"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "uzi"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "develop-02"
                    ],
                    [
                        "design-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "weapon"
                    ],
                    [
                        "weapon"
                    ],
                    [
                        "other"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "uzi"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / develop-02 :ARG0 (p / person :ARG0-of (d2 / design-01 :ARG1 (p2 / weapon :name (n / name :op1 \"Uzi\")))) :ARG1 (w2 / weapon :mod (a / amr-unknown) :mod (o / other)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the owner of universal studios\nList of semantic frames: "
            }
        ],
        "question": "who is the owner of universal studios",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "own-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "universal"
            ],
            [
                "studios"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "own-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "universal"
                    ],
                    [
                        "studios"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(o / own-01 :ARG0 (a / amr-unknown) :ARG1 (c / company :name (n / name :op1 \"Universal\" :op2 \"Studios\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which state of the usa has the highest population density\nList of semantic frames: "
            }
        ],
        "question": "which state of the usa has the highest population density",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "country"
            ],
            [
                "have-degree-91"
            ],
            [
                "state"
            ],
            [
                "density"
            ],
            [
                "name"
            ],
            [
                "high-02"
            ],
            [
                "most"
            ],
            [
                "amr-unknown"
            ],
            [
                "populate-01"
            ],
            [
                "usa"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "country"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "state"
                    ],
                    [
                        "density"
                    ],
                    [
                        "name"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "populate-01"
                    ],
                    [
                        "usa"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (s / state :mod (a / amr-unknown) :part-of (c / country :name (n / name :op1 \"USA\"))) :ARG1 (d / density :ARG1-of (h2 / have-degree-91 :ARG2 (h3 / high-02 :ARG1 d) :ARG3 (m / most)) :mod (p / populate-01)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which monarchs were married to a german\nList of semantic frames: "
            }
        ],
        "question": "which monarchs were married to a german",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "marry-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "monarch"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "germany"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "marry-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "monarch"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "germany"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(m / marry-01 :ARG1 (a2 / amr-unknown :ARG0-of (h / have-org-role-91 :ARG2 (m2 / monarch))) :ARG2 (p2 / person :mod (c / country :name (n / name :op1 \"Germany\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which organizations were founded in 1950\nList of semantic frames: "
            }
        ],
        "question": "which organizations were founded in 1950",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "found-01"
            ],
            [
                "organization"
            ],
            [
                "date-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "1950"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "found-01"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "1950"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(f / found-01 :ARG1 (o / organization :mod (a / amr-unknown)) :time (d / date-entity :year 1950))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created the comic captain america\nList of semantic frames: "
            }
        ],
        "question": "who created the comic captain america",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "create-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "comic"
            ],
            [
                "name"
            ],
            [
                "captain"
            ],
            [
                "america"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "create-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "comic"
                    ],
                    [
                        "name"
                    ],
                    [
                        "captain"
                    ],
                    [
                        "america"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (c2 / comic :name (n / name :op1 \"Captain\" :op2 \"America\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the apollo 14 astronauts\nList of semantic frames: "
            }
        ],
        "question": "give me the apollo 14 astronauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "you"
            ],
            [
                "astronaut"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "spaceship"
            ],
            [
                "name"
            ],
            [
                "14"
            ],
            [
                "apollo"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "you"
                    ],
                    [
                        "astronaut"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "spaceship"
                    ],
                    [
                        "name"
                    ],
                    [
                        "14"
                    ],
                    [
                        "apollo"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (a / astronaut :mod (s / spaceship :name (n / name :op1 \"Apollo\" :op2 \"14\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who wrote the book the pillars of the earth\nList of semantic frames: "
            }
        ],
        "question": "who wrote the book the pillars of the earth",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "write-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "book"
            ],
            [
                "name"
            ],
            [
                "the"
            ],
            [
                "pillars"
            ],
            [
                "of"
            ],
            [
                "the"
            ],
            [
                "earth"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "write-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "book"
                    ],
                    [
                        "name"
                    ],
                    [
                        "the"
                    ],
                    [
                        "pillars"
                    ],
                    [
                        "of"
                    ],
                    [
                        "the"
                    ],
                    [
                        "earth"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / write-01 :ARG0 (a / amr-unknown) :ARG1 (b / book :name (n / name :op1 \"The\" :op2 \"pillars\" :op3 \"of\" :op4 \"the\" :op5 \"Earth\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which state of the united states of america has the highest density\nList of semantic frames: "
            }
        ],
        "question": "which state of the united states of america has the highest density",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "country"
            ],
            [
                "have-degree-91"
            ],
            [
                "state"
            ],
            [
                "density"
            ],
            [
                "name"
            ],
            [
                "most"
            ],
            [
                "high-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "states"
            ],
            [
                "of"
            ],
            [
                "america"
            ],
            [
                "united"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "country"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "state"
                    ],
                    [
                        "density"
                    ],
                    [
                        "name"
                    ],
                    [
                        "most"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "states"
                    ],
                    [
                        "of"
                    ],
                    [
                        "america"
                    ],
                    [
                        "united"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (s / state :mod (a / amr-unknown) :part-of (c / country :name (n / name :op1 \"United\" :op2 \"States\" :op3 \"of\" :op4 \"America\"))) :ARG1 (d / density :ARG1-of (h2 / have-degree-91 :ARG2 (h3 / high-02 :ARG1 d) :ARG3 (m / most))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which spaceflights were launched from baikonur\nList of semantic frames: "
            }
        ],
        "question": "which spaceflights were launched from baikonur",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "launch-01"
            ],
            [
                "spaceflight"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "baikonur"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "launch-01"
                    ],
                    [
                        "spaceflight"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "baikonur"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / launch-01 :ARG1 (s / spaceflight :mod (a / amr-unknown)) :source (c / city :name (n / name :op1 \"Baikonur\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me a list of all trumpet players that were bandleaders\nList of semantic frames: "
            }
        ],
        "question": "give me a list of all trumpet players that were bandleaders",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "list-01"
            ],
            [
                "play-11"
            ],
            [
                "lead-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "thing"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "trumpet"
            ],
            [
                "band"
            ],
            [
                "all"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "list-01"
                    ],
                    [
                        "play-11"
                    ],
                    [
                        "lead-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "thing"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "trumpet"
                    ],
                    [
                        "band"
                    ],
                    [
                        "all"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (t2 / thing :ARG2-of (l / list-01 :ARG1 (p / person :ARG0-of (p2 / play-11 :ARG2 (t / trumpet)) :ARG0-of (l2 / lead-01 :ARG1 (b / band)) :mod (a / all)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which u.s. states are in the same timezone as utah\nList of semantic frames: "
            }
        ],
        "question": "which u.s. states are in the same timezone as utah",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "be-located-at-91"
            ],
            [
                "same-01"
            ],
            [
                "state"
            ],
            [
                "state"
            ],
            [
                "timezone"
            ],
            [
                "timezone"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "utah"
            ],
            [
                "name"
            ],
            [
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-located-at-91"
                    ],
                    [
                        "same-01"
                    ],
                    [
                        "state"
                    ],
                    [
                        "state"
                    ],
                    [
                        "timezone"
                    ],
                    [
                        "timezone"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "utah"
                    ],
                    [
                        "name"
                    ],
                    [
                        "u.s."
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-located-at-91 :ARG1 (s / state :mod (a / amr-unknown) :mod (c / country :name (n / name :op1 \"U.S.\"))) :ARG2 (t / timezone :ARG1-of (s2 / same-01 :ARG2 (t2 / timezone :location-of (s3 / state :name (n2 / name :op1 \"Utah\"))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which u.s. states possess gold minerals\nList of semantic frames: "
            }
        ],
        "question": "which u.s. states possess gold minerals",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "possess-01"
            ],
            [
                "mineral"
            ],
            [
                "state"
            ],
            [
                "gold"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "possess-01"
                    ],
                    [
                        "mineral"
                    ],
                    [
                        "state"
                    ],
                    [
                        "gold"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "u.s."
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / possess-01 :ARG0 (s / state :mod (a / amr-unknown) :mod (c / country :name (n / name :op1 \"U.S.\"))) :ARG1 (m / mineral :mod (g / gold)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the daughter of ingrid bergman married to\nList of semantic frames: "
            }
        ],
        "question": "who is the daughter of ingrid bergman married to",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "marry-01"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "daughter"
            ],
            [
                "name"
            ],
            [
                "bergman"
            ],
            [
                "ingrid"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "marry-01"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "daughter"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bergman"
                    ],
                    [
                        "ingrid"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(m / marry-01 :ARG1 (p / person :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Ingrid\" :op2 \"Bergman\")) :ARG2 (d / daughter))) :ARG2 (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how deep is lake placid\nList of semantic frames: "
            }
        ],
        "question": "how deep is lake placid",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "deep-02"
            ],
            [
                "lake"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "lake"
            ],
            [
                "placid"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "deep-02"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "placid"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / deep-02 :ARG1 (l / lake :name (n / name :op1 \"Lake\" :op2 \"Placid\")) :quant (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: show me all museums in london\nList of semantic frames: "
            }
        ],
        "question": "show me all museums in london",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "museum"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "london"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "museum"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "london"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (m / museum :mod (a / all) :location (c / city :name (n / name :op1 \"London\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which caves have more than 3 entrances\nList of semantic frames: "
            }
        ],
        "question": "which caves have more than 3 entrances",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "cave"
            ],
            [
                "enter-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "more-than"
            ],
            [
                "3"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "cave"
                    ],
                    [
                        "enter-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "3"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / cave :mod (a / amr-unknown)) :ARG1 (e / enter-01 :quant (m / more-than :op1 3)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the tallest player of the atlanta falcons\nList of semantic frames: "
            }
        ],
        "question": "who is the tallest player of the atlanta falcons",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "have-org-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "tall"
            ],
            [
                "most"
            ],
            [
                "person"
            ],
            [
                "team"
            ],
            [
                "play-01"
            ],
            [
                "name"
            ],
            [
                "atlanta"
            ],
            [
                "falcons"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "tall"
                    ],
                    [
                        "most"
                    ],
                    [
                        "person"
                    ],
                    [
                        "team"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "name"
                    ],
                    [
                        "atlanta"
                    ],
                    [
                        "falcons"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (a / amr-unknown) :ARG2 (t / tall) :ARG3 (m / most) :ARG5 (p3 / person :ARG0-of (h2 / have-org-role-91 :ARG1 (t2 / team :name (n / name :op1 \"Atlanta\" :op2 \"Falcons\")) :ARG3 (p2 / play-01 :ARG0 p3))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what are the top-10 action role-playing video games according to ign\nList of semantic frames: "
            }
        ],
        "question": "what are the top-10 action role-playing video games according to ign",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "say-01"
            ],
            [
                "game"
            ],
            [
                "publication"
            ],
            [
                "10"
            ],
            [
                "video"
            ],
            [
                "play-02"
            ],
            [
                "top"
            ],
            [
                "amr-unknown"
            ],
            [
                "act-02"
            ],
            [
                "name"
            ],
            [
                "role"
            ],
            [
                "ign"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "say-01"
                    ],
                    [
                        "game"
                    ],
                    [
                        "publication"
                    ],
                    [
                        "10"
                    ],
                    [
                        "video"
                    ],
                    [
                        "play-02"
                    ],
                    [
                        "top"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "act-02"
                    ],
                    [
                        "name"
                    ],
                    [
                        "role"
                    ],
                    [
                        "ign"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / game :quant 10 :mod (v / video) :mod (p / play-02 :ARG1 (r / role)) :mod (t / top) :domain (a / amr-unknown) :ARG1-of (s / say-01 :ARG0 (p2 / publication :name (n / name :op1 \"IGN\"))) :mod (a2 / act-02))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all writers that won the nobel prize in literature\nList of semantic frames: "
            }
        ],
        "question": "give me all writers that won the nobel prize in literature",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "write-01"
            ],
            [
                "win-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "award"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "in"
            ],
            [
                "literature"
            ],
            [
                "nobel"
            ],
            [
                "prize"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "write-01"
                    ],
                    [
                        "win-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "award"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "in"
                    ],
                    [
                        "literature"
                    ],
                    [
                        "nobel"
                    ],
                    [
                        "prize"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (w / write-01) :ARG0-of (w2 / win-01 :ARG1 (a / award :name (n / name :op1 \"Nobel\" :op2 \"Prize\" :op3 \"in\" :op4 \"literature\"))) :mod (a2 / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: show me all basketball players that are higher than 2 meters\nList of semantic frames: "
            }
        ],
        "question": "show me all basketball players that are higher than 2 meters",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "play-01"
            ],
            [
                "have-degree-91"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "basketball"
            ],
            [
                "high-02"
            ],
            [
                "more-than"
            ],
            [
                "all"
            ],
            [
                "distance-quantity"
            ],
            [
                "2"
            ],
            [
                "meter"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "basketball"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "all"
                    ],
                    [
                        "distance-quantity"
                    ],
                    [
                        "2"
                    ],
                    [
                        "meter"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (p2 / play-01 :ARG1 (b / basketball)) :ARG1-of (h / have-degree-91 :ARG2 (h2 / high-02 :ARG1 p) :ARG3 (m / more-than :op1 (d / distance-quantity :quant 2 :unit (m2 / meter)))) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: when was the statue of liberty built\nList of semantic frames: "
            }
        ],
        "question": "when was the statue of liberty built",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "build-01"
            ],
            [
                "work-of-art"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "statue"
            ],
            [
                "of"
            ],
            [
                "liberty"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "build-01"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "statue"
                    ],
                    [
                        "of"
                    ],
                    [
                        "liberty"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / build-01 :ARG1 (w / work-of-art :name (n / name :op1 \"Statue\" :op2 \"of\" :op3 \"Liberty\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which states border illinois\nList of semantic frames: "
            }
        ],
        "question": "which states border illinois",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "border-01"
            ],
            [
                "state"
            ],
            [
                "state"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "illinois"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "border-01"
                    ],
                    [
                        "state"
                    ],
                    [
                        "state"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "illinois"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / border-01 :ARG1 (s2 / state :mod (a / amr-unknown)) :ARG2 (s / state :name (n / name :op1 \"Illinois\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who developed minecraft\nList of semantic frames: "
            }
        ],
        "question": "who developed minecraft",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "develop-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "product"
            ],
            [
                "name"
            ],
            [
                "minecraft"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "develop-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "product"
                    ],
                    [
                        "name"
                    ],
                    [
                        "minecraft"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / develop-02 :ARG0 (a / amr-unknown) :ARG1 (p / product :name (n / name :op1 \"Minecraft\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: where did hillel slovak die\nList of semantic frames: "
            }
        ],
        "question": "where did hillel slovak die",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "die-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "hillel"
            ],
            [
                "slovak"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "die-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hillel"
                    ],
                    [
                        "slovak"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / die-01 :ARG1 (p / person :name (n / name :op1 \"Hillel\" :op2 \"Slovak\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what movies does jesse eisenberg play in\nList of semantic frames: "
            }
        ],
        "question": "what movies does jesse eisenberg play in",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "play-02"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "jesse"
            ],
            [
                "eisenberg"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-02"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "jesse"
                    ],
                    [
                        "eisenberg"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-02 :ARG0 (p2 / person :name (n / name :op1 \"Jesse\" :op2 \"Eisenberg\")) :location (m / movie :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all cosmonauts\nList of semantic frames: "
            }
        ],
        "question": "give me all cosmonauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "cosmonaut"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "all"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "cosmonaut"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "all"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / cosmonaut :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all swiss non-profit organizations\nList of semantic frames: "
            }
        ],
        "question": "give me all swiss non-profit organizations",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "profit-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "organization"
            ],
            [
                "i"
            ],
            [
                "-"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "switzerland"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "profit-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "i"
                    ],
                    [
                        "-"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "switzerland"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / organization :ARG0-of (p / profit-01 :polarity -) :mod (a / all) :mod (c / country :name (n / name :op1 \"Switzerland\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which presidents were born in 1945\nList of semantic frames: "
            }
        ],
        "question": "which presidents were born in 1945",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "date-entity"
            ],
            [
                "president"
            ],
            [
                "amr-unknown"
            ],
            [
                "1945"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "president"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "1945"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :ARG0-of (h / have-org-role-91 :ARG2 (p2 / president)) :mod (a / amr-unknown)) :time (d / date-entity :year 1945))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what kind of music did lou reed play\nList of semantic frames: "
            }
        ],
        "question": "what kind of music did lou reed play",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "play-11"
            ],
            [
                "person"
            ],
            [
                "music"
            ],
            [
                "name"
            ],
            [
                "kind-yy"
            ],
            [
                "lou"
            ],
            [
                "reed"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-11"
                    ],
                    [
                        "person"
                    ],
                    [
                        "music"
                    ],
                    [
                        "name"
                    ],
                    [
                        "kind-yy"
                    ],
                    [
                        "lou"
                    ],
                    [
                        "reed"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-11 :ARG0 (p2 / person :name (n / name :op1 \"Lou\" :op2 \"Reed\")) :ARG1 (m / music :mod (k / kind-yy :mod (a / amr-unknown))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: where do the red sox play\nList of semantic frames: "
            }
        ],
        "question": "where do the red sox play",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "play-01"
            ],
            [
                "team"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "red"
            ],
            [
                "sox"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-01"
                    ],
                    [
                        "team"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "red"
                    ],
                    [
                        "sox"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-01 :ARG0 (t / team :name (n / name :op1 \"Red\" :op2 \"Sox\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: show a list of soccer clubs that play in the bundesliga\nList of semantic frames: "
            }
        ],
        "question": "show a list of soccer clubs that play in the bundesliga",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "list-01"
            ],
            [
                "play-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "thing"
            ],
            [
                "club"
            ],
            [
                "event"
            ],
            [
                "soccer"
            ],
            [
                "name"
            ],
            [
                "bundesliga"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "list-01"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "thing"
                    ],
                    [
                        "club"
                    ],
                    [
                        "event"
                    ],
                    [
                        "soccer"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bundesliga"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (t / thing :ARG2-of (l / list-01 :ARG1 (c / club :mod (s2 / soccer) :ARG0-of (p / play-01 :ARG2 (e / event :name (n / name :op1 \"Bundesliga\")))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which volcanos in japan erupted since 2000\nList of semantic frames: "
            }
        ],
        "question": "which volcanos in japan erupted since 2000",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "erupt-01"
            ],
            [
                "since"
            ],
            [
                "volcano"
            ],
            [
                "date-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "2000"
            ],
            [
                "name"
            ],
            [
                "japan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "erupt-01"
                    ],
                    [
                        "since"
                    ],
                    [
                        "volcano"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "2000"
                    ],
                    [
                        "name"
                    ],
                    [
                        "japan"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(e / erupt-01 :ARG1 (v / volcano :mod (a / amr-unknown) :location (c / country :name (n / name :op1 \"Japan\"))) :time (s / since :op1 (d / date-entity :year 2000)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which bridges cross the seine\nList of semantic frames: "
            }
        ],
        "question": "which bridges cross the seine",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "cross-02"
            ],
            [
                "bridge"
            ],
            [
                "river"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "seine"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cross-02"
                    ],
                    [
                        "bridge"
                    ],
                    [
                        "river"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "seine"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cross-02 :ARG0 (b / bridge :mod (a / amr-unknown)) :ARG1 (r / river :name (n / name :op1 \"Seine\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which bridges cross the seine\nList of semantic frames: "
            }
        ],
        "question": "which bridges cross the seine",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "cross-02"
            ],
            [
                "bridge"
            ],
            [
                "river"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "seine"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cross-02"
                    ],
                    [
                        "bridge"
                    ],
                    [
                        "river"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "seine"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cross-02 :ARG0 (b / bridge :mod (a / amr-unknown)) :ARG1 (r / river :name (n / name :op1 \"Seine\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many films did hal roach produce\nList of semantic frames: "
            }
        ],
        "question": "how many films did hal roach produce",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "produce-01"
            ],
            [
                "person"
            ],
            [
                "film"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "hal"
            ],
            [
                "roach"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "produce-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "film"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "hal"
                    ],
                    [
                        "roach"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / produce-01 :ARG0 (p2 / person :name (n / name :op1 \"Hal\" :op2 \"Roach\")) :ARG1 (f / film :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all danish movies\nList of semantic frames: "
            }
        ],
        "question": "give me all danish movies",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "movie"
            ],
            [
                "i"
            ],
            [
                "language"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "denmark"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "i"
                    ],
                    [
                        "language"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "denmark"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (m / movie :medium (l / language :name (n / name :op1 \"Denmark\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the most frequent cause of death\nList of semantic frames: "
            }
        ],
        "question": "what is the most frequent cause of death",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "cause-01"
            ],
            [
                "have-degree-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "die-01"
            ],
            [
                "frequent-02"
            ],
            [
                "most"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cause-01"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "die-01"
                    ],
                    [
                        "frequent-02"
                    ],
                    [
                        "most"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cause-01 :ARG0 (a / amr-unknown :ARG1-of (h / have-degree-91 :ARG2 (f / frequent-02 :ARG1 a) :ARG3 (m / most))) :ARG1 (d / die-01))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who are the four youngest mvp basketball players\nList of semantic frames: "
            }
        ],
        "question": "who are the four youngest mvp basketball players",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "play-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "young"
            ],
            [
                "most"
            ],
            [
                "person"
            ],
            [
                "4"
            ],
            [
                "award"
            ],
            [
                "name"
            ],
            [
                "mvp"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "young"
                    ],
                    [
                        "most"
                    ],
                    [
                        "person"
                    ],
                    [
                        "4"
                    ],
                    [
                        "award"
                    ],
                    [
                        "name"
                    ],
                    [
                        "mvp"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (a4 / amr-unknown :quant 4) :ARG2 (y / young) :ARG3 (m2 / most) :ARG5 (p3 / person :ARG0-of (p4 / play-01) :mod (a2 / award :name (n / name :op1 \"MVP\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all companies in munich\nList of semantic frames: "
            }
        ],
        "question": "give me all companies in munich",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "company"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "munich"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "company"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "munich"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / company :mod (a / all) :location (c2 / city :name (n / name :op1 \"Munich\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the capitals of all countries that the himalayas run through\nList of semantic frames: "
            }
        ],
        "question": "give me the capitals of all countries that the himalayas run through",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "run-04"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "city"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "capital"
            ],
            [
                "mountain"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "himalayas"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "run-04"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "city"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "capital"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "himalayas"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / city :ARG0-of (h / have-org-role-91 :ARG1 (c2 / country :path-of (r / run-04 :ARG1 (m / mountain :name (n / name :op1 \"Himalayas\"))) :mod (a / all)) :ARG2 (c3 / capital))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many movies did park chan-wook direct\nList of semantic frames: "
            }
        ],
        "question": "how many movies did park chan-wook direct",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "direct-01"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "park"
            ],
            [
                "chan-wook"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "direct-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "park"
                    ],
                    [
                        "chan-wook"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Park\" :op2 \"Chan-wook\")) :ARG1 (m / movie :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many airlines are there\nList of semantic frames: "
            }
        ],
        "question": "how many airlines are there",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "airline"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "airline"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            2
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / airline :quant (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all islands that belong to japan\nList of semantic frames: "
            }
        ],
        "question": "give me all islands that belong to japan",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "belong-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "island"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "japan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "belong-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "island"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "japan"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (i2 / island :mod (a / all) :ARG0-of (b / belong-01 :ARG1 (c / country :name (n / name :op1 \"Japan\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many inhabitants does maribor have\nList of semantic frames: "
            }
        ],
        "question": "how many inhabitants does maribor have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "inhabit-01"
            ],
            [
                "city"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "maribor"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "inhabit-01"
                    ],
                    [
                        "city"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "maribor"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / city :name (n / name :op1 \"Maribor\")) :ARG1 (p / person :ARG0-of (i2 / inhabit-01 :ARG1 c) :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all apollo 14 astronauts\nList of semantic frames: "
            }
        ],
        "question": "give me all apollo 14 astronauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "astronaut"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "spaceship"
            ],
            [
                "name"
            ],
            [
                "apollo"
            ],
            [
                "14"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "astronaut"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "spaceship"
                    ],
                    [
                        "name"
                    ],
                    [
                        "apollo"
                    ],
                    [
                        "14"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (a / astronaut :mod (a2 / all) :mod (s / spaceship :name (n / name :op1 \"Apollo\" :op2 \"14\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which companies have more than 1 million employees\nList of semantic frames: "
            }
        ],
        "question": "which companies have more than 1 million employees",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "employ-01"
            ],
            [
                "company"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "more-than"
            ],
            [
                "1000000"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "employ-01"
                    ],
                    [
                        "company"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "1000000"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG1 (c / company :mod (a / amr-unknown)) :ARG1 (p / person :ARG1-of (e / employ-01 :ARG0 c) :quant (m / more-than :op1 1000000)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: in which films directed by garry marshall was julia roberts starring\nList of semantic frames: "
            }
        ],
        "question": "in which films directed by garry marshall was julia roberts starring",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "star-01"
            ],
            [
                "direct-01"
            ],
            [
                "person"
            ],
            [
                "film"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "julia"
            ],
            [
                "roberts"
            ],
            [
                "garry"
            ],
            [
                "marshall"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "star-01"
                    ],
                    [
                        "direct-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "film"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "julia"
                    ],
                    [
                        "roberts"
                    ],
                    [
                        "garry"
                    ],
                    [
                        "marshall"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / star-01 :ARG1 (p / person :name (n / name :op1 \"Julia\" :op2 \"Roberts\")) :ARG2 (f / film :mod (a / amr-unknown) :ARG1-of (d / direct-01 :ARG0 (p2 / person :name (n2 / name :op1 \"Garry\" :op2 \"Marshall\")))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all soccer clubs in the premier league\nList of semantic frames: "
            }
        ],
        "question": "give me all soccer clubs in the premier league",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "club"
            ],
            [
                "i"
            ],
            [
                "soccer"
            ],
            [
                "all"
            ],
            [
                "league"
            ],
            [
                "name"
            ],
            [
                "premier"
            ],
            [
                "league"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "club"
                    ],
                    [
                        "i"
                    ],
                    [
                        "soccer"
                    ],
                    [
                        "all"
                    ],
                    [
                        "league"
                    ],
                    [
                        "name"
                    ],
                    [
                        "premier"
                    ],
                    [
                        "league"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / club :mod (s / soccer :prep-in (l / league :name (n / name :op1 \"Premier\" :op2 \"League\"))) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the highest place of the urals\nList of semantic frames: "
            }
        ],
        "question": "what is the highest place of the urals",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "mountain"
            ],
            [
                "high-02"
            ],
            [
                "most"
            ],
            [
                "place"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "urals"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "place"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "urals"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h3 / have-degree-91 :ARG1 (a / amr-unknown) :ARG2 (h / high-02 :ARG1 a) :ARG3 (m / most) :ARG5 (p / place :part-of (m2 / mountain :name (n / name :op1 \"Urals\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the governor of wyoming\nList of semantic frames: "
            }
        ],
        "question": "who is the governor of wyoming",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "govern-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "state"
            ],
            [
                "name"
            ],
            [
                "wyoming"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "govern-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "state"
                    ],
                    [
                        "name"
                    ],
                    [
                        "wyoming"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / govern-01 :ARG0 (a / amr-unknown) :ARG1 (s / state :name (n / name :op1 \"Wyoming\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: where did the architect of the eiffel tower study\nList of semantic frames: "
            }
        ],
        "question": "where did the architect of the eiffel tower study",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "study-01"
            ],
            [
                "architect"
            ],
            [
                "amr-unknown"
            ],
            [
                "tower"
            ],
            [
                "name"
            ],
            [
                "eiffel"
            ],
            [
                "tower"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "study-01"
                    ],
                    [
                        "architect"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "tower"
                    ],
                    [
                        "name"
                    ],
                    [
                        "eiffel"
                    ],
                    [
                        "tower"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / study-01 :ARG0 (a / architect :mod (t / tower :name (n / name :op1 \"Eiffel\" :op2 \"Tower\"))) :location (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all world heritage sites designated within the past two years\nList of semantic frames: "
            }
        ],
        "question": "give me all world heritage sites designated within the past two years",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "designate-01"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "site"
            ],
            [
                "before"
            ],
            [
                "all"
            ],
            [
                "heritage"
            ],
            [
                "now"
            ],
            [
                "temporal-quantity"
            ],
            [
                "world"
            ],
            [
                "2"
            ],
            [
                "year"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "designate-01"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "site"
                    ],
                    [
                        "before"
                    ],
                    [
                        "all"
                    ],
                    [
                        "heritage"
                    ],
                    [
                        "now"
                    ],
                    [
                        "temporal-quantity"
                    ],
                    [
                        "world"
                    ],
                    [
                        "2"
                    ],
                    [
                        "year"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (s / site :mod (a / all) :ARG1-of (d / designate-01 :time (b / before :op1 (n2 / now) :duration (t / temporal-quantity :quant 2 :unit (y2 / year)))) :mod (h / heritage :mod (w / world))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all actors who were born in paris after 1950\nList of semantic frames: "
            }
        ],
        "question": "give me all actors who were born in paris after 1950",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "city"
            ],
            [
                "after"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "date-entity"
            ],
            [
                "paris"
            ],
            [
                "1950"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "city"
                    ],
                    [
                        "after"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "paris"
                    ],
                    [
                        "1950"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Paris\")) :time (a3 / after :op1 (d / date-entity :year 1950)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which movies star both liz taylor and richard burton\nList of semantic frames: "
            }
        ],
        "question": "which movies star both liz taylor and richard burton",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "star-01"
            ],
            [
                "and"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "taylor"
            ],
            [
                "liz"
            ],
            [
                "richard"
            ],
            [
                "burton"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "star-01"
                    ],
                    [
                        "and"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "taylor"
                    ],
                    [
                        "liz"
                    ],
                    [
                        "richard"
                    ],
                    [
                        "burton"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / star-01 :ARG1 (a / and :op1 (p / person :name (n / name :op1 \"Liz\" :op2 \"Taylor\")) :op2 (p2 / person :name (n2 / name :op1 \"Richard\" :op2 \"Burton\"))) :ARG2 (m / movie :mod (a2 / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all australian nonprofit organizations\nList of semantic frames: "
            }
        ],
        "question": "give me all australian nonprofit organizations",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "profit-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "organization"
            ],
            [
                "i"
            ],
            [
                "-"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "australia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "profit-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "i"
                    ],
                    [
                        "-"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "australia"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / organization :ARG0-of (p / profit-01 :polarity -) :mod (a / all) :mod (c / country :name (n / name :op1 \"Australia\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which pope succeeded john paul ii\nList of semantic frames: "
            }
        ],
        "question": "which pope succeeded john paul ii",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "succeed-02"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "pope"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "paul"
            ],
            [
                "ii"
            ],
            [
                "john"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "succeed-02"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "pope"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "paul"
                    ],
                    [
                        "ii"
                    ],
                    [
                        "john"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / succeed-02 :ARG0 (p / person :ARG0-of (h / have-org-role-91 :ARG2 (p2 / pope)) :mod (a / amr-unknown)) :ARG1 (p3 / person :name (n / name :op1 \"John\" :op2 \"Paul\" :op3 \"II\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all esa astronauts\nList of semantic frames: "
            }
        ],
        "question": "give me all esa astronauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "organization"
            ],
            [
                "astronaut"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "esa"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "astronaut"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "esa"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :mod (a2 / all) :ARG0-of (h / have-org-role-91 :ARG1 (o / organization :name (n / name :op1 \"ESA\")) :ARG2 (a / astronaut))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who was president of pakistan in 1978\nList of semantic frames: "
            }
        ],
        "question": "who was president of pakistan in 1978",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "president"
            ],
            [
                "date-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "1978"
            ],
            [
                "name"
            ],
            [
                "pakistan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "president"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "1978"
                    ],
                    [
                        "name"
                    ],
                    [
                        "pakistan"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-org-role-91 :ARG0 (a / amr-unknown) :ARG1 (c / country :name (n / name :op1 \"Pakistan\")) :ARG2 (p2 / president) :time (d / date-entity :year 1978))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the owner of rolls-royce\nList of semantic frames: "
            }
        ],
        "question": "who is the owner of rolls-royce",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "own-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "rolls-royce"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "own-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "rolls-royce"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(o / own-01 :ARG0 (a / amr-unknown) :ARG1 (c / company :name (n / name :op1 \"Rolls-Royce\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many museums does paris have\nList of semantic frames: "
            }
        ],
        "question": "how many museums does paris have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "city"
            ],
            [
                "museum"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "paris"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "city"
                    ],
                    [
                        "museum"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "paris"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / city :name (n / name :op1 \"Paris\")) :ARG1 (m / museum :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: where was jfk assassinated\nList of semantic frames: "
            }
        ],
        "question": "where was jfk assassinated",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "assassinate-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "jfk"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "assassinate-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "jfk"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / assassinate-01 :ARG1 (p / person :name (n / name :op1 \"JFK\")) :location (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all federal chancellors of germany\nList of semantic frames: "
            }
        ],
        "question": "give me all federal chancellors of germany",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "chancellor"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "federal"
            ],
            [
                "germany"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "chancellor"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "federal"
                    ],
                    [
                        "germany"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (h / have-org-role-91 :ARG1 (c / country :name (n / name :op1 \"Germany\")) :ARG2 (c2 / chancellor :mod (f / federal))) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: show me everyone who was born on halloween\nList of semantic frames: "
            }
        ],
        "question": "show me everyone who was born on halloween",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "everyone"
            ],
            [
                "i"
            ],
            [
                "festival"
            ],
            [
                "name"
            ],
            [
                "halloween"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "everyone"
                    ],
                    [
                        "i"
                    ],
                    [
                        "festival"
                    ],
                    [
                        "name"
                    ],
                    [
                        "halloween"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (e / everyone :ARG1-of (b / bear-02 :time (f / festival :name (n / name :op1 \"Halloween\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which beer originated in ireland\nList of semantic frames: "
            }
        ],
        "question": "which beer originated in ireland",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "originate-01"
            ],
            [
                "beer"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "ireland"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "originate-01"
                    ],
                    [
                        "beer"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "ireland"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(o / originate-01 :ARG1 (b / beer :mod (a / amr-unknown)) :ARG2 (c / country :name (n / name :op1 \"Ireland\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: to which countries does the himalayan mountain system extend\nList of semantic frames: "
            }
        ],
        "question": "to which countries does the himalayan mountain system extend",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "extend-01"
            ],
            [
                "system"
            ],
            [
                "country"
            ],
            [
                "mountain"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "himalaya"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "extend-01"
                    ],
                    [
                        "system"
                    ],
                    [
                        "country"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "himalaya"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(e / extend-01 :ARG1 (s / system :mod (m / mountain :name (n / name :op1 \"Himalaya\"))) :ARG4 (c / country :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which actors were born in germany\nList of semantic frames: "
            }
        ],
        "question": "which actors were born in germany",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "act-01"
            ],
            [
                "person"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "germany"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "germany"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / amr-unknown)) :location (c / country :name (n / name :op1 \"Germany\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how much carbs does peanut butter have\nList of semantic frames: "
            }
        ],
        "question": "how much carbs does peanut butter have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "butter"
            ],
            [
                "carb"
            ],
            [
                "peanut"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "butter"
                    ],
                    [
                        "carb"
                    ],
                    [
                        "peanut"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (b / butter :mod (p / peanut)) :ARG1 (c / carb :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who produced the most films\nList of semantic frames: "
            }
        ],
        "question": "who produced the most films",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "produce-01"
            ],
            [
                "have-quant-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "film"
            ],
            [
                "most"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "produce-01"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "film"
                    ],
                    [
                        "most"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / produce-01 :ARG0 (a / amr-unknown) :ARG1 (f / film :ARG1-of (h / have-quant-91 :ARG3 (m / most))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many employees does google have\nList of semantic frames: "
            }
        ],
        "question": "how many employees does google have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "employ-01"
            ],
            [
                "company"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "google"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "employ-01"
                    ],
                    [
                        "company"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "google"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / company :name (n / name :op1 \"Google\")) :ARG1 (p / person :ARG1-of (e / employ-01 :ARG0 c) :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all actors who were born in berlin\nList of semantic frames: "
            }
        ],
        "question": "give me all actors who were born in berlin",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "city"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "berlin"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "city"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "berlin"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Berlin\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which music albums contain the song last christmas\nList of semantic frames: "
            }
        ],
        "question": "which music albums contain the song last christmas",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "contain-01"
            ],
            [
                "album"
            ],
            [
                "song"
            ],
            [
                "music"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "last"
            ],
            [
                "christmas"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "contain-01"
                    ],
                    [
                        "album"
                    ],
                    [
                        "song"
                    ],
                    [
                        "music"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "last"
                    ],
                    [
                        "christmas"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / contain-01 :ARG0 (a / album :mod (m / music) :mod (a2 / amr-unknown)) :ARG1 (s / song :name (n / name :op1 \"Last\" :op2 \"Christmas\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: when was alberta admitted as province\nList of semantic frames: "
            }
        ],
        "question": "when was alberta admitted as province",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "admit-02"
            ],
            [
                "have-org-role-91"
            ],
            [
                "province"
            ],
            [
                "amr-unknown"
            ],
            [
                "province"
            ],
            [
                "name"
            ],
            [
                "alberta"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "admit-02"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "province"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "province"
                    ],
                    [
                        "name"
                    ],
                    [
                        "alberta"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / admit-02 :ARG1 (p / province :name (n / name :op1 \"Alberta\") :ARG0-of (h / have-org-role-91 :ARG2 (p2 / province))) :time (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: how many missions does the soyuz programme have\nList of semantic frames: "
            }
        ],
        "question": "how many missions does the soyuz programme have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "programme"
            ],
            [
                "mission-01"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "soyuz"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "programme"
                    ],
                    [
                        "mission-01"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "soyuz"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (p / programme :name (n / name :op1 \"Soyuz\")) :ARG1 (m / mission-01 :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all the tv shows with neil patrick harris\nList of semantic frames: "
            }
        ],
        "question": "give me all the tv shows with neil patrick harris",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "show-04"
            ],
            [
                "i"
            ],
            [
                "television"
            ],
            [
                "person"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "neil"
            ],
            [
                "patrick"
            ],
            [
                "harris"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "show-04"
                    ],
                    [
                        "i"
                    ],
                    [
                        "television"
                    ],
                    [
                        "person"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "neil"
                    ],
                    [
                        "patrick"
                    ],
                    [
                        "harris"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (s / show-04 :ARG3 (t / television) :prep-with (p / person :name (n / name :op1 \"Neil\" :op2 \"Patrick\" :op3 \"Harris\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: when were the hells angels founded\nList of semantic frames: "
            }
        ],
        "question": "when were the hells angels founded",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "found-01"
            ],
            [
                "organization"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "hells"
            ],
            [
                "angels"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "found-01"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hells"
                    ],
                    [
                        "angels"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(f / found-01 :ARG1 (o / organization :name (n / name :op1 \"Hells\" :op2 \"Angels\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the net income of apple\nList of semantic frames: "
            }
        ],
        "question": "what is the net income of apple",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "income"
            ],
            [
                "net"
            ],
            [
                "amr-unknown"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "apple"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "income"
                    ],
                    [
                        "net"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "apple"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(i2 / income :mod (n / net) :domain (a / amr-unknown) :poss (c / company :name (n2 / name :op1 \"Apple\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all swedish holidays\nList of semantic frames: "
            }
        ],
        "question": "give me all swedish holidays",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "holiday"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "sweden"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "holiday"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "sweden"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (h / holiday :mod (c / country :name (n / name :op1 \"Sweden\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: in which city was the former dutch queen juliana buried\nList of semantic frames: "
            }
        ],
        "question": "in which city was the former dutch queen juliana buried",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bury-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "country"
            ],
            [
                "queen"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "former"
            ],
            [
                "juliana"
            ],
            [
                "netherlands"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bury-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "country"
                    ],
                    [
                        "queen"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "former"
                    ],
                    [
                        "juliana"
                    ],
                    [
                        "netherlands"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bury-01 :ARG1 (p / person :name (n / name :op1 \"Juliana\") :ARG0-of (h / have-org-role-91 :ARG1 (c / country :name (n2 / name :op1 \"Netherlands\")) :ARG2 (q / queen :time (f / former)))) :ARG2 (c2 / city :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: list all the musicals with music by leonard bernstein\nList of semantic frames: "
            }
        ],
        "question": "list all the musicals with music by leonard bernstein",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "list-01"
            ],
            [
                "have-03"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "musical"
            ],
            [
                "music"
            ],
            [
                "all"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "leonard"
            ],
            [
                "bernstein"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "list-01"
                    ],
                    [
                        "have-03"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "musical"
                    ],
                    [
                        "music"
                    ],
                    [
                        "all"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "leonard"
                    ],
                    [
                        "bernstein"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / list-01 :mode imperative :ARG0 (y / you) :ARG1 (m / musical :mod (a / all) :ARG0-of (h / have-03 :ARG1 (m2 / music :prep-by (p / person :name (n / name :op1 \"Leonard\" :op2 \"Bernstein\"))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all companies in the advertising industry\nList of semantic frames: "
            }
        ],
        "question": "give me all companies in the advertising industry",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "company"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "industry"
            ],
            [
                "advertise-01"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "company"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "industry"
                    ],
                    [
                        "advertise-01"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / company :mod (a / all) :prep-in (i2 / industry :mod (a2 / advertise-01))) :ARG1 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the largest metropolitan area in washington state\nList of semantic frames: "
            }
        ],
        "question": "what is the largest metropolitan area in washington state",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "large"
            ],
            [
                "most"
            ],
            [
                "area"
            ],
            [
                "state"
            ],
            [
                "metropolitan"
            ],
            [
                "name"
            ],
            [
                "washington"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "large"
                    ],
                    [
                        "most"
                    ],
                    [
                        "area"
                    ],
                    [
                        "state"
                    ],
                    [
                        "metropolitan"
                    ],
                    [
                        "name"
                    ],
                    [
                        "washington"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (a3 / amr-unknown) :ARG2 (l / large) :ARG3 (m2 / most) :ARG5 (a2 / area :location (s / state :name (n / name :op1 \"Washington\")) :mod (m / metropolitan)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who killed john lennon\nList of semantic frames: "
            }
        ],
        "question": "who killed john lennon",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "kill-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "john"
            ],
            [
                "lennon"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "kill-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "john"
                    ],
                    [
                        "lennon"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(k / kill-01 :ARG0 (a / amr-unknown) :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Lennon\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which writers studied in istanbul\nList of semantic frames: "
            }
        ],
        "question": "which writers studied in istanbul",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "study-01"
            ],
            [
                "write-01"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "istanbul"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "study-01"
                    ],
                    [
                        "write-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "istanbul"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / study-01 :ARG0 (p / person :ARG0-of (w / write-01) :mod (a / amr-unknown)) :location (c / city :name (n / name :op1 \"Istanbul\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all australian metalcore bands\nList of semantic frames: "
            }
        ],
        "question": "give me all australian metalcore bands",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "band"
            ],
            [
                "i"
            ],
            [
                "metalcore"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "australia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "band"
                    ],
                    [
                        "i"
                    ],
                    [
                        "metalcore"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "australia"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (b / band :mod (m / metalcore) :mod (a / all) :mod (c / country :name (n / name :op1 \"Australia\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which countries adopted the euro\nList of semantic frames: "
            }
        ],
        "question": "which countries adopted the euro",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "adopt-01"
            ],
            [
                "country"
            ],
            [
                "euro"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "adopt-01"
                    ],
                    [
                        "country"
                    ],
                    [
                        "euro"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            4
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / adopt-01 :ARG0 (c / country :mod (a2 / amr-unknown)) :ARG1 (e / euro))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',)]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',)]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',)]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all types of eating disorders\nList of semantic frames: "
            }
        ],
        "question": "give me all types of eating disorders",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "order-03"
            ],
            [
                "i"
            ],
            [
                "-"
            ],
            [
                "eat-01"
            ],
            [
                "type"
            ],
            [
                "all"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "order-03"
                    ],
                    [
                        "i"
                    ],
                    [
                        "-"
                    ],
                    [
                        "eat-01"
                    ],
                    [
                        "type"
                    ],
                    [
                        "all"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / order-03 :polarity - :ARG1 (e / eat-01) :mod (t / type :mod (a / all))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuris formul\u0117s 1 pilotas turi daugiausiai lenktyni\u0173\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuris formul\u0117s 1 pilotas turi daugiausiai lenktyni\u0173",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "drive-01"
            ],
            [
                "have-03"
            ],
            [
                "have-quant-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "race"
            ],
            [
                "race-02"
            ],
            [
                "most"
            ],
            [
                "name"
            ],
            [
                "formula"
            ],
            [
                "1"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "drive-01"
                    ],
                    [
                        "have-03"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "race"
                    ],
                    [
                        "race-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "name"
                    ],
                    [
                        "formula"
                    ],
                    [
                        "1"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / drive-01 :ARG0 (a2 / amr-unknown :ARG0-of (h / have-03 :ARG1 (r2 / race-02 :ARG1-of (h2 / have-quant-91 :ARG3 (m / most))))) :ARG1 (r / race :name (n / name :op1 \"Formula\" :op2 \"1\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuris formul\u0117s 1 pilotas turi daugiausiai lenktyni\u0173\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuris formul\u0117s 1 pilotas turi daugiausiai lenktyni\u0173",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "be-from-91"
            ],
            [
                "company"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "sitecore"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-from-91"
                    ],
                    [
                        "company"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "sitecore"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-from-91 :ARG1 (c / company :name (n / name :op1 \"Sitecore\")) :ARG2 (c2 / country :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kur gim\u0117 frankas sinatra\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kur gim\u0117 frankas sinatra",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "place"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "frank"
            ],
            [
                "sinatra"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "place"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "frank"
                    ],
                    [
                        "sinatra"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / place :location-of (b / bear-02 :ARG1 (p2 / person :name (n / name :op1 \"Frank\" :op2 \"Sinatra\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: christianas bailas vaidino filme \u201eaksomin\u0117 aukso kasykla\u201c\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "christianas bailas vaidino filme \u201eaksomin\u0117 aukso kasykla\u201c",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "star-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "work-of-art"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "christian"
            ],
            [
                "bale"
            ],
            [
                "velvet"
            ],
            [
                "goldmine"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "star-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "christian"
                    ],
                    [
                        "bale"
                    ],
                    [
                        "velvet"
                    ],
                    [
                        "goldmine"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / star-01 :ARG1 (p / person :name (n / name :op1 \"Christian\" :op2 \"Bale\")) :ARG2 (w / work-of-art :name (n2 / name :op1 \"Velvet\" :op2 \"Goldmine\")) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra sonny ir cher s\u016bnus\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra sonny ir cher s\u016bnus",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-rel-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "and"
            ],
            [
                "son"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "sonny"
            ],
            [
                "cher"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "and"
                    ],
                    [
                        "son"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "sonny"
                    ],
                    [
                        "cher"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-rel-role-91 :ARG0 (a2 / amr-unknown) :ARG1 (a / and :op1 (p2 / person :name (n / name :op1 \"Sonny\")) :op2 (p3 / person :name (n2 / name :op1 \"Cher\"))) :ARG2 (s / son))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kiek etnini\u0173 grupi\u0173 gyvena slov\u0117nijoje\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kiek etnini\u0173 grupi\u0173 gyvena slov\u0117nijoje",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "live-01"
            ],
            [
                "group"
            ],
            [
                "country"
            ],
            [
                "ethnic"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "slovenia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "live-01"
                    ],
                    [
                        "group"
                    ],
                    [
                        "country"
                    ],
                    [
                        "ethnic"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "slovenia"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / live-01 :ARG0 (g / group :mod (e / ethnic) :quant (a / amr-unknown)) :location (c / country :name (n / name :op1 \"Slovenia\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kamer\u016bno sostin\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kamer\u016bno sostin\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "capital"
            ],
            [
                "name"
            ],
            [
                "cameroon"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "capital"
                    ],
                    [
                        "name"
                    ],
                    [
                        "cameroon"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-org-role-91 :ARG0 (a / amr-unknown) :ARG1 (c2 / country :name (n / name :op1 \"Cameroon\")) :ARG2 (c3 / capital))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: natalie portman gim\u0117 jav\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "natalie portman gim\u0117 jav",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "natalie"
            ],
            [
                "portman"
            ],
            [
                "united"
            ],
            [
                "states"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "natalie"
                    ],
                    [
                        "portman"
                    ],
                    [
                        "united"
                    ],
                    [
                        "states"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :name (n / name :op1 \"Natalie\" :op2 \"Portman\")) :location (c / country :name (n2 / name :op1 \"United\" :op2 \"States\")) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kiek puslapi\u0173 yra \u201ekaras ir taika\u201c\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kiek puslapi\u0173 yra \u201ekaras ir taika\u201c",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "book"
            ],
            [
                "page"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "war"
            ],
            [
                "and"
            ],
            [
                "peace"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "book"
                    ],
                    [
                        "page"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "war"
                    ],
                    [
                        "and"
                    ],
                    [
                        "peace"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (b / book :name (n / name :op1 \"War\" :op2 \"and\" :op3 \"Peace\")) :ARG1 (p / page :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra vyriausias meryl streep vaikas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra vyriausias meryl streep vaikas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-rel-role-91"
            ],
            [
                "have-degree-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "child"
            ],
            [
                "old"
            ],
            [
                "most"
            ],
            [
                "name"
            ],
            [
                "meryl"
            ],
            [
                "streep"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "child"
                    ],
                    [
                        "old"
                    ],
                    [
                        "most"
                    ],
                    [
                        "name"
                    ],
                    [
                        "meryl"
                    ],
                    [
                        "streep"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-rel-role-91 :ARG0 (a / amr-unknown) :ARG1 (p2 / person :name (n / name :op1 \"Meryl\" :op2 \"Streep\")) :ARG2 (c / child :ARG1-of (h2 / have-degree-91 :ARG2 (o / old) :ARG3 (m / most))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: k\u0105 rei\u0161kia santrumpa \"iycm\"\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "k\u0105 rei\u0161kia santrumpa \"iycm\"",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "stand-08"
            ],
            [
                "string-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "iycm"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "stand-08"
                    ],
                    [
                        "string-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "iycm"
                    ]
                ]
            },
            4
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / stand-08 :ARG0 (s2 / string-entity :value \"IYCM\") :ARG1 (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios vynuogi\u0173 veisl\u0117s auginamos oregone\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokios vynuogi\u0173 veisl\u0117s auginamos oregone",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "grow-03"
            ],
            [
                "grape"
            ],
            [
                "state"
            ],
            [
                "type"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "oregon"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "grow-03"
                    ],
                    [
                        "grape"
                    ],
                    [
                        "state"
                    ],
                    [
                        "type"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "oregon"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / grow-03 :ARG1 (g2 / grape :mod (t / type :mod (a / amr-unknown))) :location (s / state :name (n / name :op1 \"Oregon\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar jav prezidentas jacksonas dalyvavo kare\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar jav prezidentas jacksonas dalyvavo kare",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "involve-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "war-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "president"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "jackson"
            ],
            [
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "involve-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "war-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "president"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "jackson"
                    ],
                    [
                        "u.s."
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(i2 / involve-01 :ARG1 (p / person :name (n / name :op1 \"Jackson\") :ARG0-of (h / have-org-role-91 :ARG1 (c / country :name (n2 / name :op1 \"U.S.\")) :ARG2 (p2 / president))) :ARG2 (w / war-01) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kada buvo baigtas \u201etitanikas\u201c\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kada buvo baigtas \u201etitanikas\u201c",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "complete-01"
            ],
            [
                "ship"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "titanic"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "complete-01"
                    ],
                    [
                        "ship"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "titanic"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / complete-01 :ARG1 (s / ship :name (n / name :op1 \"Titanic\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar tesla gavo nobelio fizikos premij\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar tesla gavo nobelio fizikos premij\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "win-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "award"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "tesla"
            ],
            [
                "prize"
            ],
            [
                "in"
            ],
            [
                "physics"
            ],
            [
                "nobel"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "win-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "award"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "tesla"
                    ],
                    [
                        "prize"
                    ],
                    [
                        "in"
                    ],
                    [
                        "physics"
                    ],
                    [
                        "nobel"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / win-01 :ARG0 (p / person :name (n / name :op1 \"Tesla\")) :ARG1 (a2 / award :name (n3 / name :op1 \"nobel\" :op2 \"prize\" :op3 \"in\" :op4 \"physics\")) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar tesla gavo nobelio fizikos premij\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar tesla gavo nobelio fizikos premij\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "be-located-at-91"
            ],
            [
                "state"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "mexico"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-located-at-91"
                    ],
                    [
                        "state"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "mexico"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-located-at-91 :ARG1 (s / state :quant (a / amr-unknown)) :ARG2 (c / country :name (n / name :op1 \"Mexico\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: koks mokslininkas dalyvavo manheteno projekte ir turi nobelio premij\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "koks mokslininkas dalyvavo manheteno projekte ir turi nobelio premij\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "know-02"
            ],
            [
                "scientist"
            ],
            [
                "and"
            ],
            [
                "amr-unknown"
            ],
            [
                "event"
            ],
            [
                "award"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "project"
            ],
            [
                "manhattan"
            ],
            [
                "prize"
            ],
            [
                "nobel"
            ],
            [
                "peace"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "know-02"
                    ],
                    [
                        "scientist"
                    ],
                    [
                        "and"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "event"
                    ],
                    [
                        "award"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "project"
                    ],
                    [
                        "manhattan"
                    ],
                    [
                        "prize"
                    ],
                    [
                        "nobel"
                    ],
                    [
                        "peace"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(k / know-02 :ARG1 (s / scientist :mod (a / amr-unknown)) :ARG3 (a2 / and :op1 (e / event :name (n / name :op1 \"Manhattan\" :op2 \"Project\")) :op2 (a3 / award :name (n2 / name :op1 \"Nobel\" :op2 \"Peace\" :op3 \"Prize\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kiek kainavo filmas \u201clego\u201d? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kiek kainavo filmas \u201clego\u201d? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "cost-01"
            ],
            [
                "work-of-art"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "lego"
            ],
            [
                "movie"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cost-01"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "lego"
                    ],
                    [
                        "movie"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cost-01 :ARG1 (w / work-of-art :name (n / name :op1 \"Lego\" :op2 \"Movie\")) :ARG2 (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas para\u0161\u0117 muzik\u0105 \u201charoldui ir modui\u201d? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas para\u0161\u0117 muzik\u0105 \u201charoldui ir modui\u201d? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "compose-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "music"
            ],
            [
                "work-of-art"
            ],
            [
                "name"
            ],
            [
                "harold"
            ],
            [
                "and"
            ],
            [
                "maude"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "compose-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "music"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "name"
                    ],
                    [
                        "harold"
                    ],
                    [
                        "and"
                    ],
                    [
                        "maude"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / compose-02 :ARG0 (a / amr-unknown) :ARG1 (m / music) :ARG2 (w / work-of-art :name (n / name :op1 \"Harold\" :op2 \"and\" :op3 \"Maude\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: i\u0161vardinkite visus epizodus pirmo sezono serialo \u201cklanas soprano\u201d nbo\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "i\u0161vardinkite visus epizodus pirmo sezono serialo \u201cklanas soprano\u201d nbo",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "list-01"
            ],
            [
                "series"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "episode"
            ],
            [
                "name"
            ],
            [
                "television"
            ],
            [
                "company"
            ],
            [
                "season"
            ],
            [
                "all"
            ],
            [
                "sopranos"
            ],
            [
                "the"
            ],
            [
                "name"
            ],
            [
                "ordinal-entity"
            ],
            [
                "hbo"
            ],
            [
                "1"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "list-01"
                    ],
                    [
                        "series"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "episode"
                    ],
                    [
                        "name"
                    ],
                    [
                        "television"
                    ],
                    [
                        "company"
                    ],
                    [
                        "season"
                    ],
                    [
                        "all"
                    ],
                    [
                        "sopranos"
                    ],
                    [
                        "the"
                    ],
                    [
                        "name"
                    ],
                    [
                        "ordinal-entity"
                    ],
                    [
                        "hbo"
                    ],
                    [
                        "1"
                    ]
                ]
            },
            16
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / list-01 :mode imperative :ARG0 (y / you) :ARG1 (e / episode :mod (a / all) :part-of (s / series :name (n / name :op1 \"The\" :op2 \"Sopranos\") :medium (t / television) :mod (c / company :name (n2 / name :op1 \"HBO\")) :time (s2 / season :ord (o / ordinal-entity :value 1)))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: i\u0161vardinkite visus epizodus pirmo sezono serialo \u201cklanas soprano\u201d nbo\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "i\u0161vardinkite visus epizodus pirmo sezono serialo \u201cklanas soprano\u201d nbo",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "inhabit-01"
            ],
            [
                "have-quant-91"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "least"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "inhabit-01"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "least"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / city :mod (a / amr-unknown)) :ARG1 (p / person :ARG0-of (i2 / inhabit-01 :ARG1 c) :ARG1-of (h2 / have-quant-91 :ARG3 (l / least))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kur palaidotas singmanas ri\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kur palaidotas singmanas ri",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "bury-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "syngman"
            ],
            [
                "rhee"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bury-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "syngman"
                    ],
                    [
                        "rhee"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bury-01 :ARG1 (p / person :name (n / name :op1 \"Syngman\" :op2 \"Rhee\")) :ARG2 (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar neimaras \u017eaid\u0117 u\u017e real madrid? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar neimaras \u017eaid\u0117 u\u017e real madrid? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "play-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "team"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "neymar"
            ],
            [
                "madrid"
            ],
            [
                "real"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "team"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "neymar"
                    ],
                    [
                        "madrid"
                    ],
                    [
                        "real"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-01 :ARG0 (p2 / person :name (n / name :op1 \"Neymar\")) :beneficiary (t / team :name (n2 / name :op1 \"Real\" :op2 \"Madrid\")) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar neimaras \u017eaid\u0117 u\u017e real madrid? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar neimaras \u017eaid\u0117 u\u017e real madrid? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "write-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "book"
            ],
            [
                "name"
            ],
            [
                "the"
            ],
            [
                "pillars"
            ],
            [
                "of"
            ],
            [
                "the"
            ],
            [
                "earth"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "write-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "book"
                    ],
                    [
                        "name"
                    ],
                    [
                        "the"
                    ],
                    [
                        "pillars"
                    ],
                    [
                        "of"
                    ],
                    [
                        "the"
                    ],
                    [
                        "earth"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / write-01 :ARG0 (a / amr-unknown) :ARG1 (b / book :name (n / name :op1 \"The\" :op2 \"Pillars\" :op3 \"of\" :op4 \"the\" :op5 \"Earth\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: princai haris ir viljamas turi vienus t\u0117vus? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "princai haris ir viljamas turi vienus t\u0117vus? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-org-role-91"
            ],
            [
                "have-org-role-91"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "same-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "and"
            ],
            [
                "prince"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "prince"
            ],
            [
                "parent"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "harry"
            ],
            [
                "william"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "same-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "and"
                    ],
                    [
                        "prince"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "prince"
                    ],
                    [
                        "parent"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "harry"
                    ],
                    [
                        "william"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (a / and :op1 (p / person :name (n / name :op1 \"Harry\") :ARG0-of (h2 / have-org-role-91 :ARG2 (p2 / prince))) :op2 (p3 / person :name (n2 / name :op1 \"William\") :ARG0-of (h3 / have-org-role-91 :ARG2 (p4 / prince)))) :ARG1 (p5 / person :ARG0-of (h4 / have-rel-role-91 :ARG1 a :ARG2 (p6 / parent)) :ARG3-of (s / same-01)) :polarity (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: princai haris ir viljamas turi vienus t\u0117vus? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "princai haris ir viljamas turi vienus t\u0117vus? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-rel-role-91"
            ],
            [
                "supervise-01"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "doctoral"
            ],
            [
                "name"
            ],
            [
                "albert"
            ],
            [
                "einstein"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "supervise-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "doctoral"
                    ],
                    [
                        "name"
                    ],
                    [
                        "albert"
                    ],
                    [
                        "einstein"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-rel-role-91 :ARG0 (a / amr-unknown) :ARG1 (p / person :name (n / name :op1 \"Albert\" :op2 \"Einstein\")) :ARG2 (p2 / person :ARG0-of (s / supervise-01 :ARG1 p :mod (d / doctoral))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar \u201ebreaking bad\u201c turi daugiau epizod\u0173 nei \u201egame of thrones\u201c\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar \u201ebreaking bad\u201c turi daugiau epizod\u0173 nei \u201egame of thrones\u201c",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-quant-91"
            ],
            [
                "have-03"
            ],
            [
                "broadcast-program"
            ],
            [
                "episode"
            ],
            [
                "amr-unknown"
            ],
            [
                "more"
            ],
            [
                "episode"
            ],
            [
                "broadcast-program"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "breaking"
            ],
            [
                "bad"
            ],
            [
                "game"
            ],
            [
                "of"
            ],
            [
                "thrones"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "have-03"
                    ],
                    [
                        "broadcast-program"
                    ],
                    [
                        "episode"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more"
                    ],
                    [
                        "episode"
                    ],
                    [
                        "broadcast-program"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "breaking"
                    ],
                    [
                        "bad"
                    ],
                    [
                        "game"
                    ],
                    [
                        "of"
                    ],
                    [
                        "thrones"
                    ]
                ]
            },
            16
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (b / broadcast-program :name (n / name :op1 \"Breaking\" :op2 \"Bad\")) :ARG1 (e / episode :ARG1-of (h2 / have-quant-91 :ARG3 (m / more) :ARG4 (e2 / episode :ARG1-of (h3 / have-03 :ARG0 (b2 / broadcast-program :name (n2 / name :op1 \"Game\" :op2 \"of\" :op3 \"Thrones\")))))) :polarity (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas \u012fkv\u0117p\u0117 vincent\u0105 van gog\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas \u012fkv\u0117p\u0117 vincent\u0105 van gog\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "inspire-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "vincent"
            ],
            [
                "van"
            ],
            [
                "gogh"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "inspire-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "vincent"
                    ],
                    [
                        "van"
                    ],
                    [
                        "gogh"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(i2 / inspire-01 :ARG0 (a / amr-unknown) :ARG1 (p / person :name (n / name :op1 \"Vincent\" :op2 \"van\" :op3 \"Gogh\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuris pastatas turi daugiausiai auk\u0161t\u0173 po burj khalifa\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuris pastatas turi daugiausiai auk\u0161t\u0173 po burj khalifa",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-quant-91"
            ],
            [
                "building"
            ],
            [
                "floor"
            ],
            [
                "most"
            ],
            [
                "amr-unknown"
            ],
            [
                "after"
            ],
            [
                "building"
            ],
            [
                "name"
            ],
            [
                "burj"
            ],
            [
                "khalifa"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "building"
                    ],
                    [
                        "floor"
                    ],
                    [
                        "most"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "after"
                    ],
                    [
                        "building"
                    ],
                    [
                        "name"
                    ],
                    [
                        "burj"
                    ],
                    [
                        "khalifa"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (b / building :mod (a / amr-unknown)) :ARG1 (f / floor :ARG1-of (h2 / have-quant-91 :ARG3 (m / most :mod (a2 / after :op1 (b2 / building :name (n / name :op1 \"Burj\" :op2 \"Khalifa\")))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "result-01"
            ],
            [
                "war"
            ],
            [
                "amr-unknown"
            ],
            [
                "final"
            ],
            [
                "name"
            ],
            [
                "roses"
            ],
            [
                "war"
            ],
            [
                "of"
            ],
            [
                "the"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "result-01"
                    ],
                    [
                        "war"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "final"
                    ],
                    [
                        "name"
                    ],
                    [
                        "roses"
                    ],
                    [
                        "war"
                    ],
                    [
                        "of"
                    ],
                    [
                        "the"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(r / result-01 :ARG1 (w / war :name (n / name :op1 \"War\" :op2 \"of\" :op3 \"the\" :op4 \"Roses\")) :ARG2 (a / amr-unknown) :mod (f / final))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "cost-01"
            ],
            [
                "work-of-art"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "pulp"
            ],
            [
                "fiction"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cost-01"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "pulp"
                    ],
                    [
                        "fiction"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cost-01 :ARG1 (w / work-of-art :name (n / name :op1 \"Pulp\" :op2 \"Fiction\")) :ARG2 (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "protein"
            ],
            [
                "proinsulin"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "protein"
                    ],
                    [
                        "proinsulin"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            3
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / protein :domain (p2 / proinsulin) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "and"
            ],
            [
                "root"
            ],
            [
                "amr-unknown"
            ],
            [
                "language"
            ],
            [
                "language"
            ],
            [
                "common"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "urdu"
            ],
            [
                "persian"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "and"
                    ],
                    [
                        "root"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "language"
                    ],
                    [
                        "language"
                    ],
                    [
                        "common"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "urdu"
                    ],
                    [
                        "persian"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (a / and :op1 (l / language :name (n / name :op1 \"Urdu\")) :op2 (l2 / language :name (n2 / name :op1 \"Persian\"))) :ARG1 (r / root :mod (c / common)) :polarity (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "star-01"
            ],
            [
                "produce-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "language"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "benicio"
            ],
            [
                "del"
            ],
            [
                "toro"
            ],
            [
                "spanish"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "star-01"
                    ],
                    [
                        "produce-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "language"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "benicio"
                    ],
                    [
                        "del"
                    ],
                    [
                        "toro"
                    ],
                    [
                        "spanish"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / star-01 :ARG1 (a / amr-unknown) :ARG2 (m / movie :medium (l / language :name (n / name :op1 \"Spanish\")) :ARG1-of (p / produce-01 :ARG0 (p2 / person :name (n2 / name :op1 \"Benicio\" :op2 \"del\" :op3 \"Toro\")))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "lake"
            ],
            [
                "big"
            ],
            [
                "more"
            ],
            [
                "lake"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "baikal"
            ],
            [
                "lake"
            ],
            [
                "lake"
            ],
            [
                "great"
            ],
            [
                "bear"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "big"
                    ],
                    [
                        "more"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "baikal"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "great"
                    ],
                    [
                        "bear"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (l / lake :name (n / name :op1 \"Lake\" :op2 \"Baikal\")) :ARG2 (b / big) :ARG3 (m / more) :ARG4 (l2 / lake :name (n2 / name :op1 \"Great\" :op2 \"Bear\" :op3 \"Lake\")) :polarity (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuo baigiasi raudonos ir baltos ro\u017e\u0117s karas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "series"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "book"
            ],
            [
                "i"
            ],
            [
                "name"
            ],
            [
                "person"
            ],
            [
                "all"
            ],
            [
                "foundation"
            ],
            [
                "name"
            ],
            [
                "asimov"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "series"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "book"
                    ],
                    [
                        "i"
                    ],
                    [
                        "name"
                    ],
                    [
                        "person"
                    ],
                    [
                        "all"
                    ],
                    [
                        "foundation"
                    ],
                    [
                        "name"
                    ],
                    [
                        "asimov"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (b / book :mod (a / all) :part-of (s2 / series :name (n / name :op1 \"Foundation\") :poss (p / person :name (n2 / name :op1 \"Asimov\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kada gime bahas \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kada gime bahas ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "bach"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bach"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :name (n / name :op1 \"Bach\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuriame mieste veikia seniausias metro\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuriame mieste veikia seniausias metro",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-degree-91"
            ],
            [
                "run-01"
            ],
            [
                "city"
            ],
            [
                "metro"
            ],
            [
                "old"
            ],
            [
                "most"
            ],
            [
                "metro"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "run-01"
                    ],
                    [
                        "city"
                    ],
                    [
                        "metro"
                    ],
                    [
                        "old"
                    ],
                    [
                        "most"
                    ],
                    [
                        "metro"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / city :mod (a / amr-unknown)) :ARG1 (m / metro :ARG1-of (h2 / have-degree-91 :ARG2 (o / old) :ARG3 (m2 / most) :ARG5 (m3 / metro :ARG1-of (r / run-01)))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kada jis suprojektavo bruklino tilt\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kada jis suprojektavo bruklino tilt\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "design-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "bridge"
            ],
            [
                "name"
            ],
            [
                "brooklyn"
            ],
            [
                "bridge"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "design-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "bridge"
                    ],
                    [
                        "name"
                    ],
                    [
                        "brooklyn"
                    ],
                    [
                        "bridge"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / design-01 :ARG0 (a / amr-unknown) :ARG1 (b / bridge :name (n / name :op1 \"Brooklyn\" :op2 \"Bridge\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kiek gyventoj\u0173 yra eurazijoje\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kiek gyventoj\u0173 yra eurazijoje",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "live-01"
            ],
            [
                "person"
            ],
            [
                "continent"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "eurasia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "live-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "continent"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "eurasia"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / live-01 :ARG0 (p / person :quant (a / amr-unknown)) :location (c / continent :name (n / name :op1 \"Eurasia\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra bbc laukin\u0117s gamtos speciali\u0173j\u0173 rengini\u0173 ved\u0117jas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra bbc laukin\u0117s gamtos speciali\u0173j\u0173 rengini\u0173 ved\u0117jas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "host-01"
            ],
            [
                "broadcast-program"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "company"
            ],
            [
                "amr-unknown"
            ],
            [
                "wildlife"
            ],
            [
                "specials"
            ],
            [
                "name"
            ],
            [
                "british"
            ],
            [
                "broadcasting"
            ],
            [
                "corporation"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "host-01"
                    ],
                    [
                        "broadcast-program"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "company"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "wildlife"
                    ],
                    [
                        "specials"
                    ],
                    [
                        "name"
                    ],
                    [
                        "british"
                    ],
                    [
                        "broadcasting"
                    ],
                    [
                        "corporation"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :ARG0-of (h / host-01 :ARG1 (b / broadcast-program :name (n / name :op1 \"Wildlife\" :op2 \"Specials\") :mod (c / company :name (n2 / name :op1 \"British\" :op2 \"Broadcasting\" :op3 \"Corporation\")))) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra bbc laukin\u0117s gamtos speciali\u0173j\u0173 rengini\u0173 ved\u0117jas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra bbc laukin\u0117s gamtos speciali\u0173j\u0173 rengini\u0173 ved\u0117jas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "population"
            ],
            [
                "total"
            ],
            [
                "amr-unknown"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "state"
            ],
            [
                "melbourne"
            ],
            [
                "name"
            ],
            [
                "florida"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "population"
                    ],
                    [
                        "total"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "state"
                    ],
                    [
                        "melbourne"
                    ],
                    [
                        "name"
                    ],
                    [
                        "florida"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / population :location (c / city :name (n / name :op1 \"Melbourne\") :location (s / state :name (n2 / name :op1 \"Florida\"))) :mod (t / total) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kurioje \u0161alyje yra everestas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kurioje \u0161alyje yra everestas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "be-located-at-91"
            ],
            [
                "mountain"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "mount"
            ],
            [
                "everest"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-located-at-91"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "mount"
                    ],
                    [
                        "everest"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-located-at-91 :ARG1 (m / mountain :name (n / name :op1 \"Mount\" :op2 \"Everest\")) :ARG2 (c / country :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokiai meno kryp\u010diai priklauso \u201etrij\u0173 \u0161ok\u0117j\u0173\u201c autor\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokiai meno kryp\u010diai priklauso \u201etrij\u0173 \u0161ok\u0117j\u0173\u201c autor\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "belong-01"
            ],
            [
                "paint-02"
            ],
            [
                "person"
            ],
            [
                "movement"
            ],
            [
                "picture"
            ],
            [
                "art"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "three"
            ],
            [
                "dancers"
            ],
            [
                "the"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "belong-01"
                    ],
                    [
                        "paint-02"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movement"
                    ],
                    [
                        "picture"
                    ],
                    [
                        "art"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "three"
                    ],
                    [
                        "dancers"
                    ],
                    [
                        "the"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / belong-01 :ARG0 (p / person :ARG0-of (p2 / paint-02 :ARG1 (p3 / picture :name (n / name :op1 \"The\" :op2 \"Three\" :op3 \"Dancers\")))) :ARG1 (m / movement :mod (a / art) :mod (a2 / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokiai meno kryp\u010diai priklauso \u201etrij\u0173 \u0161ok\u0117j\u0173\u201c autor\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokiai meno kryp\u010diai priklauso \u201etrij\u0173 \u0161ok\u0117j\u0173\u201c autor\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "commence-01"
            ],
            [
                "war"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "operation"
            ],
            [
                "overlord"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "commence-01"
                    ],
                    [
                        "war"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "operation"
                    ],
                    [
                        "overlord"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / commence-01 :ARG1 (w / war :name (n / name :op1 \"Operation\" :op2 \"Overlord\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokiai meno kryp\u010diai priklauso \u201etrij\u0173 \u0161ok\u0117j\u0173\u201c autor\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokiai meno kryp\u010diai priklauso \u201etrij\u0173 \u0161ok\u0117j\u0173\u201c autor\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-degree-91"
            ],
            [
                "bridge"
            ],
            [
                "span"
            ],
            [
                "long-03"
            ],
            [
                "most"
            ],
            [
                "span"
            ],
            [
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "bridge"
                    ],
                    [
                        "span"
                    ],
                    [
                        "long-03"
                    ],
                    [
                        "most"
                    ],
                    [
                        "span"
                    ],
                    [
                        "amr-unknown"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bridge :ARG0-of (h / have-03 :ARG1 (s / span :ARG1-of (h2 / have-degree-91 :ARG2 (l / long-03 :ARG1 s) :ARG3 (m / most) :ARG5 (s2 / span)))) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar yra vaizdo \u017eaidimas, vadinamas battle chess\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar yra vaizdo \u017eaidimas, vadinamas battle chess",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "call-01"
            ],
            [
                "game"
            ],
            [
                "product"
            ],
            [
                "interrogative"
            ],
            [
                "video"
            ],
            [
                "name"
            ],
            [
                "battle"
            ],
            [
                "chess"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "call-01"
                    ],
                    [
                        "game"
                    ],
                    [
                        "product"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "video"
                    ],
                    [
                        "name"
                    ],
                    [
                        "battle"
                    ],
                    [
                        "chess"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / game :mode interrogative :medium (v / video) :ARG1-of (c / call-01 :ARG2 (p / product :name (n / name :op1 \"Battle\" :op2 \"Chess\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas buvo palaidotas did\u017eiojoje gizos piramid\u0117je\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas buvo palaidotas did\u017eiojoje gizos piramid\u0117je",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "bury-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "facility"
            ],
            [
                "name"
            ],
            [
                "great"
            ],
            [
                "pyramid"
            ],
            [
                "of"
            ],
            [
                "giza"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bury-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "facility"
                    ],
                    [
                        "name"
                    ],
                    [
                        "great"
                    ],
                    [
                        "pyramid"
                    ],
                    [
                        "of"
                    ],
                    [
                        "giza"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bury-01 :ARG1 (a / amr-unknown) :ARG2 (f / facility :name (n / name :op1 \"Great\" :op2 \"Pyramid\" :op3 \"of\" :op4 \"Giza\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar \u201eford\u201c turi gamykl\u0105 malaizijoje\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar \u201eford\u201c turi gamykl\u0105 malaizijoje",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "manufacture-01"
            ],
            [
                "interrogative"
            ],
            [
                "company"
            ],
            [
                "plant"
            ],
            [
                "name"
            ],
            [
                "country"
            ],
            [
                "company"
            ],
            [
                "ford"
            ],
            [
                "motor"
            ],
            [
                "name"
            ],
            [
                "malaysia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "manufacture-01"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "company"
                    ],
                    [
                        "plant"
                    ],
                    [
                        "name"
                    ],
                    [
                        "country"
                    ],
                    [
                        "company"
                    ],
                    [
                        "ford"
                    ],
                    [
                        "motor"
                    ],
                    [
                        "name"
                    ],
                    [
                        "malaysia"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :mode interrogative :ARG0 (c / company :name (n / name :op1 \"Ford\" :op2 \"Motor\" :op3 \"Company\")) :ARG1 (p / plant :ARG0-of (m / manufacture-01) :location (c2 / country :name (n2 / name :op1 \"Malaysia\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar sokratas paveik\u0117 aristotel\u012f\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar sokratas paveik\u0117 aristotel\u012f",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "influence-01"
            ],
            [
                "person"
            ],
            [
                "interrogative"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "aristotle"
            ],
            [
                "socrates"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "influence-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "aristotle"
                    ],
                    [
                        "socrates"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(i2 / influence-01 :mode interrogative :ARG0 (p / person :name (n / name :op1 \"Socrates\")) :ARG1 (p2 / person :name (n2 / name :op1 \"Aristotle\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kiek vaik\u0173 tur\u0117jo benjaminas franklinas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kiek vaik\u0173 tur\u0117jo benjaminas franklinas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "child"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "benjamin"
            ],
            [
                "franklin"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "child"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "benjamin"
                    ],
                    [
                        "franklin"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (p / person :name (n / name :op1 \"Benjamin\" :op2 \"Franklin\")) :ARG1 (p2 / person :ARG0-of (h2 / have-rel-role-91 :ARG1 p :ARG2 (c / child)) :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokio \u016bgio yra michaelas jordanas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokio \u016bgio yra michaelas jordanas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "tall"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "michael"
            ],
            [
                "jordan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "tall"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "michael"
                    ],
                    [
                        "jordan"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(t / tall :quant (a / amr-unknown) :domain (p / person :name (n / name :op1 \"Michael\" :op2 \"Jordan\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuriame jk mieste yra mi6 b\u016bstin\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuriame jk mieste yra mi6 b\u016bstin\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "be-located-at-91"
            ],
            [
                "headquarters-yy"
            ],
            [
                "city"
            ],
            [
                "government-organization"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "mi6"
            ],
            [
                "uk"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-located-at-91"
                    ],
                    [
                        "headquarters-yy"
                    ],
                    [
                        "city"
                    ],
                    [
                        "government-organization"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "mi6"
                    ],
                    [
                        "uk"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-located-at-91 :ARG1 (h / headquarters-yy :poss (g / government-organization :name (n / name :op1 \"MI6\"))) :ARG2 (c / city :mod (a / amr-unknown) :mod (c2 / country :name (n2 / name :op1 \"UK\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas sukure grifinus \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas sukure grifinus ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "create-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "broadcast-program"
            ],
            [
                "name"
            ],
            [
                "family"
            ],
            [
                "guy"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "create-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "broadcast-program"
                    ],
                    [
                        "name"
                    ],
                    [
                        "family"
                    ],
                    [
                        "guy"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (b / broadcast-program :name (n / name :op1 \"Family\" :op2 \"Guy\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas sukure grifinus \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas sukure grifinus ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "end-01"
            ],
            [
                "city"
            ],
            [
                "road"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "country"
            ],
            [
                "route"
            ],
            [
                "68"
            ],
            [
                "name"
            ],
            [
                "chile"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "end-01"
                    ],
                    [
                        "city"
                    ],
                    [
                        "road"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "country"
                    ],
                    [
                        "route"
                    ],
                    [
                        "68"
                    ],
                    [
                        "name"
                    ],
                    [
                        "chile"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(e / end-01 :ARG1 (r / road :name (n / name :op1 \"Route\" :op2 \"68\") :mod (c / country :name (n2 / name :op1 \"Chile\"))) :location (c2 / city :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: pavadinkite elvio presley an\u016bkus\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "pavadinkite elvio presley an\u016bkus",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "grandchild"
            ],
            [
                "name"
            ],
            [
                "elvis"
            ],
            [
                "presley"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "grandchild"
                    ],
                    [
                        "name"
                    ],
                    [
                        "elvis"
                    ],
                    [
                        "presley"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Elvis\" :op2 \"Presley\")) :ARG2 (g2 / grandchild))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kada \u017elugo ming\u0173 dinastija\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kada \u017elugo ming\u0173 dinastija",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "dissolve-01"
            ],
            [
                "dynasty"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "ming"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "dissolve-01"
                    ],
                    [
                        "dynasty"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "ming"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / dissolve-01 :ARG1 (d2 / dynasty :name (n / name :op1 \"Ming\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokiuose kariniuose konfliktuose dalyvavo arabijos lorensas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokiuose kariniuose konfliktuose dalyvavo arabijos lorensas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "participate-01"
            ],
            [
                "person"
            ],
            [
                "conflict-01"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "military"
            ],
            [
                "lawrence"
            ],
            [
                "of"
            ],
            [
                "arabia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "participate-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "conflict-01"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "military"
                    ],
                    [
                        "lawrence"
                    ],
                    [
                        "of"
                    ],
                    [
                        "arabia"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / participate-01 :ARG0 (p2 / person :name (n / name :op1 \"Lawrence\" :op2 \"of\" :op3 \"Arabia\")) :ARG1 (c / conflict-01 :mod (m / military) :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kurioje laiko juostoje yra san pedro de atacama\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kurioje laiko juostoje yra san pedro de atacama",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "timezone"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "san"
            ],
            [
                "pedro"
            ],
            [
                "de"
            ],
            [
                "atacama"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "timezone"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "san"
                    ],
                    [
                        "pedro"
                    ],
                    [
                        "de"
                    ],
                    [
                        "atacama"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / timezone :location (c / city :name (n / name :op1 \"San\" :op2 \"Pedro\" :op3 \"de\" :op4 \"Atacama\")) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: i\u0161vardinkite visas williamo goldmano knygas, kuriose yra daugiau nei 300 puslapi\u0173\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "i\u0161vardinkite visas williamo goldmano knygas, kuriose yra daugiau nei 300 puslapi\u0173",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "book"
            ],
            [
                "i"
            ],
            [
                "page"
            ],
            [
                "person"
            ],
            [
                "all"
            ],
            [
                "more-than"
            ],
            [
                "name"
            ],
            [
                "300"
            ],
            [
                "william"
            ],
            [
                "goldman"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "book"
                    ],
                    [
                        "i"
                    ],
                    [
                        "page"
                    ],
                    [
                        "person"
                    ],
                    [
                        "all"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "name"
                    ],
                    [
                        "300"
                    ],
                    [
                        "william"
                    ],
                    [
                        "goldman"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (b / book :mod (a / all) :prep-by (p / person :name (n / name :op1 \"William\" :op2 \"Goldman\")) :ARG0-of (h / have-01 :ARG1 (p2 / page :quant (m / more-than :op1 300)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: bruce'o carverio mirties prie\u017eastis\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "bruce'o carverio mirties prie\u017eastis",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "cause-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "die-01"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "bruce"
            ],
            [
                "carver"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cause-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "die-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bruce"
                    ],
                    [
                        "carver"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / die-01 :ARG1 (p / person :name (n / name :op1 \"Bruce\" :op2 \"Carver\")) :ARG1-of (c / cause-01 :ARG0 (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar abraomo linkolno mirties svetain\u0117 turi svetain\u0119\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar abraomo linkolno mirties svetain\u0117 turi svetain\u0119",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "die-01"
            ],
            [
                "place"
            ],
            [
                "website"
            ],
            [
                "interrogative"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "lincoln"
            ],
            [
                "abraham"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "die-01"
                    ],
                    [
                        "place"
                    ],
                    [
                        "website"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "lincoln"
                    ],
                    [
                        "abraham"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :mode interrogative :ARG0 (p / place :location-of (d / die-01 :ARG1 (p2 / person :name (n / name :op1 \"Abraham\" :op2 \"Lincoln\")))) :ARG1 (w / website))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: elvis presley tur\u0117jo vaik\u0173\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "elvis presley tur\u0117jo vaik\u0173",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "interrogative"
            ],
            [
                "child"
            ],
            [
                "name"
            ],
            [
                "elvis"
            ],
            [
                "presley"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "child"
                    ],
                    [
                        "name"
                    ],
                    [
                        "elvis"
                    ],
                    [
                        "presley"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :mode interrogative :ARG0 (p / person :name (n / name :op1 \"Elvis\" :op2 \"Presley\")) :ARG1 (p2 / person :ARG0-of (h2 / have-rel-role-91 :ARG1 p :ARG2 (c / child))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar michelle obama yra baracko obamos \u017emona\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar michelle obama yra baracko obamos \u017emona",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-rel-role-91"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "wife"
            ],
            [
                "interrogative"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "obama"
            ],
            [
                "barack"
            ],
            [
                "michelle"
            ],
            [
                "obama"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "wife"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "obama"
                    ],
                    [
                        "barack"
                    ],
                    [
                        "michelle"
                    ],
                    [
                        "obama"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :mode interrogative :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Barack\" :op2 \"Obama\")) :ARG2 (w / wife)) :domain (p3 / person :name (n2 / name :op1 \"Michelle\" :op2 \"Obama\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuriame mieste gyvena sylvesteris stallone\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuriame mieste gyvena sylvesteris stallone",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "live-01"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "sylvester"
            ],
            [
                "stallone"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "live-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "sylvester"
                    ],
                    [
                        "stallone"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / live-01 :ARG0 (p / person :name (n / name :op1 \"Sylvester\" :op2 \"Stallone\")) :location (c / city :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios keruako knygos buvo atspausdintos viking press\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokios keruako knygos buvo atspausdintos viking press",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "publish-01"
            ],
            [
                "book"
            ],
            [
                "puplication"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "viking"
            ],
            [
                "press"
            ],
            [
                "kerouac"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "publish-01"
                    ],
                    [
                        "book"
                    ],
                    [
                        "puplication"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "viking"
                    ],
                    [
                        "press"
                    ],
                    [
                        "kerouac"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / publish-01 :ARG0 (p2 / puplication :name (n / name :op1 \"Viking\" :op2 \"Press\")) :ARG1 (b / book :mod (a / amr-unknown) :prep-by (p3 / person :name (n2 / name :op1 \"Kerouac\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas para\u0161\u0117 dain\u0105 vie\u0161butis kalifornija\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas para\u0161\u0117 dain\u0105 vie\u0161butis kalifornija",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "write-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "song"
            ],
            [
                "name"
            ],
            [
                "hotel"
            ],
            [
                "california"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "write-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "song"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hotel"
                    ],
                    [
                        "california"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / write-01 :ARG0 (a / amr-unknown) :ARG1 (s / song :name (n / name :op1 \"Hotel\" :op2 \"California\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokia kanados sostin\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokia kanados sostin\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "country"
            ],
            [
                "capital"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "canada"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "country"
                    ],
                    [
                        "capital"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "canada"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / city :ARG0-of (h / have-org-role-91 :ARG1 (c2 / country :name (n / name :op1 \"Canada\")) :ARG2 (c3 / capital)) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra tel-avivo meras\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra tel-avivo meras",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "city"
            ],
            [
                "mayor"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "tel"
            ],
            [
                "aviv"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "city"
                    ],
                    [
                        "mayor"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "tel"
                    ],
                    [
                        "aviv"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :ARG0-of (h / have-org-role-91 :ARG1 (c / city :name (n / name :op1 \"Tel\" :op2 \"Aviv\")) :ARG2 (m / mayor)) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokia rusijoje politin\u0117 sistema? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokia rusijoje politin\u0117 sistema? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "govern-01"
            ],
            [
                "government-organization"
            ],
            [
                "country"
            ],
            [
                "form"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "russia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "govern-01"
                    ],
                    [
                        "government-organization"
                    ],
                    [
                        "country"
                    ],
                    [
                        "form"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "russia"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / country :name (n / name :op1 \"Russia\")) :ARG1 (g / government-organization :ARG0-of (g2 / govern-01) :mod (f / form :mod (a / amr-unknown))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: parodykite man knig\u0105, kuri\u0105 para\u0161\u0117 muhhamedas alis\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "parodykite man knig\u0105, kuri\u0105 para\u0161\u0117 muhhamedas alis",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "write-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "book"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "muhammad"
            ],
            [
                "ali"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "write-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "book"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "muhammad"
                    ],
                    [
                        "ali"
                    ]
                ]
            },
            10
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (b / book :ARG1-of (w / write-01 :ARG0 (p / person :name (n / name :op1 \"Muhammad\" :op2 \"Ali\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas pirmas u\u017elipo \u012f everest\u0105? \nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas pirmas u\u017elipo \u012f everest\u0105? ",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "climb-01"
            ],
            [
                "mountain"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "ordinal-entity"
            ],
            [
                "mount"
            ],
            [
                "everest"
            ],
            [
                "1"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "climb-01"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "ordinal-entity"
                    ],
                    [
                        "mount"
                    ],
                    [
                        "everest"
                    ],
                    [
                        "1"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :ARG0-of (c / climb-01 :ARG1 (m2 / mountain :name (n / name :op1 \"Mount\" :op2 \"Everest\"))) :ord (o / ordinal-entity :value 1) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: keliomis kalbomis kalbama kolumbijoje\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "keliomis kalbomis kalbama kolumbijoje",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "speak-01"
            ],
            [
                "language"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "colombia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "speak-01"
                    ],
                    [
                        "language"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "colombia"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / speak-01 :ARG3 (l / language :quant (a / amr-unknown)) :location (c / country :name (n / name :op1 \"Colombia\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: koki\u0105 valiut\u0105 turi \u010dekijos respiblika\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "koki\u0105 valiut\u0105 turi \u010dekijos respiblika",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "currency"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "czech"
            ],
            [
                "republic"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "currency"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "czech"
                    ],
                    [
                        "republic"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / currency :poss (c2 / country :name (n / name :op1 \"Czech\" :op2 \"Republic\")) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kur pranc\u016bzijoje gaminamas putojantis vynas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kur pranc\u016bzijoje gaminamas putojantis vynas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "produce-01"
            ],
            [
                "sparkle-01"
            ],
            [
                "wine"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "france"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "produce-01"
                    ],
                    [
                        "sparkle-01"
                    ],
                    [
                        "wine"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "france"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / produce-01 :ARG1 (w / wine :ARG1-of (s / sparkle-01)) :location (a / amr-unknown :location (c / country :name (n / name :op1 \"France\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kada borisas beckeris baig\u0117 aktyvi\u0105 karjer\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kada borisas beckeris baig\u0117 aktyvi\u0105 karjer\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "end-01"
            ],
            [
                "activity-06"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "career"
            ],
            [
                "name"
            ],
            [
                "boris"
            ],
            [
                "becker"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "end-01"
                    ],
                    [
                        "activity-06"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "career"
                    ],
                    [
                        "name"
                    ],
                    [
                        "boris"
                    ],
                    [
                        "becker"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(e / end-01 :ARG0 (p / person :name (n / name :op1 \"Boris\" :op2 \"Becker\")) :ARG1 (c / career :ARG1-of (a / activity-06) :poss p) :time (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: koks filmas su miki rurku vaidmenyje buvo nufilmuotas gajumi richi\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "koks filmas su miki rurku vaidmenyje buvo nufilmuotas gajumi richi",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "direct-01"
            ],
            [
                "star-01"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "guy"
            ],
            [
                "ritchie"
            ],
            [
                "mickey"
            ],
            [
                "rourke"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "direct-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "guy"
                    ],
                    [
                        "ritchie"
                    ],
                    [
                        "mickey"
                    ],
                    [
                        "rourke"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Guy\" :op2 \"Ritchie\")) :ARG1 (m / movie :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 (p2 / person :name (n2 / name :op1 \"Mickey\" :op2 \"Rourke\")))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokiuose filmuose vaidino d\u017eiulija roberts ir richardas gyras\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokiuose filmuose vaidino d\u017eiulija roberts ir richardas gyras",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "play-11"
            ],
            [
                "and"
            ],
            [
                "film"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "roberts"
            ],
            [
                "julia"
            ],
            [
                "richard"
            ],
            [
                "gere"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-11"
                    ],
                    [
                        "and"
                    ],
                    [
                        "film"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "roberts"
                    ],
                    [
                        "julia"
                    ],
                    [
                        "richard"
                    ],
                    [
                        "gere"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-11 :ARG0 (a / and :op1 (p2 / person :name (n / name :op1 \"Julia\" :op2 \"Roberts\")) :op2 (p3 / person :name (n2 / name :op1 \"Richard\" :op2 \"Gere\"))) :ARG1 (f / film :mod (a2 / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: parodyk man heminguejaus autobiografij\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "parodyk man heminguejaus autobiografij\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "you"
            ],
            [
                "autobiography"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "hemingway"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "you"
                    ],
                    [
                        "autobiography"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hemingway"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (a / autobiography :poss (p / person :name (n / name :op1 \"Hemingway\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: koks amazon iv \u016bgis\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "koks amazon iv \u016bgis",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "tall"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amazon"
            ],
            [
                "eve"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "tall"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amazon"
                    ],
                    [
                        "eve"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(t / tall :quant (a / amr-unknown) :domain (p / person :name (n / name :op1 \"Amazon\" :op2 \"Eve\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kaip vadinasi penki nju jorko rajonai\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kaip vadinasi penki nju jorko rajonai",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "bourough"
            ],
            [
                "5"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "new"
            ],
            [
                "york"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bourough"
                    ],
                    [
                        "5"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "new"
                    ],
                    [
                        "york"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bourough :quant 5 :poss (c / city :name (n / name :op1 \"New\" :op2 \"York\")) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: i\u0161vardink man visas gran\u017e stiliaus garso \u012fra\u0161\u0173 kompanijas i\u0161 kanados\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "i\u0161vardink man visas gran\u017e stiliaus garso \u012fra\u0161\u0173 kompanijas i\u0161 kanados",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "label-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "thing"
            ],
            [
                "i"
            ],
            [
                "music"
            ],
            [
                "record"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "country"
            ],
            [
                "grunge"
            ],
            [
                "name"
            ],
            [
                "canada"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "label-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "thing"
                    ],
                    [
                        "i"
                    ],
                    [
                        "music"
                    ],
                    [
                        "record"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "country"
                    ],
                    [
                        "grunge"
                    ],
                    [
                        "name"
                    ],
                    [
                        "canada"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (t / thing :ARG2-of (l / label-01 :ARG1 (m / music :name (n / name :op1 \"Grunge\") :mod (c / country :name (n2 / name :op1 \"Canada\"))) :mod (r / record) :mod (a / all))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kokioje \u0161alyje prasideda gangas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kokioje \u0161alyje prasideda gangas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "start-06"
            ],
            [
                "river"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "ganges"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "start-06"
                    ],
                    [
                        "river"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "ganges"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / start-06 :ARG0 (r / river :name (n / name :op1 \"Ganges\")) :location (c / country :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra \u201epenguin books\u201c \u012fk\u016br\u0117jas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra \u201epenguin books\u201c \u012fk\u016br\u0117jas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "found-01"
            ],
            [
                "person"
            ],
            [
                "publication"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "penguin"
            ],
            [
                "books"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "found-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "publication"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "penguin"
                    ],
                    [
                        "books"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :ARG0-of (f / found-01 :ARG1 (p2 / publication :name (n / name :op1 \"Penguin\" :op2 \"Books\"))) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas para\u0161\u0117 pagrindin\u0119 temin\u0119 dain\u0105 \u201egame of thrones\u201c\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas para\u0161\u0117 pagrindin\u0119 temin\u0119 dain\u0105 \u201egame of thrones\u201c",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "write-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "theme"
            ],
            [
                "broadcast-program"
            ],
            [
                "name"
            ],
            [
                "game"
            ],
            [
                "of"
            ],
            [
                "thrones"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "write-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "theme"
                    ],
                    [
                        "broadcast-program"
                    ],
                    [
                        "name"
                    ],
                    [
                        "game"
                    ],
                    [
                        "of"
                    ],
                    [
                        "thrones"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / write-01 :ARG0 (a / amr-unknown) :ARG1 (t / theme) :ARG2 (b / broadcast-program :name (n / name :op1 \"Game\" :op2 \"of\" :op3 \"Thrones\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra eritr\u0117jos prezidentas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra eritr\u0117jos prezidentas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "country"
            ],
            [
                "president"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "eritrea"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "country"
                    ],
                    [
                        "president"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "eritrea"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :ARG0-of (h / have-org-role-91 :ARG1 (c / country :name (n / name :op1 \"Eritrea\")) :ARG2 (p2 / president)) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuriame mieste mir\u0117 d\u017eonas kenedis\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuriame mieste mir\u0117 d\u017eonas kenedis",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "die-01"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "john"
            ],
            [
                "f."
            ],
            [
                "kennedy"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "die-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "john"
                    ],
                    [
                        "f."
                    ],
                    [
                        "kennedy"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / die-01 :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"F.\" :op3 \"Kennedy\")) :location (c / city :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: auk\u0161\u010diausias kalnas australijoje\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "auk\u0161\u010diausias kalnas australijoje",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "mountain"
            ],
            [
                "high-02"
            ],
            [
                "most"
            ],
            [
                "mountain"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "australia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "australia"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(m / mountain :ARG1-of (h / have-degree-91 :ARG2 (h2 / high-02 :ARG1 m) :ARG3 (m2 / most) :ARG5 (m3 / mountain :location (c / country :name (n / name :op1 \"Australia\")))) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas yra \u201e\u016bkinink\u0173 almanacho\u201c autorius\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas yra \u201e\u016bkinink\u0173 almanacho\u201c autorius",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "write-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "publication"
            ],
            [
                "name"
            ],
            [
                "farmers'"
            ],
            [
                "almanac"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "write-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "publication"
                    ],
                    [
                        "name"
                    ],
                    [
                        "farmers'"
                    ],
                    [
                        "almanac"
                    ]
                ]
            },
            6
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / write-01 :ARG0 (a / amr-unknown) :ARG1 (p / publication :name (n / name :op1 \"Farmers'\" :op2 \"Almanac\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: i\u0161vardinti visus \u0161vedijos okeanografus\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "i\u0161vardinti visus \u0161vedijos okeanografus",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "oceanographer"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "sweden"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "oceanographer"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "sweden"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / oceanographer :mod (c / country :name (n / name :op1 \"Sweden\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuriame mieste yra jt b\u016bstin\u0117\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuriame mieste yra jt b\u016bstin\u0117",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "be-located-at-91"
            ],
            [
                "headquarters-yy"
            ],
            [
                "city"
            ],
            [
                "organization"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "united"
            ],
            [
                "nations"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-located-at-91"
                    ],
                    [
                        "headquarters-yy"
                    ],
                    [
                        "city"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "united"
                    ],
                    [
                        "nations"
                    ]
                ]
            },
            8
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-located-at-91 :ARG1 (h / headquarters-yy :poss (o / organization :name (n / name :op1 \"United\" :op2 \"Nations\"))) :ARG2 (c / city :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: ar rita wilson yra tomo hankso \u017emona\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "ar rita wilson yra tomo hankso \u017emona",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-rel-role-91"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "wife"
            ],
            [
                "interrogative"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "hanks"
            ],
            [
                "tom"
            ],
            [
                "rita"
            ],
            [
                "wilson"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "wife"
                    ],
                    [
                        "interrogative"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hanks"
                    ],
                    [
                        "tom"
                    ],
                    [
                        "rita"
                    ],
                    [
                        "wilson"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / person :mode interrogative :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Tom\" :op2 \"Hanks\")) :ARG2 (w / wife)) :domain (p3 / person :name (n2 / name :op1 \"Rita\" :op2 \"Wilson\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse \u017emon\u0117s kalba japoni\u0161kai\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuriose \u0161alyse \u017emon\u0117s kalba japoni\u0161kai",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "speak-01"
            ],
            [
                "country"
            ],
            [
                "person"
            ],
            [
                "language"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "japanese"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "speak-01"
                    ],
                    [
                        "country"
                    ],
                    [
                        "person"
                    ],
                    [
                        "language"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "japanese"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / speak-01 :ARG0 (p / person) :ARG3 (l / language :name (n / name :op1 \"Japanese\")) :location (c / country :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuris timo burtono filmas tur\u0117jo did\u017eiausi\u0105 biud\u017eet\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuris timo burtono filmas tur\u0117jo did\u017eiausi\u0105 biud\u017eet\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "include-91"
            ],
            [
                "have-degree-91"
            ],
            [
                "film"
            ],
            [
                "budget"
            ],
            [
                "film"
            ],
            [
                "high-02"
            ],
            [
                "most"
            ],
            [
                "budget"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "tim"
            ],
            [
                "burton"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "include-91"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "film"
                    ],
                    [
                        "budget"
                    ],
                    [
                        "film"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "budget"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "tim"
                    ],
                    [
                        "burton"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (f / film :mod (a / amr-unknown) :ARG1-of (i2 / include-91 :ARG2 (f2 / film :poss (p / person :name (n / name :op1 \"Tim\" :op2 \"Burton\"))))) :ARG1 (b / budget :ARG1-of (h2 / have-degree-91 :ARG2 (h3 / high-02 :ARG1 b) :ARG3 (m / most) :ARG5 (b2 / budget))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kuris muziejus niujorke turi daugiausiai lankytoj\u0173\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kuris muziejus niujorke turi daugiausiai lankytoj\u0173",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "visit-01"
            ],
            [
                "have-quant-91"
            ],
            [
                "museum"
            ],
            [
                "person"
            ],
            [
                "most"
            ],
            [
                "amr-unknown"
            ],
            [
                "state"
            ],
            [
                "name"
            ],
            [
                "york"
            ],
            [
                "new"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "visit-01"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "museum"
                    ],
                    [
                        "person"
                    ],
                    [
                        "most"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "state"
                    ],
                    [
                        "name"
                    ],
                    [
                        "york"
                    ],
                    [
                        "new"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (m / museum :mod (a / amr-unknown) :location (s / state :name (n / name :op1 \"New\" :op2 \"York\"))) :ARG1 (p / person :ARG0-of (v / visit-01 :ARG1 m) :ARG1-of (h2 / have-quant-91 :ARG3 (m2 / most))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kaip vadinasi pirmasis grup\u0117s queen albumas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kaip vadinasi pirmasis grup\u0117s queen albumas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "album"
            ],
            [
                "person"
            ],
            [
                "ordinal-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "1"
            ],
            [
                "queen"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "album"
                    ],
                    [
                        "person"
                    ],
                    [
                        "ordinal-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "1"
                    ],
                    [
                        "queen"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / album :mod (o2 / person :name (n / name :op1 \"Queen\")) :ord (o / ordinal-entity :value 1) :domain (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: koks buvo pirmasis grup\u0117s queens of the stone age pavadinimas\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "koks buvo pirmasis grup\u0117s queens of the stone age pavadinimas",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "name-01"
            ],
            [
                "band"
            ],
            [
                "amr-unknown"
            ],
            [
                "ordinal-entity"
            ],
            [
                "name"
            ],
            [
                "1"
            ],
            [
                "queens"
            ],
            [
                "of"
            ],
            [
                "the"
            ],
            [
                "stone"
            ],
            [
                "age"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "name-01"
                    ],
                    [
                        "band"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "ordinal-entity"
                    ],
                    [
                        "name"
                    ],
                    [
                        "1"
                    ],
                    [
                        "queens"
                    ],
                    [
                        "of"
                    ],
                    [
                        "the"
                    ],
                    [
                        "stone"
                    ],
                    [
                        "age"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(n / name-01 :ARG1 (b / band :name (n2 / name :op1 \"Queens\" :op2 \"of\" :op3 \"the\" :op4 \"Stone\" :op5 \"Age\")) :ARG2 (a / amr-unknown) :ord (o / ordinal-entity :value 1))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: koks buvo paskutinis filmas su alec guinness\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "koks buvo paskutinis filmas su alec guinness",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "ordinal-entity"
            ],
            [
                "guinness"
            ],
            [
                "alec"
            ],
            [
                "-1"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "ordinal-entity"
                    ],
                    [
                        "guinness"
                    ],
                    [
                        "alec"
                    ],
                    [
                        "-1"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(m / movie :ord (o / ordinal-entity :value \"-1\") :ARG0-of (h / have-03 :ARG1 (p / person :name (n / name :op1 \"Alec\" :op2 \"Guinness\"))) :domain (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: sudarykite vis\u0173 \u201epaskutinio veiksmo herojaus\u201c aktori\u0173 s\u0105ra\u0161\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "sudarykite vis\u0173 \u201epaskutinio veiksmo herojaus\u201c aktori\u0173 s\u0105ra\u0161\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "star-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "work-of-art"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "hero"
            ],
            [
                "last"
            ],
            [
                "action"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hero"
                    ],
                    [
                        "last"
                    ],
                    [
                        "action"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (s / star-01 :ARG2 (w / work-of-art :name (n / name :op1 \"Last\" :op2 \"Action\" :op3 \"Hero\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a Abstract Meaning Representation (AMR) like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: kuriose \u0161alyse yra daugiau nei de\u0161imt urv\u0173\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (c2 / cave :quant (m / more-than :op1 10)))"
            },
            {
                "role": "user",
                "content": "Utterance: pasakyk man visus plaukikus, gimusius maskvoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (s / swim-01) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Moscow\"))) :mod (a / all)))"
            },
            {
                "role": "user",
                "content": "Utterance: kinijos valiuta\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / currency :poss (c2 / country :name (n / name :op1 \"China\"))) :ARG2 (i / i))"
            },
            {
                "role": "user",
                "content": "Utterance: kuri \u201elufthansa\u201c dukterin\u0117 \u012fmon\u0117 tuo pa\u010diu metu aptarnauja dortmund\u0105 ir berlyno tegel\u012f\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(s / serve-01 :ARG0 (s2 / subsidiary :poss (c2 / company :name (n / name :op1 \"Lufthansa\")) :mod (a / amr-unknown)) :ARG2 (a2 / and :op1 (a3 / airport :name (n2 / name :op1 \"Dortmund\")) :op2 (a4 / airport :name (n3 / name :op1 \"Berlin\" :op2 \"Tegel\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokias televizijos laidas remia voltas disn\u0117jus\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (c2 / company :name (n / name :op1 \"Walt\" :op2 \"Disney\")) :ARG1 (s / show-04 :ARG0 c2 :ARG1 (a / amr-unknown) :ARG3 (t / television)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas suk\u016br\u0117 gufi\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (a2 / animal :name (n / name :op1 \"Goofy\")))"
            },
            {
                "role": "user",
                "content": "Utterance: kokios up\u0117s \u012fteka \u012f e\u017eerus vokietijoje\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(f / flow-01 :ARG1 (r / river :mod (a / amr-unknown)) :destination (l / lake :mod (c / country :name (n / name :op1 \"Germany\"))))"
            },
            {
                "role": "user",
                "content": "Utterance: kokie filmai su klintu istvudu buvo filmuoti juo pa\u010diu\nAbstract Meaning Representation (AMR): "
            },
            {
                "role": "assistant",
                "content": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Clint\" :op2 \"Eastwood\")) :ARG1 (f / film :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 p)))"
            },
            {
                "role": "user",
                "content": "Utterance: kas atrado pluton\u0105\nAbstract Meaning Representation (AMR): "
            }
        ],
        "question": "kas atrado pluton\u0105",
        "language": "lt",
        "target": "raw_amr",
        "amr_ngrams": [
            [
                "discover-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "planet"
            ],
            [
                "name"
            ],
            [
                "pluto"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "discover-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "planet"
                    ],
                    [
                        "name"
                    ],
                    [
                        "pluto"
                    ]
                ]
            },
            5
        ],
        "max_ngrams": 1,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / discover-01 :ARG0 (a / amr-unknown) :ARG1 (p / planet :name (n / name :op1 \"Pluto\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: list all boardgames by gmt\nList of semantic frames: "
            }
        ],
        "question": "list all boardgames by gmt",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "list-01"
            ],
            [
                "you"
            ],
            [
                "boardgame"
            ],
            [
                "imperative"
            ],
            [
                "all"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "gmt"
            ],
            [
                "list-01",
                ":ARG0",
                "you"
            ],
            [
                "list-01",
                ":ARG1",
                "boardgame"
            ],
            [
                "list-01",
                ":mode",
                "imperative"
            ],
            [
                "boardgame",
                ":mod",
                "all"
            ],
            [
                "boardgame",
                ":prep-by",
                "company"
            ],
            [
                "company",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "gmt"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "list-01"
                    ],
                    [
                        "you"
                    ],
                    [
                        "boardgame"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "all"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "gmt"
                    ]
                ],
                "2": [
                    [
                        "list-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "list-01",
                        ":ARG1",
                        "boardgame"
                    ],
                    [
                        "list-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "boardgame",
                        ":mod",
                        "all"
                    ],
                    [
                        "boardgame",
                        ":prep-by",
                        "company"
                    ],
                    [
                        "company",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "gmt"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / list-01 :mode imperative :ARG0 (y / you) :ARG1 (b / boardgame :mod (a / all) :prep-by (c / company :name (n / name :op1 \"GMT\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who developed skype\nList of semantic frames: "
            }
        ],
        "question": "who developed skype",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "develop-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "product"
            ],
            [
                "name"
            ],
            [
                "skype"
            ],
            [
                "develop-02",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "develop-02",
                ":ARG1",
                "product"
            ],
            [
                "product",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "skype"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "develop-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "product"
                    ],
                    [
                        "name"
                    ],
                    [
                        "skype"
                    ]
                ],
                "2": [
                    [
                        "develop-02",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "develop-02",
                        ":ARG1",
                        "product"
                    ],
                    [
                        "product",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "skype"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / develop-02 :ARG0 (a / amr-unknown) :ARG1 (p / product :name (n / name :op1 \"Skype\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which people were born in heraklion\nList of semantic frames: "
            }
        ],
        "question": "which people were born in heraklion",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "heraklion"
            ],
            [
                "bear-02",
                ":ARG1",
                "person"
            ],
            [
                "bear-02",
                ":location",
                "city"
            ],
            [
                "person",
                ":mod",
                "amr-unknown"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "heraklion"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "heraklion"
                    ]
                ],
                "2": [
                    [
                        "bear-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":location",
                        "city"
                    ],
                    [
                        "person",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "heraklion"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :mod (a / amr-unknown)) :location (c / city :name (n / name :op1 \"Heraklion\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: in which u.s. state is area 51 located\nList of semantic frames: "
            }
        ],
        "question": "in which u.s. state is area 51 located",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "locate-01"
            ],
            [
                "state"
            ],
            [
                "facility"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "area"
            ],
            [
                "51"
            ],
            [
                "u.s."
            ],
            [
                "locate-01",
                ":location",
                "state"
            ],
            [
                "locate-01",
                ":ARG1",
                "facility"
            ],
            [
                "state",
                ":mod",
                "amr-unknown"
            ],
            [
                "state",
                ":mod",
                "country"
            ],
            [
                "facility",
                ":name",
                "name"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "area"
            ],
            [
                "name",
                ":op2",
                "51"
            ],
            [
                "name",
                ":op1",
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "locate-01"
                    ],
                    [
                        "state"
                    ],
                    [
                        "facility"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "area"
                    ],
                    [
                        "51"
                    ],
                    [
                        "u.s."
                    ]
                ],
                "2": [
                    [
                        "locate-01",
                        ":location",
                        "state"
                    ],
                    [
                        "locate-01",
                        ":ARG1",
                        "facility"
                    ],
                    [
                        "state",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "state",
                        ":mod",
                        "country"
                    ],
                    [
                        "facility",
                        ":name",
                        "name"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "area"
                    ],
                    [
                        "name",
                        ":op2",
                        "51"
                    ],
                    [
                        "name",
                        ":op1",
                        "u.s."
                    ]
                ]
            },
            19
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / locate-01 :ARG1 (f / facility :name (n / name :op1 \"Area\" :op2 \"51\")) :location (s / state :mod (a / amr-unknown) :mod (c / country :name (n2 / name :op1 \"U.S.\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the mayor of new york city\nList of semantic frames: "
            }
        ],
        "question": "who is the mayor of new york city",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "city"
            ],
            [
                "mayor"
            ],
            [
                "name"
            ],
            [
                "new"
            ],
            [
                "york"
            ],
            [
                "city"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "city"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "mayor"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "new"
            ],
            [
                "name",
                ":op2",
                "york"
            ],
            [
                "name",
                ":op3",
                "city"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "city"
                    ],
                    [
                        "mayor"
                    ],
                    [
                        "name"
                    ],
                    [
                        "new"
                    ],
                    [
                        "york"
                    ],
                    [
                        "city"
                    ]
                ],
                "2": [
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "city"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "mayor"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "new"
                    ],
                    [
                        "name",
                        ":op2",
                        "york"
                    ],
                    [
                        "name",
                        ":op3",
                        "city"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-org-role-91 :ARG0 (a / amr-unknown) :ARG1 (c / city :name (n / name :op1 \"New\" :op2 \"York\" :op3 \"City\")) :ARG2 (m / mayor))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which countries have places with more than two caves\nList of semantic frames: "
            }
        ],
        "question": "which countries have places with more than two caves",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "have-03"
            ],
            [
                "place"
            ],
            [
                "country"
            ],
            [
                "cave"
            ],
            [
                "amr-unknown"
            ],
            [
                "more-than"
            ],
            [
                "2"
            ],
            [
                "have-03",
                ":ARG1",
                "place"
            ],
            [
                "have-03",
                ":ARG0",
                "country"
            ],
            [
                "have-03",
                ":ARG0",
                "place"
            ],
            [
                "have-03",
                ":ARG1",
                "cave"
            ],
            [
                "country",
                ":mod",
                "amr-unknown"
            ],
            [
                "cave",
                ":quant",
                "more-than"
            ],
            [
                "more-than",
                ":op1",
                "2"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "have-03"
                    ],
                    [
                        "place"
                    ],
                    [
                        "country"
                    ],
                    [
                        "cave"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "2"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG1",
                        "place"
                    ],
                    [
                        "have-03",
                        ":ARG0",
                        "country"
                    ],
                    [
                        "have-03",
                        ":ARG0",
                        "place"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "cave"
                    ],
                    [
                        "country",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "cave",
                        ":quant",
                        "more-than"
                    ],
                    [
                        "more-than",
                        ":op1",
                        "2"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / country :mod (a / amr-unknown)) :ARG1 (p / place :ARG0-of (h2 / have-03 :ARG1 (c2 / cave :quant (m / more-than :op1 2)))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: where did abraham lincoln die\nList of semantic frames: "
            }
        ],
        "question": "where did abraham lincoln die",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "die-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "abraham"
            ],
            [
                "lincoln"
            ],
            [
                "die-01",
                ":ARG1",
                "person"
            ],
            [
                "die-01",
                ":location",
                "amr-unknown"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "abraham"
            ],
            [
                "name",
                ":op2",
                "lincoln"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "die-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "abraham"
                    ],
                    [
                        "lincoln"
                    ]
                ],
                "2": [
                    [
                        "die-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "die-01",
                        ":location",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "abraham"
                    ],
                    [
                        "name",
                        ":op2",
                        "lincoln"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / die-01 :ARG1 (p / person :name (n / name :op1 \"Abraham\" :op2 \"Lincoln\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which airports does air china serve\nList of semantic frames: "
            }
        ],
        "question": "which airports does air china serve",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "serve-01"
            ],
            [
                "company"
            ],
            [
                "airport"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "air"
            ],
            [
                "china"
            ],
            [
                "serve-01",
                ":ARG0",
                "company"
            ],
            [
                "serve-01",
                ":ARG2",
                "airport"
            ],
            [
                "company",
                ":name",
                "name"
            ],
            [
                "airport",
                ":mod",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "air"
            ],
            [
                "name",
                ":op2",
                "china"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "serve-01"
                    ],
                    [
                        "company"
                    ],
                    [
                        "airport"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "air"
                    ],
                    [
                        "china"
                    ]
                ],
                "2": [
                    [
                        "serve-01",
                        ":ARG0",
                        "company"
                    ],
                    [
                        "serve-01",
                        ":ARG2",
                        "airport"
                    ],
                    [
                        "company",
                        ":name",
                        "name"
                    ],
                    [
                        "airport",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "air"
                    ],
                    [
                        "name",
                        ":op2",
                        "china"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / serve-01 :ARG0 (c / company :name (n / name :op1 \"Air\" :op2 \"China\")) :ARG2 (a / airport :mod (a2 / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all actors starring in movies directed by and starring william shatner\nList of semantic frames: "
            }
        ],
        "question": "give me all actors starring in movies directed by and starring william shatner",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "star-01"
            ],
            [
                "direct-01"
            ],
            [
                "star-01"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "william"
            ],
            [
                "shatner"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "act-01",
                ":ARG0",
                "person"
            ],
            [
                "star-01",
                ":ARG1",
                "person"
            ],
            [
                "star-01",
                ":ARG2",
                "movie"
            ],
            [
                "direct-01",
                ":ARG1",
                "movie"
            ],
            [
                "direct-01",
                ":ARG0",
                "person"
            ],
            [
                "star-01",
                ":ARG1",
                "person"
            ],
            [
                "star-01",
                ":ARG2",
                "movie"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "william"
            ],
            [
                "name",
                ":op2",
                "shatner"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "direct-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "william"
                    ],
                    [
                        "shatner"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "act-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "star-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "star-01",
                        ":ARG2",
                        "movie"
                    ],
                    [
                        "direct-01",
                        ":ARG1",
                        "movie"
                    ],
                    [
                        "direct-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "star-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "star-01",
                        ":ARG2",
                        "movie"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "william"
                    ],
                    [
                        "name",
                        ":op2",
                        "shatner"
                    ]
                ]
            },
            30
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (s / star-01 :ARG2 (m / movie :ARG1-of (d / direct-01 :ARG0 (p2 / person :name (n / name :op1 \"William\" :op2 \"Shatner\"))) :ARG2-of (s2 / star-01 :ARG1 p2)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what are the official languages of the philippines\nList of semantic frames: "
            }
        ],
        "question": "what are the official languages of the philippines",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "language"
            ],
            [
                "official"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "philippines"
            ],
            [
                "language",
                ":mod",
                "official"
            ],
            [
                "language",
                ":domain",
                "amr-unknown"
            ],
            [
                "language",
                ":poss",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "philippines"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "language"
                    ],
                    [
                        "official"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "philippines"
                    ]
                ],
                "2": [
                    [
                        "language",
                        ":mod",
                        "official"
                    ],
                    [
                        "language",
                        ":domain",
                        "amr-unknown"
                    ],
                    [
                        "language",
                        ":poss",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "philippines"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / language :mod (o / official) :domain (a / amr-unknown) :poss (c / country :name (n / name :op1 \"Philippines\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all danish films\nList of semantic frames: "
            }
        ],
        "question": "give me all danish films",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "film"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "denmark"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "film"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "film",
                ":mod",
                "all"
            ],
            [
                "film",
                ":mod",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "denmark"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "film"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "denmark"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "film"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "film",
                        ":mod",
                        "all"
                    ],
                    [
                        "film",
                        ":mod",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "denmark"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (f / film :mod (a / all) :mod (c / country :name (n / name :op1 \"Denmark\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which movies starring brad pitt were directed by guy ritchie\nList of semantic frames: "
            }
        ],
        "question": "which movies starring brad pitt were directed by guy ritchie",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "direct-01"
            ],
            [
                "star-01"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "guy"
            ],
            [
                "ritchie"
            ],
            [
                "brad"
            ],
            [
                "pitt"
            ],
            [
                "direct-01",
                ":ARG0",
                "person"
            ],
            [
                "direct-01",
                ":ARG1",
                "movie"
            ],
            [
                "star-01",
                ":ARG2",
                "movie"
            ],
            [
                "star-01",
                ":ARG1",
                "person"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "movie",
                ":mod",
                "amr-unknown"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "guy"
            ],
            [
                "name",
                ":op2",
                "ritchie"
            ],
            [
                "name",
                ":op1",
                "brad"
            ],
            [
                "name",
                ":op2",
                "pitt"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "direct-01"
                    ],
                    [
                        "star-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "guy"
                    ],
                    [
                        "ritchie"
                    ],
                    [
                        "brad"
                    ],
                    [
                        "pitt"
                    ]
                ],
                "2": [
                    [
                        "direct-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "direct-01",
                        ":ARG1",
                        "movie"
                    ],
                    [
                        "star-01",
                        ":ARG2",
                        "movie"
                    ],
                    [
                        "star-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "movie",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "guy"
                    ],
                    [
                        "name",
                        ":op2",
                        "ritchie"
                    ],
                    [
                        "name",
                        ":op1",
                        "brad"
                    ],
                    [
                        "name",
                        ":op2",
                        "pitt"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Guy\" :op2 \"Ritchie\")) :ARG1 (m / movie :mod (a / amr-unknown) :ARG2-of (s / star-01 :ARG1 (p2 / person :name (n2 / name :op1 \"Brad\" :op2 \"Pitt\")))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the grandchildren of bruce lee\nList of semantic frames: "
            }
        ],
        "question": "give me the grandchildren of bruce lee",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "grandchild"
            ],
            [
                "name"
            ],
            [
                "bruce"
            ],
            [
                "lee"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "have-rel-role-91",
                ":ARG0",
                "person"
            ],
            [
                "have-rel-role-91",
                ":ARG1",
                "person"
            ],
            [
                "have-rel-role-91",
                ":ARG2",
                "grandchild"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "bruce"
            ],
            [
                "name",
                ":op2",
                "lee"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "grandchild"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bruce"
                    ],
                    [
                        "lee"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "have-rel-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "have-rel-role-91",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "have-rel-role-91",
                        ":ARG2",
                        "grandchild"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "bruce"
                    ],
                    [
                        "name",
                        ":op2",
                        "lee"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Bruce\" :op2 \"Lee\")) :ARG2 (g2 / grandchild))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which other weapons did the designer of the uzi develop\nList of semantic frames: "
            }
        ],
        "question": "which other weapons did the designer of the uzi develop",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "develop-02"
            ],
            [
                "design-01"
            ],
            [
                "person"
            ],
            [
                "weapon"
            ],
            [
                "weapon"
            ],
            [
                "other"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "uzi"
            ],
            [
                "develop-02",
                ":ARG0",
                "person"
            ],
            [
                "develop-02",
                ":ARG1",
                "weapon"
            ],
            [
                "design-01",
                ":ARG0",
                "person"
            ],
            [
                "design-01",
                ":ARG1",
                "weapon"
            ],
            [
                "weapon",
                ":mod",
                "other"
            ],
            [
                "weapon",
                ":mod",
                "amr-unknown"
            ],
            [
                "weapon",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "uzi"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "develop-02"
                    ],
                    [
                        "design-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "weapon"
                    ],
                    [
                        "weapon"
                    ],
                    [
                        "other"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "uzi"
                    ]
                ],
                "2": [
                    [
                        "develop-02",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "develop-02",
                        ":ARG1",
                        "weapon"
                    ],
                    [
                        "design-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "design-01",
                        ":ARG1",
                        "weapon"
                    ],
                    [
                        "weapon",
                        ":mod",
                        "other"
                    ],
                    [
                        "weapon",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "weapon",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "uzi"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / develop-02 :ARG0 (p / person :ARG0-of (d2 / design-01 :ARG1 (p2 / weapon :name (n / name :op1 \"Uzi\")))) :ARG1 (w2 / weapon :mod (a / amr-unknown) :mod (o / other)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the owner of universal studios\nList of semantic frames: "
            }
        ],
        "question": "who is the owner of universal studios",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "own-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "universal"
            ],
            [
                "studios"
            ],
            [
                "own-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "own-01",
                ":ARG1",
                "company"
            ],
            [
                "company",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "universal"
            ],
            [
                "name",
                ":op2",
                "studios"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "own-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "universal"
                    ],
                    [
                        "studios"
                    ]
                ],
                "2": [
                    [
                        "own-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "own-01",
                        ":ARG1",
                        "company"
                    ],
                    [
                        "company",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "universal"
                    ],
                    [
                        "name",
                        ":op2",
                        "studios"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(o / own-01 :ARG0 (a / amr-unknown) :ARG1 (c / company :name (n / name :op1 \"Universal\" :op2 \"Studios\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which state of the usa has the highest population density\nList of semantic frames: "
            }
        ],
        "question": "which state of the usa has the highest population density",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "country"
            ],
            [
                "have-degree-91"
            ],
            [
                "state"
            ],
            [
                "density"
            ],
            [
                "name"
            ],
            [
                "high-02"
            ],
            [
                "most"
            ],
            [
                "amr-unknown"
            ],
            [
                "populate-01"
            ],
            [
                "usa"
            ],
            [
                "have-03",
                ":ARG0",
                "state"
            ],
            [
                "have-03",
                ":ARG1",
                "density"
            ],
            [
                "country",
                ":part",
                "state"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "density"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "high-02"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "state",
                ":mod",
                "amr-unknown"
            ],
            [
                "density",
                ":mod",
                "populate-01"
            ],
            [
                "name",
                ":op1",
                "usa"
            ],
            [
                "high-02",
                ":ARG1",
                "density"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "country"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "state"
                    ],
                    [
                        "density"
                    ],
                    [
                        "name"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "populate-01"
                    ],
                    [
                        "usa"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "state"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "density"
                    ],
                    [
                        "country",
                        ":part",
                        "state"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "have-degree-91",
                        ":ARG1",
                        "density"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "high-02"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "state",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "density",
                        ":mod",
                        "populate-01"
                    ],
                    [
                        "name",
                        ":op1",
                        "usa"
                    ],
                    [
                        "high-02",
                        ":ARG1",
                        "density"
                    ]
                ]
            },
            22
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (s / state :mod (a / amr-unknown) :part-of (c / country :name (n / name :op1 \"USA\"))) :ARG1 (d / density :ARG1-of (h2 / have-degree-91 :ARG2 (h3 / high-02 :ARG1 d) :ARG3 (m / most)) :mod (p / populate-01)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which monarchs were married to a german\nList of semantic frames: "
            }
        ],
        "question": "which monarchs were married to a german",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "marry-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "monarch"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "germany"
            ],
            [
                "marry-01",
                ":ARG2",
                "person"
            ],
            [
                "marry-01",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "monarch"
            ],
            [
                "person",
                ":mod",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "germany"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "marry-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "monarch"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "germany"
                    ]
                ],
                "2": [
                    [
                        "marry-01",
                        ":ARG2",
                        "person"
                    ],
                    [
                        "marry-01",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "monarch"
                    ],
                    [
                        "person",
                        ":mod",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "germany"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(m / marry-01 :ARG1 (a2 / amr-unknown :ARG0-of (h / have-org-role-91 :ARG2 (m2 / monarch))) :ARG2 (p2 / person :mod (c / country :name (n / name :op1 \"Germany\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which organizations were founded in 1950\nList of semantic frames: "
            }
        ],
        "question": "which organizations were founded in 1950",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "found-01"
            ],
            [
                "organization"
            ],
            [
                "date-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "1950"
            ],
            [
                "found-01",
                ":ARG1",
                "organization"
            ],
            [
                "found-01",
                ":time",
                "date-entity"
            ],
            [
                "organization",
                ":mod",
                "amr-unknown"
            ],
            [
                "date-entity",
                ":year",
                "1950"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "found-01"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "1950"
                    ]
                ],
                "2": [
                    [
                        "found-01",
                        ":ARG1",
                        "organization"
                    ],
                    [
                        "found-01",
                        ":time",
                        "date-entity"
                    ],
                    [
                        "organization",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "date-entity",
                        ":year",
                        "1950"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(f / found-01 :ARG1 (o / organization :mod (a / amr-unknown)) :time (d / date-entity :year 1950))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created the comic captain america\nList of semantic frames: "
            }
        ],
        "question": "who created the comic captain america",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "create-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "comic"
            ],
            [
                "name"
            ],
            [
                "captain"
            ],
            [
                "america"
            ],
            [
                "create-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "create-01",
                ":ARG1",
                "comic"
            ],
            [
                "comic",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "captain"
            ],
            [
                "name",
                ":op2",
                "america"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "create-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "comic"
                    ],
                    [
                        "name"
                    ],
                    [
                        "captain"
                    ],
                    [
                        "america"
                    ]
                ],
                "2": [
                    [
                        "create-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "create-01",
                        ":ARG1",
                        "comic"
                    ],
                    [
                        "comic",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "captain"
                    ],
                    [
                        "name",
                        ":op2",
                        "america"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / create-01 :ARG0 (a / amr-unknown) :ARG1 (c2 / comic :name (n / name :op1 \"Captain\" :op2 \"America\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the apollo 14 astronauts\nList of semantic frames: "
            }
        ],
        "question": "give me the apollo 14 astronauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "you"
            ],
            [
                "astronaut"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "spaceship"
            ],
            [
                "name"
            ],
            [
                "14"
            ],
            [
                "apollo"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "astronaut"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "astronaut",
                ":mod",
                "spaceship"
            ],
            [
                "spaceship",
                ":name",
                "name"
            ],
            [
                "name",
                ":op2",
                "14"
            ],
            [
                "name",
                ":op1",
                "apollo"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "you"
                    ],
                    [
                        "astronaut"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "spaceship"
                    ],
                    [
                        "name"
                    ],
                    [
                        "14"
                    ],
                    [
                        "apollo"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "astronaut"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "astronaut",
                        ":mod",
                        "spaceship"
                    ],
                    [
                        "spaceship",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op2",
                        "14"
                    ],
                    [
                        "name",
                        ":op1",
                        "apollo"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (a / astronaut :mod (s / spaceship :name (n / name :op1 \"Apollo\" :op2 \"14\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who wrote the book the pillars of the earth\nList of semantic frames: "
            }
        ],
        "question": "who wrote the book the pillars of the earth",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "write-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "book"
            ],
            [
                "name"
            ],
            [
                "the"
            ],
            [
                "pillars"
            ],
            [
                "of"
            ],
            [
                "the"
            ],
            [
                "earth"
            ],
            [
                "write-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "write-01",
                ":ARG1",
                "book"
            ],
            [
                "book",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "the"
            ],
            [
                "name",
                ":op2",
                "pillars"
            ],
            [
                "name",
                ":op3",
                "of"
            ],
            [
                "name",
                ":op4",
                "the"
            ],
            [
                "name",
                ":op5",
                "earth"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "write-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "book"
                    ],
                    [
                        "name"
                    ],
                    [
                        "the"
                    ],
                    [
                        "pillars"
                    ],
                    [
                        "of"
                    ],
                    [
                        "the"
                    ],
                    [
                        "earth"
                    ]
                ],
                "2": [
                    [
                        "write-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "write-01",
                        ":ARG1",
                        "book"
                    ],
                    [
                        "book",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "the"
                    ],
                    [
                        "name",
                        ":op2",
                        "pillars"
                    ],
                    [
                        "name",
                        ":op3",
                        "of"
                    ],
                    [
                        "name",
                        ":op4",
                        "the"
                    ],
                    [
                        "name",
                        ":op5",
                        "earth"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(w / write-01 :ARG0 (a / amr-unknown) :ARG1 (b / book :name (n / name :op1 \"The\" :op2 \"pillars\" :op3 \"of\" :op4 \"the\" :op5 \"Earth\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which state of the united states of america has the highest density\nList of semantic frames: "
            }
        ],
        "question": "which state of the united states of america has the highest density",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "country"
            ],
            [
                "have-degree-91"
            ],
            [
                "state"
            ],
            [
                "density"
            ],
            [
                "name"
            ],
            [
                "most"
            ],
            [
                "high-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "states"
            ],
            [
                "of"
            ],
            [
                "america"
            ],
            [
                "united"
            ],
            [
                "have-03",
                ":ARG0",
                "state"
            ],
            [
                "have-03",
                ":ARG1",
                "density"
            ],
            [
                "country",
                ":part",
                "state"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "density"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "high-02"
            ],
            [
                "state",
                ":mod",
                "amr-unknown"
            ],
            [
                "name",
                ":op2",
                "states"
            ],
            [
                "name",
                ":op3",
                "of"
            ],
            [
                "name",
                ":op4",
                "america"
            ],
            [
                "name",
                ":op1",
                "united"
            ],
            [
                "high-02",
                ":ARG1",
                "density"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "country"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "state"
                    ],
                    [
                        "density"
                    ],
                    [
                        "name"
                    ],
                    [
                        "most"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "states"
                    ],
                    [
                        "of"
                    ],
                    [
                        "america"
                    ],
                    [
                        "united"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "state"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "density"
                    ],
                    [
                        "country",
                        ":part",
                        "state"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "have-degree-91",
                        ":ARG1",
                        "density"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "high-02"
                    ],
                    [
                        "state",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op2",
                        "states"
                    ],
                    [
                        "name",
                        ":op3",
                        "of"
                    ],
                    [
                        "name",
                        ":op4",
                        "america"
                    ],
                    [
                        "name",
                        ":op1",
                        "united"
                    ],
                    [
                        "high-02",
                        ":ARG1",
                        "density"
                    ]
                ]
            },
            26
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (s / state :mod (a / amr-unknown) :part-of (c / country :name (n / name :op1 \"United\" :op2 \"States\" :op3 \"of\" :op4 \"America\"))) :ARG1 (d / density :ARG1-of (h2 / have-degree-91 :ARG2 (h3 / high-02 :ARG1 d) :ARG3 (m / most))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which spaceflights were launched from baikonur\nList of semantic frames: "
            }
        ],
        "question": "which spaceflights were launched from baikonur",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "launch-01"
            ],
            [
                "spaceflight"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "baikonur"
            ],
            [
                "launch-01",
                ":ARG1",
                "spaceflight"
            ],
            [
                "launch-01",
                ":source",
                "city"
            ],
            [
                "spaceflight",
                ":mod",
                "amr-unknown"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "baikonur"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "launch-01"
                    ],
                    [
                        "spaceflight"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "baikonur"
                    ]
                ],
                "2": [
                    [
                        "launch-01",
                        ":ARG1",
                        "spaceflight"
                    ],
                    [
                        "launch-01",
                        ":source",
                        "city"
                    ],
                    [
                        "spaceflight",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "baikonur"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / launch-01 :ARG1 (s / spaceflight :mod (a / amr-unknown)) :source (c / city :name (n / name :op1 \"Baikonur\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me a list of all trumpet players that were bandleaders\nList of semantic frames: "
            }
        ],
        "question": "give me a list of all trumpet players that were bandleaders",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "list-01"
            ],
            [
                "play-11"
            ],
            [
                "lead-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "thing"
            ],
            [
                "i"
            ],
            [
                "person"
            ],
            [
                "trumpet"
            ],
            [
                "band"
            ],
            [
                "all"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "thing"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "list-01",
                ":ARG2",
                "thing"
            ],
            [
                "list-01",
                ":ARG1",
                "person"
            ],
            [
                "play-11",
                ":ARG0",
                "person"
            ],
            [
                "play-11",
                ":ARG2",
                "trumpet"
            ],
            [
                "lead-01",
                ":ARG0",
                "person"
            ],
            [
                "lead-01",
                ":ARG1",
                "band"
            ],
            [
                "person",
                ":mod",
                "all"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "list-01"
                    ],
                    [
                        "play-11"
                    ],
                    [
                        "lead-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "thing"
                    ],
                    [
                        "i"
                    ],
                    [
                        "person"
                    ],
                    [
                        "trumpet"
                    ],
                    [
                        "band"
                    ],
                    [
                        "all"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "thing"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "list-01",
                        ":ARG2",
                        "thing"
                    ],
                    [
                        "list-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "play-11",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "play-11",
                        ":ARG2",
                        "trumpet"
                    ],
                    [
                        "lead-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "lead-01",
                        ":ARG1",
                        "band"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (t2 / thing :ARG2-of (l / list-01 :ARG1 (p / person :ARG0-of (p2 / play-11 :ARG2 (t / trumpet)) :ARG0-of (l2 / lead-01 :ARG1 (b / band)) :mod (a / all)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which u.s. states are in the same timezone as utah\nList of semantic frames: "
            }
        ],
        "question": "which u.s. states are in the same timezone as utah",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "be-located-at-91"
            ],
            [
                "same-01"
            ],
            [
                "state"
            ],
            [
                "state"
            ],
            [
                "timezone"
            ],
            [
                "timezone"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "utah"
            ],
            [
                "name"
            ],
            [
                "u.s."
            ],
            [
                "be-located-at-91",
                ":ARG1",
                "state"
            ],
            [
                "be-located-at-91",
                ":ARG2",
                "timezone"
            ],
            [
                "same-01",
                ":ARG1",
                "timezone"
            ],
            [
                "same-01",
                ":ARG2",
                "timezone"
            ],
            [
                "state",
                ":location",
                "timezone"
            ],
            [
                "state",
                ":name",
                "name"
            ],
            [
                "state",
                ":mod",
                "amr-unknown"
            ],
            [
                "state",
                ":mod",
                "country"
            ],
            [
                "name",
                ":op1",
                "utah"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "be-located-at-91"
                    ],
                    [
                        "same-01"
                    ],
                    [
                        "state"
                    ],
                    [
                        "state"
                    ],
                    [
                        "timezone"
                    ],
                    [
                        "timezone"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "utah"
                    ],
                    [
                        "name"
                    ],
                    [
                        "u.s."
                    ]
                ],
                "2": [
                    [
                        "be-located-at-91",
                        ":ARG1",
                        "state"
                    ],
                    [
                        "be-located-at-91",
                        ":ARG2",
                        "timezone"
                    ],
                    [
                        "same-01",
                        ":ARG1",
                        "timezone"
                    ],
                    [
                        "same-01",
                        ":ARG2",
                        "timezone"
                    ],
                    [
                        "state",
                        ":location",
                        "timezone"
                    ],
                    [
                        "state",
                        ":name",
                        "name"
                    ],
                    [
                        "state",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "state",
                        ":mod",
                        "country"
                    ],
                    [
                        "name",
                        ":op1",
                        "utah"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "u.s."
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / be-located-at-91 :ARG1 (s / state :mod (a / amr-unknown) :mod (c / country :name (n / name :op1 \"U.S.\"))) :ARG2 (t / timezone :ARG1-of (s2 / same-01 :ARG2 (t2 / timezone :location-of (s3 / state :name (n2 / name :op1 \"Utah\"))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which u.s. states possess gold minerals\nList of semantic frames: "
            }
        ],
        "question": "which u.s. states possess gold minerals",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "possess-01"
            ],
            [
                "mineral"
            ],
            [
                "state"
            ],
            [
                "gold"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "u.s."
            ],
            [
                "possess-01",
                ":ARG1",
                "mineral"
            ],
            [
                "possess-01",
                ":ARG0",
                "state"
            ],
            [
                "mineral",
                ":mod",
                "gold"
            ],
            [
                "state",
                ":mod",
                "amr-unknown"
            ],
            [
                "state",
                ":mod",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "u.s."
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "possess-01"
                    ],
                    [
                        "mineral"
                    ],
                    [
                        "state"
                    ],
                    [
                        "gold"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "u.s."
                    ]
                ],
                "2": [
                    [
                        "possess-01",
                        ":ARG1",
                        "mineral"
                    ],
                    [
                        "possess-01",
                        ":ARG0",
                        "state"
                    ],
                    [
                        "mineral",
                        ":mod",
                        "gold"
                    ],
                    [
                        "state",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "state",
                        ":mod",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "u.s."
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / possess-01 :ARG0 (s / state :mod (a / amr-unknown) :mod (c / country :name (n / name :op1 \"U.S.\"))) :ARG1 (m / mineral :mod (g / gold)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the daughter of ingrid bergman married to\nList of semantic frames: "
            }
        ],
        "question": "who is the daughter of ingrid bergman married to",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "marry-01"
            ],
            [
                "have-rel-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "daughter"
            ],
            [
                "name"
            ],
            [
                "bergman"
            ],
            [
                "ingrid"
            ],
            [
                "marry-01",
                ":ARG2",
                "amr-unknown"
            ],
            [
                "marry-01",
                ":ARG1",
                "person"
            ],
            [
                "have-rel-role-91",
                ":ARG0",
                "person"
            ],
            [
                "have-rel-role-91",
                ":ARG1",
                "person"
            ],
            [
                "have-rel-role-91",
                ":ARG2",
                "daughter"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op2",
                "bergman"
            ],
            [
                "name",
                ":op1",
                "ingrid"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "marry-01"
                    ],
                    [
                        "have-rel-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "daughter"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bergman"
                    ],
                    [
                        "ingrid"
                    ]
                ],
                "2": [
                    [
                        "marry-01",
                        ":ARG2",
                        "amr-unknown"
                    ],
                    [
                        "marry-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "have-rel-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "have-rel-role-91",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "have-rel-role-91",
                        ":ARG2",
                        "daughter"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op2",
                        "bergman"
                    ],
                    [
                        "name",
                        ":op1",
                        "ingrid"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(m / marry-01 :ARG1 (p / person :ARG0-of (h / have-rel-role-91 :ARG1 (p2 / person :name (n / name :op1 \"Ingrid\" :op2 \"Bergman\")) :ARG2 (d / daughter))) :ARG2 (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how deep is lake placid\nList of semantic frames: "
            }
        ],
        "question": "how deep is lake placid",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "deep-02"
            ],
            [
                "lake"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "lake"
            ],
            [
                "placid"
            ],
            [
                "deep-02",
                ":ARG1",
                "lake"
            ],
            [
                "deep-02",
                ":quant",
                "amr-unknown"
            ],
            [
                "lake",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "lake"
            ],
            [
                "name",
                ":op2",
                "placid"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "deep-02"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "lake"
                    ],
                    [
                        "placid"
                    ]
                ],
                "2": [
                    [
                        "deep-02",
                        ":ARG1",
                        "lake"
                    ],
                    [
                        "deep-02",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "lake",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "lake"
                    ],
                    [
                        "name",
                        ":op2",
                        "placid"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / deep-02 :ARG1 (l / lake :name (n / name :op1 \"Lake\" :op2 \"Placid\")) :quant (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: show me all museums in london\nList of semantic frames: "
            }
        ],
        "question": "show me all museums in london",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "museum"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "london"
            ],
            [
                "show-01",
                ":mode",
                "imperative"
            ],
            [
                "show-01",
                ":ARG0",
                "you"
            ],
            [
                "show-01",
                ":ARG1",
                "museum"
            ],
            [
                "show-01",
                ":ARG2",
                "i"
            ],
            [
                "museum",
                ":mod",
                "all"
            ],
            [
                "museum",
                ":location",
                "city"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "london"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "museum"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "london"
                    ]
                ],
                "2": [
                    [
                        "show-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "show-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "show-01",
                        ":ARG1",
                        "museum"
                    ],
                    [
                        "show-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "museum",
                        ":mod",
                        "all"
                    ],
                    [
                        "museum",
                        ":location",
                        "city"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "london"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (m / museum :mod (a / all) :location (c / city :name (n / name :op1 \"London\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which caves have more than 3 entrances\nList of semantic frames: "
            }
        ],
        "question": "which caves have more than 3 entrances",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "cave"
            ],
            [
                "enter-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "more-than"
            ],
            [
                "3"
            ],
            [
                "have-03",
                ":ARG0",
                "cave"
            ],
            [
                "have-03",
                ":ARG1",
                "enter-01"
            ],
            [
                "cave",
                ":mod",
                "amr-unknown"
            ],
            [
                "enter-01",
                ":quant",
                "more-than"
            ],
            [
                "more-than",
                ":op1",
                "3"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "cave"
                    ],
                    [
                        "enter-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "3"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "cave"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "enter-01"
                    ],
                    [
                        "cave",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "enter-01",
                        ":quant",
                        "more-than"
                    ],
                    [
                        "more-than",
                        ":op1",
                        "3"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / cave :mod (a / amr-unknown)) :ARG1 (e / enter-01 :quant (m / more-than :op1 3)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the tallest player of the atlanta falcons\nList of semantic frames: "
            }
        ],
        "question": "who is the tallest player of the atlanta falcons",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "have-org-role-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "tall"
            ],
            [
                "most"
            ],
            [
                "person"
            ],
            [
                "team"
            ],
            [
                "play-01"
            ],
            [
                "name"
            ],
            [
                "atlanta"
            ],
            [
                "falcons"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "tall"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "have-degree-91",
                ":ARG5",
                "person"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "person"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "team"
            ],
            [
                "have-org-role-91",
                ":ARG3",
                "play-01"
            ],
            [
                "team",
                ":name",
                "name"
            ],
            [
                "play-01",
                ":ARG0",
                "person"
            ],
            [
                "name",
                ":op1",
                "atlanta"
            ],
            [
                "name",
                ":op2",
                "falcons"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "tall"
                    ],
                    [
                        "most"
                    ],
                    [
                        "person"
                    ],
                    [
                        "team"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "name"
                    ],
                    [
                        "atlanta"
                    ],
                    [
                        "falcons"
                    ]
                ],
                "2": [
                    [
                        "have-degree-91",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "tall"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "have-degree-91",
                        ":ARG5",
                        "person"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "team"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG3",
                        "play-01"
                    ],
                    [
                        "team",
                        ":name",
                        "name"
                    ],
                    [
                        "play-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "name",
                        ":op1",
                        "atlanta"
                    ],
                    [
                        "name",
                        ":op2",
                        "falcons"
                    ]
                ]
            },
            22
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (a / amr-unknown) :ARG2 (t / tall) :ARG3 (m / most) :ARG5 (p3 / person :ARG0-of (h2 / have-org-role-91 :ARG1 (t2 / team :name (n / name :op1 \"Atlanta\" :op2 \"Falcons\")) :ARG3 (p2 / play-01 :ARG0 p3))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what are the top-10 action role-playing video games according to ign\nList of semantic frames: "
            }
        ],
        "question": "what are the top-10 action role-playing video games according to ign",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "say-01"
            ],
            [
                "game"
            ],
            [
                "publication"
            ],
            [
                "10"
            ],
            [
                "video"
            ],
            [
                "play-02"
            ],
            [
                "top"
            ],
            [
                "amr-unknown"
            ],
            [
                "act-02"
            ],
            [
                "name"
            ],
            [
                "role"
            ],
            [
                "ign"
            ],
            [
                "say-01",
                ":ARG1",
                "game"
            ],
            [
                "say-01",
                ":ARG0",
                "publication"
            ],
            [
                "game",
                ":quant",
                "10"
            ],
            [
                "game",
                ":mod",
                "video"
            ],
            [
                "game",
                ":mod",
                "play-02"
            ],
            [
                "game",
                ":mod",
                "top"
            ],
            [
                "game",
                ":domain",
                "amr-unknown"
            ],
            [
                "game",
                ":mod",
                "act-02"
            ],
            [
                "publication",
                ":name",
                "name"
            ],
            [
                "play-02",
                ":ARG1",
                "role"
            ],
            [
                "name",
                ":op1",
                "ign"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "say-01"
                    ],
                    [
                        "game"
                    ],
                    [
                        "publication"
                    ],
                    [
                        "10"
                    ],
                    [
                        "video"
                    ],
                    [
                        "play-02"
                    ],
                    [
                        "top"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "act-02"
                    ],
                    [
                        "name"
                    ],
                    [
                        "role"
                    ],
                    [
                        "ign"
                    ]
                ],
                "2": [
                    [
                        "say-01",
                        ":ARG1",
                        "game"
                    ],
                    [
                        "say-01",
                        ":ARG0",
                        "publication"
                    ],
                    [
                        "game",
                        ":quant",
                        "10"
                    ],
                    [
                        "game",
                        ":mod",
                        "video"
                    ],
                    [
                        "game",
                        ":mod",
                        "play-02"
                    ],
                    [
                        "game",
                        ":mod",
                        "top"
                    ],
                    [
                        "game",
                        ":domain",
                        "amr-unknown"
                    ],
                    [
                        "game",
                        ":mod",
                        "act-02"
                    ],
                    [
                        "publication",
                        ":name",
                        "name"
                    ],
                    [
                        "play-02",
                        ":ARG1",
                        "role"
                    ],
                    [
                        "name",
                        ":op1",
                        "ign"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / game :quant 10 :mod (v / video) :mod (p / play-02 :ARG1 (r / role)) :mod (t / top) :domain (a / amr-unknown) :ARG1-of (s / say-01 :ARG0 (p2 / publication :name (n / name :op1 \"IGN\"))) :mod (a2 / act-02))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all writers that won the nobel prize in literature\nList of semantic frames: "
            }
        ],
        "question": "give me all writers that won the nobel prize in literature",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "write-01"
            ],
            [
                "win-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "award"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "in"
            ],
            [
                "literature"
            ],
            [
                "nobel"
            ],
            [
                "prize"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "write-01",
                ":ARG0",
                "person"
            ],
            [
                "win-01",
                ":ARG1",
                "award"
            ],
            [
                "win-01",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "award",
                ":name",
                "name"
            ],
            [
                "name",
                ":op3",
                "in"
            ],
            [
                "name",
                ":op4",
                "literature"
            ],
            [
                "name",
                ":op1",
                "nobel"
            ],
            [
                "name",
                ":op2",
                "prize"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "write-01"
                    ],
                    [
                        "win-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "award"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "in"
                    ],
                    [
                        "literature"
                    ],
                    [
                        "nobel"
                    ],
                    [
                        "prize"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "write-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "win-01",
                        ":ARG1",
                        "award"
                    ],
                    [
                        "win-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "award",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op3",
                        "in"
                    ],
                    [
                        "name",
                        ":op4",
                        "literature"
                    ],
                    [
                        "name",
                        ":op1",
                        "nobel"
                    ],
                    [
                        "name",
                        ":op2",
                        "prize"
                    ]
                ]
            },
            27
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (w / write-01) :ARG0-of (w2 / win-01 :ARG1 (a / award :name (n / name :op1 \"Nobel\" :op2 \"Prize\" :op3 \"in\" :op4 \"literature\"))) :mod (a2 / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: show me all basketball players that are higher than 2 meters\nList of semantic frames: "
            }
        ],
        "question": "show me all basketball players that are higher than 2 meters",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "play-01"
            ],
            [
                "have-degree-91"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "basketball"
            ],
            [
                "high-02"
            ],
            [
                "more-than"
            ],
            [
                "all"
            ],
            [
                "distance-quantity"
            ],
            [
                "2"
            ],
            [
                "meter"
            ],
            [
                "show-01",
                ":ARG2",
                "i"
            ],
            [
                "show-01",
                ":mode",
                "imperative"
            ],
            [
                "show-01",
                ":ARG0",
                "you"
            ],
            [
                "show-01",
                ":ARG1",
                "person"
            ],
            [
                "play-01",
                ":ARG0",
                "person"
            ],
            [
                "play-01",
                ":ARG1",
                "basketball"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "person"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "high-02"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "more-than"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "high-02",
                ":ARG1",
                "person"
            ],
            [
                "more-than",
                ":op1",
                "distance-quantity"
            ],
            [
                "distance-quantity",
                ":quant",
                "2"
            ],
            [
                "distance-quantity",
                ":unit",
                "meter"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "basketball"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "all"
                    ],
                    [
                        "distance-quantity"
                    ],
                    [
                        "2"
                    ],
                    [
                        "meter"
                    ]
                ],
                "2": [
                    [
                        "show-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "show-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "show-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "show-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "play-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "play-01",
                        ":ARG1",
                        "basketball"
                    ],
                    [
                        "have-degree-91",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "high-02"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "more-than"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "high-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "more-than",
                        ":op1",
                        "distance-quantity"
                    ],
                    [
                        "distance-quantity",
                        ":quant",
                        "2"
                    ],
                    [
                        "distance-quantity",
                        ":unit",
                        "meter"
                    ]
                ]
            },
            28
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (p2 / play-01 :ARG1 (b / basketball)) :ARG1-of (h / have-degree-91 :ARG2 (h2 / high-02 :ARG1 p) :ARG3 (m / more-than :op1 (d / distance-quantity :quant 2 :unit (m2 / meter)))) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: when was the statue of liberty built\nList of semantic frames: "
            }
        ],
        "question": "when was the statue of liberty built",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "build-01"
            ],
            [
                "work-of-art"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "statue"
            ],
            [
                "of"
            ],
            [
                "liberty"
            ],
            [
                "build-01",
                ":ARG1",
                "work-of-art"
            ],
            [
                "build-01",
                ":time",
                "amr-unknown"
            ],
            [
                "work-of-art",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "statue"
            ],
            [
                "name",
                ":op2",
                "of"
            ],
            [
                "name",
                ":op3",
                "liberty"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "build-01"
                    ],
                    [
                        "work-of-art"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "statue"
                    ],
                    [
                        "of"
                    ],
                    [
                        "liberty"
                    ]
                ],
                "2": [
                    [
                        "build-01",
                        ":ARG1",
                        "work-of-art"
                    ],
                    [
                        "build-01",
                        ":time",
                        "amr-unknown"
                    ],
                    [
                        "work-of-art",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "statue"
                    ],
                    [
                        "name",
                        ":op2",
                        "of"
                    ],
                    [
                        "name",
                        ":op3",
                        "liberty"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / build-01 :ARG1 (w / work-of-art :name (n / name :op1 \"Statue\" :op2 \"of\" :op3 \"Liberty\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which states border illinois\nList of semantic frames: "
            }
        ],
        "question": "which states border illinois",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "border-01"
            ],
            [
                "state"
            ],
            [
                "state"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "illinois"
            ],
            [
                "border-01",
                ":ARG1",
                "state"
            ],
            [
                "border-01",
                ":ARG2",
                "state"
            ],
            [
                "state",
                ":mod",
                "amr-unknown"
            ],
            [
                "state",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "illinois"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "border-01"
                    ],
                    [
                        "state"
                    ],
                    [
                        "state"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "illinois"
                    ]
                ],
                "2": [
                    [
                        "border-01",
                        ":ARG1",
                        "state"
                    ],
                    [
                        "border-01",
                        ":ARG2",
                        "state"
                    ],
                    [
                        "state",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "state",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "illinois"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / border-01 :ARG1 (s2 / state :mod (a / amr-unknown)) :ARG2 (s / state :name (n / name :op1 \"Illinois\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who developed minecraft\nList of semantic frames: "
            }
        ],
        "question": "who developed minecraft",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "develop-02"
            ],
            [
                "amr-unknown"
            ],
            [
                "product"
            ],
            [
                "name"
            ],
            [
                "minecraft"
            ],
            [
                "develop-02",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "develop-02",
                ":ARG1",
                "product"
            ],
            [
                "product",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "minecraft"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "develop-02"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "product"
                    ],
                    [
                        "name"
                    ],
                    [
                        "minecraft"
                    ]
                ],
                "2": [
                    [
                        "develop-02",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "develop-02",
                        ":ARG1",
                        "product"
                    ],
                    [
                        "product",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "minecraft"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / develop-02 :ARG0 (a / amr-unknown) :ARG1 (p / product :name (n / name :op1 \"Minecraft\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: where did hillel slovak die\nList of semantic frames: "
            }
        ],
        "question": "where did hillel slovak die",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "die-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "hillel"
            ],
            [
                "slovak"
            ],
            [
                "die-01",
                ":ARG1",
                "person"
            ],
            [
                "die-01",
                ":location",
                "amr-unknown"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "hillel"
            ],
            [
                "name",
                ":op2",
                "slovak"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "die-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hillel"
                    ],
                    [
                        "slovak"
                    ]
                ],
                "2": [
                    [
                        "die-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "die-01",
                        ":location",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "hillel"
                    ],
                    [
                        "name",
                        ":op2",
                        "slovak"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / die-01 :ARG1 (p / person :name (n / name :op1 \"Hillel\" :op2 \"Slovak\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what movies does jesse eisenberg play in\nList of semantic frames: "
            }
        ],
        "question": "what movies does jesse eisenberg play in",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "play-02"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "jesse"
            ],
            [
                "eisenberg"
            ],
            [
                "play-02",
                ":ARG0",
                "person"
            ],
            [
                "play-02",
                ":location",
                "movie"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "movie",
                ":mod",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "jesse"
            ],
            [
                "name",
                ":op2",
                "eisenberg"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-02"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "jesse"
                    ],
                    [
                        "eisenberg"
                    ]
                ],
                "2": [
                    [
                        "play-02",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "play-02",
                        ":location",
                        "movie"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "movie",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "jesse"
                    ],
                    [
                        "name",
                        ":op2",
                        "eisenberg"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-02 :ARG0 (p2 / person :name (n / name :op1 \"Jesse\" :op2 \"Eisenberg\")) :location (m / movie :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all cosmonauts\nList of semantic frames: "
            }
        ],
        "question": "give me all cosmonauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "cosmonaut"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "all"
            ],
            [
                "give-01",
                ":ARG1",
                "cosmonaut"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "cosmonaut",
                ":mod",
                "all"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "cosmonaut"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "all"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":ARG1",
                        "cosmonaut"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "cosmonaut",
                        ":mod",
                        "all"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / cosmonaut :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all swiss non-profit organizations\nList of semantic frames: "
            }
        ],
        "question": "give me all swiss non-profit organizations",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "profit-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "organization"
            ],
            [
                "i"
            ],
            [
                "-"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "switzerland"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "organization"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "profit-01",
                ":polarity",
                "-"
            ],
            [
                "profit-01",
                ":ARG0",
                "organization"
            ],
            [
                "organization",
                ":mod",
                "all"
            ],
            [
                "organization",
                ":mod",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "switzerland"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "profit-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "i"
                    ],
                    [
                        "-"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "switzerland"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "organization"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "profit-01",
                        ":polarity",
                        "-"
                    ],
                    [
                        "profit-01",
                        ":ARG0",
                        "organization"
                    ],
                    [
                        "organization",
                        ":mod",
                        "all"
                    ],
                    [
                        "organization",
                        ":mod",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "switzerland"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / organization :ARG0-of (p / profit-01 :polarity -) :mod (a / all) :mod (c / country :name (n / name :op1 \"Switzerland\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which presidents were born in 1945\nList of semantic frames: "
            }
        ],
        "question": "which presidents were born in 1945",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "date-entity"
            ],
            [
                "president"
            ],
            [
                "amr-unknown"
            ],
            [
                "1945"
            ],
            [
                "bear-02",
                ":ARG1",
                "person"
            ],
            [
                "bear-02",
                ":time",
                "date-entity"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "person"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "president"
            ],
            [
                "person",
                ":mod",
                "amr-unknown"
            ],
            [
                "date-entity",
                ":year",
                "1945"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "president"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "1945"
                    ]
                ],
                "2": [
                    [
                        "bear-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":time",
                        "date-entity"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "president"
                    ],
                    [
                        "person",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "date-entity",
                        ":year",
                        "1945"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :ARG0-of (h / have-org-role-91 :ARG2 (p2 / president)) :mod (a / amr-unknown)) :time (d / date-entity :year 1945))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what kind of music did lou reed play\nList of semantic frames: "
            }
        ],
        "question": "what kind of music did lou reed play",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "play-11"
            ],
            [
                "person"
            ],
            [
                "music"
            ],
            [
                "name"
            ],
            [
                "kind-yy"
            ],
            [
                "lou"
            ],
            [
                "reed"
            ],
            [
                "amr-unknown"
            ],
            [
                "play-11",
                ":ARG0",
                "person"
            ],
            [
                "play-11",
                ":ARG1",
                "music"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "music",
                ":mod",
                "kind-yy"
            ],
            [
                "name",
                ":op1",
                "lou"
            ],
            [
                "name",
                ":op2",
                "reed"
            ],
            [
                "kind-yy",
                ":mod",
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-11"
                    ],
                    [
                        "person"
                    ],
                    [
                        "music"
                    ],
                    [
                        "name"
                    ],
                    [
                        "kind-yy"
                    ],
                    [
                        "lou"
                    ],
                    [
                        "reed"
                    ],
                    [
                        "amr-unknown"
                    ]
                ],
                "2": [
                    [
                        "play-11",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "play-11",
                        ":ARG1",
                        "music"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "music",
                        ":mod",
                        "kind-yy"
                    ],
                    [
                        "name",
                        ":op1",
                        "lou"
                    ],
                    [
                        "name",
                        ":op2",
                        "reed"
                    ],
                    [
                        "kind-yy",
                        ":mod",
                        "amr-unknown"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-11 :ARG0 (p2 / person :name (n / name :op1 \"Lou\" :op2 \"Reed\")) :ARG1 (m / music :mod (k / kind-yy :mod (a / amr-unknown))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: where do the red sox play\nList of semantic frames: "
            }
        ],
        "question": "where do the red sox play",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "play-01"
            ],
            [
                "team"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "red"
            ],
            [
                "sox"
            ],
            [
                "play-01",
                ":ARG0",
                "team"
            ],
            [
                "play-01",
                ":location",
                "amr-unknown"
            ],
            [
                "team",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "red"
            ],
            [
                "name",
                ":op2",
                "sox"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "play-01"
                    ],
                    [
                        "team"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "red"
                    ],
                    [
                        "sox"
                    ]
                ],
                "2": [
                    [
                        "play-01",
                        ":ARG0",
                        "team"
                    ],
                    [
                        "play-01",
                        ":location",
                        "amr-unknown"
                    ],
                    [
                        "team",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "red"
                    ],
                    [
                        "name",
                        ":op2",
                        "sox"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / play-01 :ARG0 (t / team :name (n / name :op1 \"Red\" :op2 \"Sox\")) :location (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: show a list of soccer clubs that play in the bundesliga\nList of semantic frames: "
            }
        ],
        "question": "show a list of soccer clubs that play in the bundesliga",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "list-01"
            ],
            [
                "play-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "thing"
            ],
            [
                "club"
            ],
            [
                "event"
            ],
            [
                "soccer"
            ],
            [
                "name"
            ],
            [
                "bundesliga"
            ],
            [
                "show-01",
                ":mode",
                "imperative"
            ],
            [
                "show-01",
                ":ARG0",
                "you"
            ],
            [
                "show-01",
                ":ARG1",
                "thing"
            ],
            [
                "list-01",
                ":ARG2",
                "thing"
            ],
            [
                "list-01",
                ":ARG1",
                "club"
            ],
            [
                "play-01",
                ":ARG0",
                "club"
            ],
            [
                "play-01",
                ":ARG2",
                "event"
            ],
            [
                "club",
                ":mod",
                "soccer"
            ],
            [
                "event",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "bundesliga"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "list-01"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "thing"
                    ],
                    [
                        "club"
                    ],
                    [
                        "event"
                    ],
                    [
                        "soccer"
                    ],
                    [
                        "name"
                    ],
                    [
                        "bundesliga"
                    ]
                ],
                "2": [
                    [
                        "show-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "show-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "show-01",
                        ":ARG1",
                        "thing"
                    ],
                    [
                        "list-01",
                        ":ARG2",
                        "thing"
                    ],
                    [
                        "list-01",
                        ":ARG1",
                        "club"
                    ],
                    [
                        "play-01",
                        ":ARG0",
                        "club"
                    ],
                    [
                        "play-01",
                        ":ARG2",
                        "event"
                    ],
                    [
                        "club",
                        ":mod",
                        "soccer"
                    ],
                    [
                        "event",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "bundesliga"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (t / thing :ARG2-of (l / list-01 :ARG1 (c / club :mod (s2 / soccer) :ARG0-of (p / play-01 :ARG2 (e / event :name (n / name :op1 \"Bundesliga\")))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which volcanos in japan erupted since 2000\nList of semantic frames: "
            }
        ],
        "question": "which volcanos in japan erupted since 2000",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "erupt-01"
            ],
            [
                "since"
            ],
            [
                "volcano"
            ],
            [
                "date-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "2000"
            ],
            [
                "name"
            ],
            [
                "japan"
            ],
            [
                "erupt-01",
                ":time",
                "since"
            ],
            [
                "erupt-01",
                ":ARG1",
                "volcano"
            ],
            [
                "since",
                ":op1",
                "date-entity"
            ],
            [
                "volcano",
                ":mod",
                "amr-unknown"
            ],
            [
                "volcano",
                ":location",
                "country"
            ],
            [
                "date-entity",
                ":year",
                "2000"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "japan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "erupt-01"
                    ],
                    [
                        "since"
                    ],
                    [
                        "volcano"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "2000"
                    ],
                    [
                        "name"
                    ],
                    [
                        "japan"
                    ]
                ],
                "2": [
                    [
                        "erupt-01",
                        ":time",
                        "since"
                    ],
                    [
                        "erupt-01",
                        ":ARG1",
                        "volcano"
                    ],
                    [
                        "since",
                        ":op1",
                        "date-entity"
                    ],
                    [
                        "volcano",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "volcano",
                        ":location",
                        "country"
                    ],
                    [
                        "date-entity",
                        ":year",
                        "2000"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "japan"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(e / erupt-01 :ARG1 (v / volcano :mod (a / amr-unknown) :location (c / country :name (n / name :op1 \"Japan\"))) :time (s / since :op1 (d / date-entity :year 2000)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which bridges cross the seine\nList of semantic frames: "
            }
        ],
        "question": "which bridges cross the seine",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "cross-02"
            ],
            [
                "bridge"
            ],
            [
                "river"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "seine"
            ],
            [
                "cross-02",
                ":ARG0",
                "bridge"
            ],
            [
                "cross-02",
                ":ARG1",
                "river"
            ],
            [
                "bridge",
                ":mod",
                "amr-unknown"
            ],
            [
                "river",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "seine"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cross-02"
                    ],
                    [
                        "bridge"
                    ],
                    [
                        "river"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "seine"
                    ]
                ],
                "2": [
                    [
                        "cross-02",
                        ":ARG0",
                        "bridge"
                    ],
                    [
                        "cross-02",
                        ":ARG1",
                        "river"
                    ],
                    [
                        "bridge",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "river",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "seine"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cross-02 :ARG0 (b / bridge :mod (a / amr-unknown)) :ARG1 (r / river :name (n / name :op1 \"Seine\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which bridges cross the seine\nList of semantic frames: "
            }
        ],
        "question": "which bridges cross the seine",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "cross-02"
            ],
            [
                "bridge"
            ],
            [
                "river"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "seine"
            ],
            [
                "cross-02",
                ":ARG0",
                "bridge"
            ],
            [
                "cross-02",
                ":ARG1",
                "river"
            ],
            [
                "bridge",
                ":mod",
                "amr-unknown"
            ],
            [
                "river",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "seine"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cross-02"
                    ],
                    [
                        "bridge"
                    ],
                    [
                        "river"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "seine"
                    ]
                ],
                "2": [
                    [
                        "cross-02",
                        ":ARG0",
                        "bridge"
                    ],
                    [
                        "cross-02",
                        ":ARG1",
                        "river"
                    ],
                    [
                        "bridge",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "river",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "seine"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cross-02 :ARG0 (b / bridge :mod (a / amr-unknown)) :ARG1 (r / river :name (n / name :op1 \"Seine\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many films did hal roach produce\nList of semantic frames: "
            }
        ],
        "question": "how many films did hal roach produce",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "produce-01"
            ],
            [
                "person"
            ],
            [
                "film"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "hal"
            ],
            [
                "roach"
            ],
            [
                "produce-01",
                ":ARG0",
                "person"
            ],
            [
                "produce-01",
                ":ARG1",
                "film"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "film",
                ":quant",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "hal"
            ],
            [
                "name",
                ":op2",
                "roach"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "produce-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "film"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "hal"
                    ],
                    [
                        "roach"
                    ]
                ],
                "2": [
                    [
                        "produce-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "produce-01",
                        ":ARG1",
                        "film"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "film",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "hal"
                    ],
                    [
                        "name",
                        ":op2",
                        "roach"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / produce-01 :ARG0 (p2 / person :name (n / name :op1 \"Hal\" :op2 \"Roach\")) :ARG1 (f / film :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all danish movies\nList of semantic frames: "
            }
        ],
        "question": "give me all danish movies",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "movie"
            ],
            [
                "i"
            ],
            [
                "language"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "denmark"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "movie"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "movie",
                ":medium",
                "language"
            ],
            [
                "movie",
                ":mod",
                "all"
            ],
            [
                "language",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "denmark"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "i"
                    ],
                    [
                        "language"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "denmark"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "movie"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "movie",
                        ":medium",
                        "language"
                    ],
                    [
                        "movie",
                        ":mod",
                        "all"
                    ],
                    [
                        "language",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "denmark"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (m / movie :medium (l / language :name (n / name :op1 \"Denmark\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the most frequent cause of death\nList of semantic frames: "
            }
        ],
        "question": "what is the most frequent cause of death",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "cause-01"
            ],
            [
                "have-degree-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "die-01"
            ],
            [
                "frequent-02"
            ],
            [
                "most"
            ],
            [
                "cause-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "cause-01",
                ":ARG1",
                "die-01"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "frequent-02"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "frequent-02",
                ":ARG1",
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "cause-01"
                    ],
                    [
                        "have-degree-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "die-01"
                    ],
                    [
                        "frequent-02"
                    ],
                    [
                        "most"
                    ]
                ],
                "2": [
                    [
                        "cause-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "cause-01",
                        ":ARG1",
                        "die-01"
                    ],
                    [
                        "have-degree-91",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "frequent-02"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "frequent-02",
                        ":ARG1",
                        "amr-unknown"
                    ]
                ]
            },
            12
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / cause-01 :ARG0 (a / amr-unknown :ARG1-of (h / have-degree-91 :ARG2 (f / frequent-02 :ARG1 a) :ARG3 (m / most))) :ARG1 (d / die-01))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who are the four youngest mvp basketball players\nList of semantic frames: "
            }
        ],
        "question": "who are the four youngest mvp basketball players",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "play-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "young"
            ],
            [
                "most"
            ],
            [
                "person"
            ],
            [
                "4"
            ],
            [
                "award"
            ],
            [
                "name"
            ],
            [
                "mvp"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "young"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "have-degree-91",
                ":ARG5",
                "person"
            ],
            [
                "play-01",
                ":ARG0",
                "person"
            ],
            [
                "amr-unknown",
                ":quant",
                "4"
            ],
            [
                "person",
                ":mod",
                "award"
            ],
            [
                "award",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "mvp"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "play-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "young"
                    ],
                    [
                        "most"
                    ],
                    [
                        "person"
                    ],
                    [
                        "4"
                    ],
                    [
                        "award"
                    ],
                    [
                        "name"
                    ],
                    [
                        "mvp"
                    ]
                ],
                "2": [
                    [
                        "have-degree-91",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "young"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "have-degree-91",
                        ":ARG5",
                        "person"
                    ],
                    [
                        "play-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "amr-unknown",
                        ":quant",
                        "4"
                    ],
                    [
                        "person",
                        ":mod",
                        "award"
                    ],
                    [
                        "award",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "mvp"
                    ]
                ]
            },
            19
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (a4 / amr-unknown :quant 4) :ARG2 (y / young) :ARG3 (m2 / most) :ARG5 (p3 / person :ARG0-of (p4 / play-01) :mod (a2 / award :name (n / name :op1 \"MVP\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all companies in munich\nList of semantic frames: "
            }
        ],
        "question": "give me all companies in munich",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "company"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "city"
            ],
            [
                "name"
            ],
            [
                "munich"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "company"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "company",
                ":mod",
                "all"
            ],
            [
                "company",
                ":location",
                "city"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "munich"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "company"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "city"
                    ],
                    [
                        "name"
                    ],
                    [
                        "munich"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "company"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "company",
                        ":mod",
                        "all"
                    ],
                    [
                        "company",
                        ":location",
                        "city"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "munich"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / company :mod (a / all) :location (c2 / city :name (n / name :op1 \"Munich\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the capitals of all countries that the himalayas run through\nList of semantic frames: "
            }
        ],
        "question": "give me the capitals of all countries that the himalayas run through",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "run-04"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "city"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "capital"
            ],
            [
                "mountain"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "himalayas"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "city"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "city"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "country"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "capital"
            ],
            [
                "run-04",
                ":path",
                "country"
            ],
            [
                "run-04",
                ":ARG1",
                "mountain"
            ],
            [
                "country",
                ":mod",
                "all"
            ],
            [
                "mountain",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "himalayas"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "run-04"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "city"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "capital"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "himalayas"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "city"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "city"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "country"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "capital"
                    ],
                    [
                        "run-04",
                        ":path",
                        "country"
                    ],
                    [
                        "run-04",
                        ":ARG1",
                        "mountain"
                    ],
                    [
                        "country",
                        ":mod",
                        "all"
                    ],
                    [
                        "mountain",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "himalayas"
                    ]
                ]
            },
            25
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / city :ARG0-of (h / have-org-role-91 :ARG1 (c2 / country :path-of (r / run-04 :ARG1 (m / mountain :name (n / name :op1 \"Himalayas\"))) :mod (a / all)) :ARG2 (c3 / capital))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many movies did park chan-wook direct\nList of semantic frames: "
            }
        ],
        "question": "how many movies did park chan-wook direct",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "direct-01"
            ],
            [
                "person"
            ],
            [
                "movie"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "park"
            ],
            [
                "chan-wook"
            ],
            [
                "direct-01",
                ":ARG0",
                "person"
            ],
            [
                "direct-01",
                ":ARG1",
                "movie"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "movie",
                ":quant",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "park"
            ],
            [
                "name",
                ":op2",
                "chan-wook"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "direct-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "park"
                    ],
                    [
                        "chan-wook"
                    ]
                ],
                "2": [
                    [
                        "direct-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "direct-01",
                        ":ARG1",
                        "movie"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "movie",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "park"
                    ],
                    [
                        "name",
                        ":op2",
                        "chan-wook"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(d / direct-01 :ARG0 (p / person :name (n / name :op1 \"Park\" :op2 \"Chan-wook\")) :ARG1 (m / movie :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many airlines are there\nList of semantic frames: "
            }
        ],
        "question": "how many airlines are there",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "airline"
            ],
            [
                "amr-unknown"
            ],
            [
                "airline",
                ":quant",
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "airline"
                    ],
                    [
                        "amr-unknown"
                    ]
                ],
                "2": [
                    [
                        "airline",
                        ":quant",
                        "amr-unknown"
                    ]
                ]
            },
            3
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / airline :quant (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all islands that belong to japan\nList of semantic frames: "
            }
        ],
        "question": "give me all islands that belong to japan",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "belong-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "island"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "japan"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "island"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "belong-01",
                ":ARG0",
                "island"
            ],
            [
                "belong-01",
                ":ARG1",
                "country"
            ],
            [
                "island",
                ":mod",
                "all"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "japan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "belong-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "island"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "japan"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "island"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "belong-01",
                        ":ARG0",
                        "island"
                    ],
                    [
                        "belong-01",
                        ":ARG1",
                        "country"
                    ],
                    [
                        "island",
                        ":mod",
                        "all"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "japan"
                    ]
                ]
            },
            19
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (i2 / island :mod (a / all) :ARG0-of (b / belong-01 :ARG1 (c / country :name (n / name :op1 \"Japan\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many inhabitants does maribor have\nList of semantic frames: "
            }
        ],
        "question": "how many inhabitants does maribor have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "inhabit-01"
            ],
            [
                "city"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "maribor"
            ],
            [
                "have-03",
                ":ARG0",
                "city"
            ],
            [
                "have-03",
                ":ARG1",
                "person"
            ],
            [
                "inhabit-01",
                ":ARG0",
                "person"
            ],
            [
                "inhabit-01",
                ":ARG1",
                "city"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "person",
                ":quant",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "maribor"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "inhabit-01"
                    ],
                    [
                        "city"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "maribor"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "city"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "inhabit-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "inhabit-01",
                        ":ARG1",
                        "city"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "person",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "maribor"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / city :name (n / name :op1 \"Maribor\")) :ARG1 (p / person :ARG0-of (i2 / inhabit-01 :ARG1 c) :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all apollo 14 astronauts\nList of semantic frames: "
            }
        ],
        "question": "give me all apollo 14 astronauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "astronaut"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "spaceship"
            ],
            [
                "name"
            ],
            [
                "apollo"
            ],
            [
                "14"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "astronaut"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "astronaut",
                ":mod",
                "all"
            ],
            [
                "astronaut",
                ":mod",
                "spaceship"
            ],
            [
                "spaceship",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "apollo"
            ],
            [
                "name",
                ":op2",
                "14"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "astronaut"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "spaceship"
                    ],
                    [
                        "name"
                    ],
                    [
                        "apollo"
                    ],
                    [
                        "14"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "astronaut"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "astronaut",
                        ":mod",
                        "all"
                    ],
                    [
                        "astronaut",
                        ":mod",
                        "spaceship"
                    ],
                    [
                        "spaceship",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "apollo"
                    ],
                    [
                        "name",
                        ":op2",
                        "14"
                    ]
                ]
            },
            19
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (a / astronaut :mod (a2 / all) :mod (s / spaceship :name (n / name :op1 \"Apollo\" :op2 \"14\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which companies have more than 1 million employees\nList of semantic frames: "
            }
        ],
        "question": "which companies have more than 1 million employees",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "employ-01"
            ],
            [
                "company"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "more-than"
            ],
            [
                "1000000"
            ],
            [
                "have-03",
                ":ARG1",
                "company"
            ],
            [
                "have-03",
                ":ARG1",
                "person"
            ],
            [
                "employ-01",
                ":ARG1",
                "person"
            ],
            [
                "employ-01",
                ":ARG0",
                "company"
            ],
            [
                "company",
                ":mod",
                "amr-unknown"
            ],
            [
                "person",
                ":quant",
                "more-than"
            ],
            [
                "more-than",
                ":op1",
                "1000000"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "employ-01"
                    ],
                    [
                        "company"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "more-than"
                    ],
                    [
                        "1000000"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG1",
                        "company"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "employ-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "employ-01",
                        ":ARG0",
                        "company"
                    ],
                    [
                        "company",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":quant",
                        "more-than"
                    ],
                    [
                        "more-than",
                        ":op1",
                        "1000000"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG1 (c / company :mod (a / amr-unknown)) :ARG1 (p / person :ARG1-of (e / employ-01 :ARG0 c) :quant (m / more-than :op1 1000000)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: in which films directed by garry marshall was julia roberts starring\nList of semantic frames: "
            }
        ],
        "question": "in which films directed by garry marshall was julia roberts starring",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "star-01"
            ],
            [
                "direct-01"
            ],
            [
                "person"
            ],
            [
                "film"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "julia"
            ],
            [
                "roberts"
            ],
            [
                "garry"
            ],
            [
                "marshall"
            ],
            [
                "star-01",
                ":ARG1",
                "person"
            ],
            [
                "star-01",
                ":ARG2",
                "film"
            ],
            [
                "direct-01",
                ":ARG1",
                "film"
            ],
            [
                "direct-01",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "film",
                ":mod",
                "amr-unknown"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "julia"
            ],
            [
                "name",
                ":op2",
                "roberts"
            ],
            [
                "name",
                ":op1",
                "garry"
            ],
            [
                "name",
                ":op2",
                "marshall"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "star-01"
                    ],
                    [
                        "direct-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "film"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "julia"
                    ],
                    [
                        "roberts"
                    ],
                    [
                        "garry"
                    ],
                    [
                        "marshall"
                    ]
                ],
                "2": [
                    [
                        "star-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "star-01",
                        ":ARG2",
                        "film"
                    ],
                    [
                        "direct-01",
                        ":ARG1",
                        "film"
                    ],
                    [
                        "direct-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "film",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "julia"
                    ],
                    [
                        "name",
                        ":op2",
                        "roberts"
                    ],
                    [
                        "name",
                        ":op1",
                        "garry"
                    ],
                    [
                        "name",
                        ":op2",
                        "marshall"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / star-01 :ARG1 (p / person :name (n / name :op1 \"Julia\" :op2 \"Roberts\")) :ARG2 (f / film :mod (a / amr-unknown) :ARG1-of (d / direct-01 :ARG0 (p2 / person :name (n2 / name :op1 \"Garry\" :op2 \"Marshall\")))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all soccer clubs in the premier league\nList of semantic frames: "
            }
        ],
        "question": "give me all soccer clubs in the premier league",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "club"
            ],
            [
                "i"
            ],
            [
                "soccer"
            ],
            [
                "all"
            ],
            [
                "league"
            ],
            [
                "name"
            ],
            [
                "premier"
            ],
            [
                "league"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "club"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "club",
                ":mod",
                "soccer"
            ],
            [
                "club",
                ":mod",
                "all"
            ],
            [
                "soccer",
                ":prep-in",
                "league"
            ],
            [
                "league",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "premier"
            ],
            [
                "name",
                ":op2",
                "league"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "club"
                    ],
                    [
                        "i"
                    ],
                    [
                        "soccer"
                    ],
                    [
                        "all"
                    ],
                    [
                        "league"
                    ],
                    [
                        "name"
                    ],
                    [
                        "premier"
                    ],
                    [
                        "league"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "club"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "club",
                        ":mod",
                        "soccer"
                    ],
                    [
                        "club",
                        ":mod",
                        "all"
                    ],
                    [
                        "soccer",
                        ":prep-in",
                        "league"
                    ],
                    [
                        "league",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "premier"
                    ],
                    [
                        "name",
                        ":op2",
                        "league"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / club :mod (s / soccer :prep-in (l / league :name (n / name :op1 \"Premier\" :op2 \"League\"))) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the highest place of the urals\nList of semantic frames: "
            }
        ],
        "question": "what is the highest place of the urals",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "mountain"
            ],
            [
                "high-02"
            ],
            [
                "most"
            ],
            [
                "place"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "urals"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "high-02"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "have-degree-91",
                ":ARG5",
                "place"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "mountain",
                ":part",
                "place"
            ],
            [
                "mountain",
                ":name",
                "name"
            ],
            [
                "high-02",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "urals"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "high-02"
                    ],
                    [
                        "most"
                    ],
                    [
                        "place"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "urals"
                    ]
                ],
                "2": [
                    [
                        "have-degree-91",
                        ":ARG2",
                        "high-02"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "have-degree-91",
                        ":ARG5",
                        "place"
                    ],
                    [
                        "have-degree-91",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "mountain",
                        ":part",
                        "place"
                    ],
                    [
                        "mountain",
                        ":name",
                        "name"
                    ],
                    [
                        "high-02",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "urals"
                    ]
                ]
            },
            16
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h3 / have-degree-91 :ARG1 (a / amr-unknown) :ARG2 (h / high-02 :ARG1 a) :ARG3 (m / most) :ARG5 (p / place :part-of (m2 / mountain :name (n / name :op1 \"Urals\"))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the governor of wyoming\nList of semantic frames: "
            }
        ],
        "question": "who is the governor of wyoming",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "govern-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "state"
            ],
            [
                "name"
            ],
            [
                "wyoming"
            ],
            [
                "govern-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "govern-01",
                ":ARG1",
                "state"
            ],
            [
                "state",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "wyoming"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "govern-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "state"
                    ],
                    [
                        "name"
                    ],
                    [
                        "wyoming"
                    ]
                ],
                "2": [
                    [
                        "govern-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "govern-01",
                        ":ARG1",
                        "state"
                    ],
                    [
                        "state",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "wyoming"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / govern-01 :ARG0 (a / amr-unknown) :ARG1 (s / state :name (n / name :op1 \"Wyoming\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: where did the architect of the eiffel tower study\nList of semantic frames: "
            }
        ],
        "question": "where did the architect of the eiffel tower study",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "study-01"
            ],
            [
                "architect"
            ],
            [
                "amr-unknown"
            ],
            [
                "tower"
            ],
            [
                "name"
            ],
            [
                "eiffel"
            ],
            [
                "tower"
            ],
            [
                "study-01",
                ":ARG0",
                "architect"
            ],
            [
                "study-01",
                ":location",
                "amr-unknown"
            ],
            [
                "architect",
                ":mod",
                "tower"
            ],
            [
                "tower",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "eiffel"
            ],
            [
                "name",
                ":op2",
                "tower"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "study-01"
                    ],
                    [
                        "architect"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "tower"
                    ],
                    [
                        "name"
                    ],
                    [
                        "eiffel"
                    ],
                    [
                        "tower"
                    ]
                ],
                "2": [
                    [
                        "study-01",
                        ":ARG0",
                        "architect"
                    ],
                    [
                        "study-01",
                        ":location",
                        "amr-unknown"
                    ],
                    [
                        "architect",
                        ":mod",
                        "tower"
                    ],
                    [
                        "tower",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "eiffel"
                    ],
                    [
                        "name",
                        ":op2",
                        "tower"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / study-01 :ARG0 (a / architect :mod (t / tower :name (n / name :op1 \"Eiffel\" :op2 \"Tower\"))) :location (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all world heritage sites designated within the past two years\nList of semantic frames: "
            }
        ],
        "question": "give me all world heritage sites designated within the past two years",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "designate-01"
            ],
            [
                "i"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "site"
            ],
            [
                "before"
            ],
            [
                "all"
            ],
            [
                "heritage"
            ],
            [
                "now"
            ],
            [
                "temporal-quantity"
            ],
            [
                "world"
            ],
            [
                "2"
            ],
            [
                "year"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "site"
            ],
            [
                "designate-01",
                ":ARG1",
                "site"
            ],
            [
                "designate-01",
                ":time",
                "before"
            ],
            [
                "site",
                ":mod",
                "all"
            ],
            [
                "site",
                ":mod",
                "heritage"
            ],
            [
                "before",
                ":op1",
                "now"
            ],
            [
                "before",
                ":duration",
                "temporal-quantity"
            ],
            [
                "heritage",
                ":mod",
                "world"
            ],
            [
                "temporal-quantity",
                ":quant",
                "2"
            ],
            [
                "temporal-quantity",
                ":unit",
                "year"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "designate-01"
                    ],
                    [
                        "i"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "site"
                    ],
                    [
                        "before"
                    ],
                    [
                        "all"
                    ],
                    [
                        "heritage"
                    ],
                    [
                        "now"
                    ],
                    [
                        "temporal-quantity"
                    ],
                    [
                        "world"
                    ],
                    [
                        "2"
                    ],
                    [
                        "year"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "site"
                    ],
                    [
                        "designate-01",
                        ":ARG1",
                        "site"
                    ],
                    [
                        "designate-01",
                        ":time",
                        "before"
                    ],
                    [
                        "site",
                        ":mod",
                        "all"
                    ],
                    [
                        "site",
                        ":mod",
                        "heritage"
                    ],
                    [
                        "before",
                        ":op1",
                        "now"
                    ],
                    [
                        "before",
                        ":duration",
                        "temporal-quantity"
                    ],
                    [
                        "heritage",
                        ":mod",
                        "world"
                    ],
                    [
                        "temporal-quantity",
                        ":quant",
                        "2"
                    ],
                    [
                        "temporal-quantity",
                        ":unit",
                        "year"
                    ]
                ]
            },
            27
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (s / site :mod (a / all) :ARG1-of (d / designate-01 :time (b / before :op1 (n2 / now) :duration (t / temporal-quantity :quant 2 :unit (y2 / year)))) :mod (h / heritage :mod (w / world))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all actors who were born in paris after 1950\nList of semantic frames: "
            }
        ],
        "question": "give me all actors who were born in paris after 1950",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "city"
            ],
            [
                "after"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "date-entity"
            ],
            [
                "paris"
            ],
            [
                "1950"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "act-01",
                ":ARG0",
                "person"
            ],
            [
                "bear-02",
                ":ARG1",
                "person"
            ],
            [
                "bear-02",
                ":location",
                "city"
            ],
            [
                "bear-02",
                ":time",
                "after"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "after",
                ":op1",
                "date-entity"
            ],
            [
                "name",
                ":op1",
                "paris"
            ],
            [
                "date-entity",
                ":year",
                "1950"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "city"
                    ],
                    [
                        "after"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "paris"
                    ],
                    [
                        "1950"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "act-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":location",
                        "city"
                    ],
                    [
                        "bear-02",
                        ":time",
                        "after"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "after",
                        ":op1",
                        "date-entity"
                    ],
                    [
                        "name",
                        ":op1",
                        "paris"
                    ],
                    [
                        "date-entity",
                        ":year",
                        "1950"
                    ]
                ]
            },
            27
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Paris\")) :time (a3 / after :op1 (d / date-entity :year 1950)))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which movies star both liz taylor and richard burton\nList of semantic frames: "
            }
        ],
        "question": "which movies star both liz taylor and richard burton",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "star-01"
            ],
            [
                "and"
            ],
            [
                "movie"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "name"
            ],
            [
                "taylor"
            ],
            [
                "liz"
            ],
            [
                "richard"
            ],
            [
                "burton"
            ],
            [
                "star-01",
                ":ARG1",
                "and"
            ],
            [
                "star-01",
                ":ARG2",
                "movie"
            ],
            [
                "and",
                ":op1",
                "person"
            ],
            [
                "and",
                ":op2",
                "person"
            ],
            [
                "movie",
                ":mod",
                "amr-unknown"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op2",
                "taylor"
            ],
            [
                "name",
                ":op1",
                "liz"
            ],
            [
                "name",
                ":op1",
                "richard"
            ],
            [
                "name",
                ":op2",
                "burton"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "star-01"
                    ],
                    [
                        "and"
                    ],
                    [
                        "movie"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "name"
                    ],
                    [
                        "taylor"
                    ],
                    [
                        "liz"
                    ],
                    [
                        "richard"
                    ],
                    [
                        "burton"
                    ]
                ],
                "2": [
                    [
                        "star-01",
                        ":ARG1",
                        "and"
                    ],
                    [
                        "star-01",
                        ":ARG2",
                        "movie"
                    ],
                    [
                        "and",
                        ":op1",
                        "person"
                    ],
                    [
                        "and",
                        ":op2",
                        "person"
                    ],
                    [
                        "movie",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op2",
                        "taylor"
                    ],
                    [
                        "name",
                        ":op1",
                        "liz"
                    ],
                    [
                        "name",
                        ":op1",
                        "richard"
                    ],
                    [
                        "name",
                        ":op2",
                        "burton"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / star-01 :ARG1 (a / and :op1 (p / person :name (n / name :op1 \"Liz\" :op2 \"Taylor\")) :op2 (p2 / person :name (n2 / name :op1 \"Richard\" :op2 \"Burton\"))) :ARG2 (m / movie :mod (a2 / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all australian nonprofit organizations\nList of semantic frames: "
            }
        ],
        "question": "give me all australian nonprofit organizations",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "profit-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "organization"
            ],
            [
                "i"
            ],
            [
                "-"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "australia"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "organization"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "profit-01",
                ":polarity",
                "-"
            ],
            [
                "profit-01",
                ":ARG0",
                "organization"
            ],
            [
                "organization",
                ":mod",
                "all"
            ],
            [
                "organization",
                ":mod",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "australia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "profit-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "i"
                    ],
                    [
                        "-"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "australia"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "organization"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "profit-01",
                        ":polarity",
                        "-"
                    ],
                    [
                        "profit-01",
                        ":ARG0",
                        "organization"
                    ],
                    [
                        "organization",
                        ":mod",
                        "all"
                    ],
                    [
                        "organization",
                        ":mod",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "australia"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / organization :ARG0-of (p / profit-01 :polarity -) :mod (a / all) :mod (c / country :name (n / name :op1 \"Australia\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which pope succeeded john paul ii\nList of semantic frames: "
            }
        ],
        "question": "which pope succeeded john paul ii",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "succeed-02"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "person"
            ],
            [
                "pope"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "paul"
            ],
            [
                "ii"
            ],
            [
                "john"
            ],
            [
                "succeed-02",
                ":ARG1",
                "person"
            ],
            [
                "succeed-02",
                ":ARG0",
                "person"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "person"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "pope"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "person",
                ":mod",
                "amr-unknown"
            ],
            [
                "name",
                ":op2",
                "paul"
            ],
            [
                "name",
                ":op3",
                "ii"
            ],
            [
                "name",
                ":op1",
                "john"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "succeed-02"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "person"
                    ],
                    [
                        "pope"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "paul"
                    ],
                    [
                        "ii"
                    ],
                    [
                        "john"
                    ]
                ],
                "2": [
                    [
                        "succeed-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "succeed-02",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "pope"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "person",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op2",
                        "paul"
                    ],
                    [
                        "name",
                        ":op3",
                        "ii"
                    ],
                    [
                        "name",
                        ":op1",
                        "john"
                    ]
                ]
            },
            19
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / succeed-02 :ARG0 (p / person :ARG0-of (h / have-org-role-91 :ARG2 (p2 / pope)) :mod (a / amr-unknown)) :ARG1 (p3 / person :name (n / name :op1 \"John\" :op2 \"Paul\" :op3 \"II\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all esa astronauts\nList of semantic frames: "
            }
        ],
        "question": "give me all esa astronauts",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "organization"
            ],
            [
                "astronaut"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "esa"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "organization"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "astronaut"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "organization",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "esa"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "astronaut"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "esa"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "organization"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "astronaut"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "organization",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "esa"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :mod (a2 / all) :ARG0-of (h / have-org-role-91 :ARG1 (o / organization :name (n / name :op1 \"ESA\")) :ARG2 (a / astronaut))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who was president of pakistan in 1978\nList of semantic frames: "
            }
        ],
        "question": "who was president of pakistan in 1978",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-org-role-91"
            ],
            [
                "president"
            ],
            [
                "date-entity"
            ],
            [
                "amr-unknown"
            ],
            [
                "country"
            ],
            [
                "1978"
            ],
            [
                "name"
            ],
            [
                "pakistan"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "president"
            ],
            [
                "have-org-role-91",
                ":time",
                "date-entity"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "country"
            ],
            [
                "date-entity",
                ":year",
                "1978"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "pakistan"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-org-role-91"
                    ],
                    [
                        "president"
                    ],
                    [
                        "date-entity"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "country"
                    ],
                    [
                        "1978"
                    ],
                    [
                        "name"
                    ],
                    [
                        "pakistan"
                    ]
                ],
                "2": [
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "president"
                    ],
                    [
                        "have-org-role-91",
                        ":time",
                        "date-entity"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "country"
                    ],
                    [
                        "date-entity",
                        ":year",
                        "1978"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "pakistan"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-org-role-91 :ARG0 (a / amr-unknown) :ARG1 (c / country :name (n / name :op1 \"Pakistan\")) :ARG2 (p2 / president) :time (d / date-entity :year 1978))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who is the owner of rolls-royce\nList of semantic frames: "
            }
        ],
        "question": "who is the owner of rolls-royce",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "own-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "rolls-royce"
            ],
            [
                "own-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "own-01",
                ":ARG1",
                "company"
            ],
            [
                "company",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "rolls-royce"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "own-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "rolls-royce"
                    ]
                ],
                "2": [
                    [
                        "own-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "own-01",
                        ":ARG1",
                        "company"
                    ],
                    [
                        "company",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "rolls-royce"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(o / own-01 :ARG0 (a / amr-unknown) :ARG1 (c / company :name (n / name :op1 \"Rolls-Royce\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many museums does paris have\nList of semantic frames: "
            }
        ],
        "question": "how many museums does paris have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "city"
            ],
            [
                "museum"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "paris"
            ],
            [
                "have-03",
                ":ARG0",
                "city"
            ],
            [
                "have-03",
                ":ARG1",
                "museum"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "museum",
                ":quant",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "paris"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "city"
                    ],
                    [
                        "museum"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "paris"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "city"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "museum"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "museum",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "paris"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / city :name (n / name :op1 \"Paris\")) :ARG1 (m / museum :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: where was jfk assassinated\nList of semantic frames: "
            }
        ],
        "question": "where was jfk assassinated",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "assassinate-01"
            ],
            [
                "person"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "jfk"
            ],
            [
                "assassinate-01",
                ":ARG1",
                "person"
            ],
            [
                "assassinate-01",
                ":location",
                "amr-unknown"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "jfk"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "assassinate-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "jfk"
                    ]
                ],
                "2": [
                    [
                        "assassinate-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "assassinate-01",
                        ":location",
                        "amr-unknown"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "jfk"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / assassinate-01 :ARG1 (p / person :name (n / name :op1 \"JFK\")) :location (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all federal chancellors of germany\nList of semantic frames: "
            }
        ],
        "question": "give me all federal chancellors of germany",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "chancellor"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "federal"
            ],
            [
                "germany"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "country"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "chancellor"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "chancellor",
                ":mod",
                "federal"
            ],
            [
                "name",
                ":op1",
                "germany"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "chancellor"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "federal"
                    ],
                    [
                        "germany"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "country"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "chancellor"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "chancellor",
                        ":mod",
                        "federal"
                    ],
                    [
                        "name",
                        ":op1",
                        "germany"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (h / have-org-role-91 :ARG1 (c / country :name (n / name :op1 \"Germany\")) :ARG2 (c2 / chancellor :mod (f / federal))) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: show me everyone who was born on halloween\nList of semantic frames: "
            }
        ],
        "question": "show me everyone who was born on halloween",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "show-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "everyone"
            ],
            [
                "i"
            ],
            [
                "festival"
            ],
            [
                "name"
            ],
            [
                "halloween"
            ],
            [
                "show-01",
                ":mode",
                "imperative"
            ],
            [
                "show-01",
                ":ARG0",
                "you"
            ],
            [
                "show-01",
                ":ARG1",
                "everyone"
            ],
            [
                "show-01",
                ":ARG2",
                "i"
            ],
            [
                "bear-02",
                ":ARG1",
                "everyone"
            ],
            [
                "bear-02",
                ":time",
                "festival"
            ],
            [
                "festival",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "halloween"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "show-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "everyone"
                    ],
                    [
                        "i"
                    ],
                    [
                        "festival"
                    ],
                    [
                        "name"
                    ],
                    [
                        "halloween"
                    ]
                ],
                "2": [
                    [
                        "show-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "show-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "show-01",
                        ":ARG1",
                        "everyone"
                    ],
                    [
                        "show-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "bear-02",
                        ":ARG1",
                        "everyone"
                    ],
                    [
                        "bear-02",
                        ":time",
                        "festival"
                    ],
                    [
                        "festival",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "halloween"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / show-01 :mode imperative :ARG0 (y / you) :ARG1 (e / everyone :ARG1-of (b / bear-02 :time (f / festival :name (n / name :op1 \"Halloween\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which beer originated in ireland\nList of semantic frames: "
            }
        ],
        "question": "which beer originated in ireland",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "originate-01"
            ],
            [
                "beer"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "ireland"
            ],
            [
                "originate-01",
                ":ARG1",
                "beer"
            ],
            [
                "originate-01",
                ":ARG2",
                "country"
            ],
            [
                "beer",
                ":mod",
                "amr-unknown"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "ireland"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "originate-01"
                    ],
                    [
                        "beer"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "ireland"
                    ]
                ],
                "2": [
                    [
                        "originate-01",
                        ":ARG1",
                        "beer"
                    ],
                    [
                        "originate-01",
                        ":ARG2",
                        "country"
                    ],
                    [
                        "beer",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "ireland"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(o / originate-01 :ARG1 (b / beer :mod (a / amr-unknown)) :ARG2 (c / country :name (n / name :op1 \"Ireland\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: to which countries does the himalayan mountain system extend\nList of semantic frames: "
            }
        ],
        "question": "to which countries does the himalayan mountain system extend",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "extend-01"
            ],
            [
                "system"
            ],
            [
                "country"
            ],
            [
                "mountain"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "himalaya"
            ],
            [
                "extend-01",
                ":ARG1",
                "system"
            ],
            [
                "extend-01",
                ":ARG4",
                "country"
            ],
            [
                "system",
                ":mod",
                "mountain"
            ],
            [
                "country",
                ":mod",
                "amr-unknown"
            ],
            [
                "mountain",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "himalaya"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "extend-01"
                    ],
                    [
                        "system"
                    ],
                    [
                        "country"
                    ],
                    [
                        "mountain"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "himalaya"
                    ]
                ],
                "2": [
                    [
                        "extend-01",
                        ":ARG1",
                        "system"
                    ],
                    [
                        "extend-01",
                        ":ARG4",
                        "country"
                    ],
                    [
                        "system",
                        ":mod",
                        "mountain"
                    ],
                    [
                        "country",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "mountain",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "himalaya"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(e / extend-01 :ARG1 (s / system :mod (m / mountain :name (n / name :op1 \"Himalaya\"))) :ARG4 (c / country :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which actors were born in germany\nList of semantic frames: "
            }
        ],
        "question": "which actors were born in germany",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bear-02"
            ],
            [
                "act-01"
            ],
            [
                "person"
            ],
            [
                "country"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "germany"
            ],
            [
                "bear-02",
                ":ARG1",
                "person"
            ],
            [
                "bear-02",
                ":location",
                "country"
            ],
            [
                "act-01",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":mod",
                "amr-unknown"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "germany"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bear-02"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "country"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "germany"
                    ]
                ],
                "2": [
                    [
                        "bear-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":location",
                        "country"
                    ],
                    [
                        "act-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "germany"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bear-02 :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / amr-unknown)) :location (c / country :name (n / name :op1 \"Germany\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how much carbs does peanut butter have\nList of semantic frames: "
            }
        ],
        "question": "how much carbs does peanut butter have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "butter"
            ],
            [
                "carb"
            ],
            [
                "peanut"
            ],
            [
                "amr-unknown"
            ],
            [
                "have-03",
                ":ARG0",
                "butter"
            ],
            [
                "have-03",
                ":ARG1",
                "carb"
            ],
            [
                "butter",
                ":mod",
                "peanut"
            ],
            [
                "carb",
                ":quant",
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "butter"
                    ],
                    [
                        "carb"
                    ],
                    [
                        "peanut"
                    ],
                    [
                        "amr-unknown"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "butter"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "carb"
                    ],
                    [
                        "butter",
                        ":mod",
                        "peanut"
                    ],
                    [
                        "carb",
                        ":quant",
                        "amr-unknown"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (b / butter :mod (p / peanut)) :ARG1 (c / carb :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who produced the most films\nList of semantic frames: "
            }
        ],
        "question": "who produced the most films",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "produce-01"
            ],
            [
                "have-quant-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "film"
            ],
            [
                "most"
            ],
            [
                "produce-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "produce-01",
                ":ARG1",
                "film"
            ],
            [
                "have-quant-91",
                ":ARG3",
                "most"
            ],
            [
                "have-quant-91",
                ":ARG1",
                "film"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "produce-01"
                    ],
                    [
                        "have-quant-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "film"
                    ],
                    [
                        "most"
                    ]
                ],
                "2": [
                    [
                        "produce-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "produce-01",
                        ":ARG1",
                        "film"
                    ],
                    [
                        "have-quant-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "have-quant-91",
                        ":ARG1",
                        "film"
                    ]
                ]
            },
            9
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(p / produce-01 :ARG0 (a / amr-unknown) :ARG1 (f / film :ARG1-of (h / have-quant-91 :ARG3 (m / most))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many employees does google have\nList of semantic frames: "
            }
        ],
        "question": "how many employees does google have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "employ-01"
            ],
            [
                "company"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "google"
            ],
            [
                "have-03",
                ":ARG0",
                "company"
            ],
            [
                "have-03",
                ":ARG1",
                "person"
            ],
            [
                "employ-01",
                ":ARG1",
                "person"
            ],
            [
                "employ-01",
                ":ARG0",
                "company"
            ],
            [
                "company",
                ":name",
                "name"
            ],
            [
                "person",
                ":quant",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "google"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "employ-01"
                    ],
                    [
                        "company"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "google"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "company"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "employ-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "employ-01",
                        ":ARG0",
                        "company"
                    ],
                    [
                        "company",
                        ":name",
                        "name"
                    ],
                    [
                        "person",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "google"
                    ]
                ]
            },
            14
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (c / company :name (n / name :op1 \"Google\")) :ARG1 (p / person :ARG1-of (e / employ-01 :ARG0 c) :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all actors who were born in berlin\nList of semantic frames: "
            }
        ],
        "question": "give me all actors who were born in berlin",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "act-01"
            ],
            [
                "bear-02"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "person"
            ],
            [
                "i"
            ],
            [
                "city"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "berlin"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "person"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "act-01",
                ":ARG0",
                "person"
            ],
            [
                "bear-02",
                ":ARG1",
                "person"
            ],
            [
                "bear-02",
                ":location",
                "city"
            ],
            [
                "person",
                ":mod",
                "all"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "berlin"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "act-01"
                    ],
                    [
                        "bear-02"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "person"
                    ],
                    [
                        "i"
                    ],
                    [
                        "city"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "berlin"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "act-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "bear-02",
                        ":location",
                        "city"
                    ],
                    [
                        "person",
                        ":mod",
                        "all"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "berlin"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (p / person :ARG0-of (a / act-01) :mod (a2 / all) :ARG1-of (b / bear-02 :location (c / city :name (n / name :op1 \"Berlin\")))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which music albums contain the song last christmas\nList of semantic frames: "
            }
        ],
        "question": "which music albums contain the song last christmas",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "contain-01"
            ],
            [
                "album"
            ],
            [
                "song"
            ],
            [
                "music"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "last"
            ],
            [
                "christmas"
            ],
            [
                "contain-01",
                ":ARG0",
                "album"
            ],
            [
                "contain-01",
                ":ARG1",
                "song"
            ],
            [
                "album",
                ":mod",
                "music"
            ],
            [
                "album",
                ":mod",
                "amr-unknown"
            ],
            [
                "song",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "last"
            ],
            [
                "name",
                ":op2",
                "christmas"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "contain-01"
                    ],
                    [
                        "album"
                    ],
                    [
                        "song"
                    ],
                    [
                        "music"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "last"
                    ],
                    [
                        "christmas"
                    ]
                ],
                "2": [
                    [
                        "contain-01",
                        ":ARG0",
                        "album"
                    ],
                    [
                        "contain-01",
                        ":ARG1",
                        "song"
                    ],
                    [
                        "album",
                        ":mod",
                        "music"
                    ],
                    [
                        "album",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "song",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "last"
                    ],
                    [
                        "name",
                        ":op2",
                        "christmas"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(c / contain-01 :ARG0 (a / album :mod (m / music) :mod (a2 / amr-unknown)) :ARG1 (s / song :name (n / name :op1 \"Last\" :op2 \"Christmas\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: when was alberta admitted as province\nList of semantic frames: "
            }
        ],
        "question": "when was alberta admitted as province",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "admit-02"
            ],
            [
                "have-org-role-91"
            ],
            [
                "province"
            ],
            [
                "amr-unknown"
            ],
            [
                "province"
            ],
            [
                "name"
            ],
            [
                "alberta"
            ],
            [
                "admit-02",
                ":ARG1",
                "province"
            ],
            [
                "admit-02",
                ":time",
                "amr-unknown"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "province"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "province"
            ],
            [
                "province",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "alberta"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "admit-02"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "province"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "province"
                    ],
                    [
                        "name"
                    ],
                    [
                        "alberta"
                    ]
                ],
                "2": [
                    [
                        "admit-02",
                        ":ARG1",
                        "province"
                    ],
                    [
                        "admit-02",
                        ":time",
                        "amr-unknown"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "province"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "province"
                    ],
                    [
                        "province",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "alberta"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / admit-02 :ARG1 (p / province :name (n / name :op1 \"Alberta\") :ARG0-of (h / have-org-role-91 :ARG2 (p2 / province))) :time (a2 / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: how many missions does the soyuz programme have\nList of semantic frames: "
            }
        ],
        "question": "how many missions does the soyuz programme have",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-03"
            ],
            [
                "programme"
            ],
            [
                "mission-01"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "soyuz"
            ],
            [
                "have-03",
                ":ARG0",
                "programme"
            ],
            [
                "have-03",
                ":ARG1",
                "mission-01"
            ],
            [
                "programme",
                ":name",
                "name"
            ],
            [
                "mission-01",
                ":quant",
                "amr-unknown"
            ],
            [
                "name",
                ":op1",
                "soyuz"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-03"
                    ],
                    [
                        "programme"
                    ],
                    [
                        "mission-01"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "soyuz"
                    ]
                ],
                "2": [
                    [
                        "have-03",
                        ":ARG0",
                        "programme"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "mission-01"
                    ],
                    [
                        "programme",
                        ":name",
                        "name"
                    ],
                    [
                        "mission-01",
                        ":quant",
                        "amr-unknown"
                    ],
                    [
                        "name",
                        ":op1",
                        "soyuz"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-03 :ARG0 (p / programme :name (n / name :op1 \"Soyuz\")) :ARG1 (m / mission-01 :quant (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all the tv shows with neil patrick harris\nList of semantic frames: "
            }
        ],
        "question": "give me all the tv shows with neil patrick harris",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "show-04"
            ],
            [
                "i"
            ],
            [
                "television"
            ],
            [
                "person"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "neil"
            ],
            [
                "patrick"
            ],
            [
                "harris"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "show-04"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "show-04",
                ":ARG3",
                "television"
            ],
            [
                "show-04",
                ":prep-with",
                "person"
            ],
            [
                "show-04",
                ":mod",
                "all"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "neil"
            ],
            [
                "name",
                ":op2",
                "patrick"
            ],
            [
                "name",
                ":op3",
                "harris"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "show-04"
                    ],
                    [
                        "i"
                    ],
                    [
                        "television"
                    ],
                    [
                        "person"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "neil"
                    ],
                    [
                        "patrick"
                    ],
                    [
                        "harris"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "show-04"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "show-04",
                        ":ARG3",
                        "television"
                    ],
                    [
                        "show-04",
                        ":prep-with",
                        "person"
                    ],
                    [
                        "show-04",
                        ":mod",
                        "all"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "neil"
                    ],
                    [
                        "name",
                        ":op2",
                        "patrick"
                    ],
                    [
                        "name",
                        ":op3",
                        "harris"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (s / show-04 :ARG3 (t / television) :prep-with (p / person :name (n / name :op1 \"Neil\" :op2 \"Patrick\" :op3 \"Harris\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: when were the hells angels founded\nList of semantic frames: "
            }
        ],
        "question": "when were the hells angels founded",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "found-01"
            ],
            [
                "organization"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "hells"
            ],
            [
                "angels"
            ],
            [
                "found-01",
                ":ARG1",
                "organization"
            ],
            [
                "found-01",
                ":time",
                "amr-unknown"
            ],
            [
                "organization",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "hells"
            ],
            [
                "name",
                ":op2",
                "angels"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "found-01"
                    ],
                    [
                        "organization"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "hells"
                    ],
                    [
                        "angels"
                    ]
                ],
                "2": [
                    [
                        "found-01",
                        ":ARG1",
                        "organization"
                    ],
                    [
                        "found-01",
                        ":time",
                        "amr-unknown"
                    ],
                    [
                        "organization",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "hells"
                    ],
                    [
                        "name",
                        ":op2",
                        "angels"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(f / found-01 :ARG1 (o / organization :name (n / name :op1 \"Hells\" :op2 \"Angels\")) :time (a / amr-unknown))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the net income of apple\nList of semantic frames: "
            }
        ],
        "question": "what is the net income of apple",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "income"
            ],
            [
                "net"
            ],
            [
                "amr-unknown"
            ],
            [
                "company"
            ],
            [
                "name"
            ],
            [
                "apple"
            ],
            [
                "income",
                ":mod",
                "net"
            ],
            [
                "income",
                ":domain",
                "amr-unknown"
            ],
            [
                "income",
                ":poss",
                "company"
            ],
            [
                "company",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "apple"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "income"
                    ],
                    [
                        "net"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "company"
                    ],
                    [
                        "name"
                    ],
                    [
                        "apple"
                    ]
                ],
                "2": [
                    [
                        "income",
                        ":mod",
                        "net"
                    ],
                    [
                        "income",
                        ":domain",
                        "amr-unknown"
                    ],
                    [
                        "income",
                        ":poss",
                        "company"
                    ],
                    [
                        "company",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "apple"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(i2 / income :mod (n / net) :domain (a / amr-unknown) :poss (c / company :name (n2 / name :op1 \"Apple\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all swedish holidays\nList of semantic frames: "
            }
        ],
        "question": "give me all swedish holidays",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "holiday"
            ],
            [
                "i"
            ],
            [
                "country"
            ],
            [
                "all"
            ],
            [
                "name"
            ],
            [
                "sweden"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "holiday"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "holiday",
                ":mod",
                "country"
            ],
            [
                "holiday",
                ":mod",
                "all"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "sweden"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "holiday"
                    ],
                    [
                        "i"
                    ],
                    [
                        "country"
                    ],
                    [
                        "all"
                    ],
                    [
                        "name"
                    ],
                    [
                        "sweden"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "holiday"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "holiday",
                        ":mod",
                        "country"
                    ],
                    [
                        "holiday",
                        ":mod",
                        "all"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "sweden"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (h / holiday :mod (c / country :name (n / name :op1 \"Sweden\")) :mod (a / all)) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: in which city was the former dutch queen juliana buried\nList of semantic frames: "
            }
        ],
        "question": "in which city was the former dutch queen juliana buried",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "bury-01"
            ],
            [
                "have-org-role-91"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "country"
            ],
            [
                "queen"
            ],
            [
                "name"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "former"
            ],
            [
                "juliana"
            ],
            [
                "netherlands"
            ],
            [
                "bury-01",
                ":ARG1",
                "person"
            ],
            [
                "bury-01",
                ":ARG2",
                "city"
            ],
            [
                "have-org-role-91",
                ":ARG1",
                "country"
            ],
            [
                "have-org-role-91",
                ":ARG2",
                "queen"
            ],
            [
                "have-org-role-91",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "city",
                ":mod",
                "amr-unknown"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "queen",
                ":time",
                "former"
            ],
            [
                "name",
                ":op1",
                "juliana"
            ],
            [
                "name",
                ":op1",
                "netherlands"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "bury-01"
                    ],
                    [
                        "have-org-role-91"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "country"
                    ],
                    [
                        "queen"
                    ],
                    [
                        "name"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "former"
                    ],
                    [
                        "juliana"
                    ],
                    [
                        "netherlands"
                    ]
                ],
                "2": [
                    [
                        "bury-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "bury-01",
                        ":ARG2",
                        "city"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG1",
                        "country"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG2",
                        "queen"
                    ],
                    [
                        "have-org-role-91",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "city",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "queen",
                        ":time",
                        "former"
                    ],
                    [
                        "name",
                        ":op1",
                        "juliana"
                    ],
                    [
                        "name",
                        ":op1",
                        "netherlands"
                    ]
                ]
            },
            23
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(b / bury-01 :ARG1 (p / person :name (n / name :op1 \"Juliana\") :ARG0-of (h / have-org-role-91 :ARG1 (c / country :name (n2 / name :op1 \"Netherlands\")) :ARG2 (q / queen :time (f / former)))) :ARG2 (c2 / city :mod (a / amr-unknown)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: list all the musicals with music by leonard bernstein\nList of semantic frames: "
            }
        ],
        "question": "list all the musicals with music by leonard bernstein",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "list-01"
            ],
            [
                "have-03"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "musical"
            ],
            [
                "music"
            ],
            [
                "all"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "leonard"
            ],
            [
                "bernstein"
            ],
            [
                "list-01",
                ":mode",
                "imperative"
            ],
            [
                "list-01",
                ":ARG0",
                "you"
            ],
            [
                "list-01",
                ":ARG1",
                "musical"
            ],
            [
                "have-03",
                ":ARG0",
                "musical"
            ],
            [
                "have-03",
                ":ARG1",
                "music"
            ],
            [
                "musical",
                ":mod",
                "all"
            ],
            [
                "music",
                ":prep-by",
                "person"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "leonard"
            ],
            [
                "name",
                ":op2",
                "bernstein"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "list-01"
                    ],
                    [
                        "have-03"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "musical"
                    ],
                    [
                        "music"
                    ],
                    [
                        "all"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "leonard"
                    ],
                    [
                        "bernstein"
                    ]
                ],
                "2": [
                    [
                        "list-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "list-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "list-01",
                        ":ARG1",
                        "musical"
                    ],
                    [
                        "have-03",
                        ":ARG0",
                        "musical"
                    ],
                    [
                        "have-03",
                        ":ARG1",
                        "music"
                    ],
                    [
                        "musical",
                        ":mod",
                        "all"
                    ],
                    [
                        "music",
                        ":prep-by",
                        "person"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "leonard"
                    ],
                    [
                        "name",
                        ":op2",
                        "bernstein"
                    ]
                ]
            },
            21
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(l / list-01 :mode imperative :ARG0 (y / you) :ARG1 (m / musical :mod (a / all) :ARG0-of (h / have-03 :ARG1 (m2 / music :prep-by (p / person :name (n / name :op1 \"Leonard\" :op2 \"Bernstein\"))))))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all companies in the advertising industry\nList of semantic frames: "
            }
        ],
        "question": "give me all companies in the advertising industry",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "company"
            ],
            [
                "i"
            ],
            [
                "all"
            ],
            [
                "industry"
            ],
            [
                "advertise-01"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "company"
            ],
            [
                "give-01",
                ":ARG1",
                "i"
            ],
            [
                "company",
                ":mod",
                "all"
            ],
            [
                "company",
                ":prep-in",
                "industry"
            ],
            [
                "industry",
                ":mod",
                "advertise-01"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "company"
                    ],
                    [
                        "i"
                    ],
                    [
                        "all"
                    ],
                    [
                        "industry"
                    ],
                    [
                        "advertise-01"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "company"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "i"
                    ],
                    [
                        "company",
                        ":mod",
                        "all"
                    ],
                    [
                        "company",
                        ":prep-in",
                        "industry"
                    ],
                    [
                        "industry",
                        ":mod",
                        "advertise-01"
                    ]
                ]
            },
            15
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (c / company :mod (a / all) :prep-in (i2 / industry :mod (a2 / advertise-01))) :ARG1 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: what is the largest metropolitan area in washington state\nList of semantic frames: "
            }
        ],
        "question": "what is the largest metropolitan area in washington state",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "have-degree-91"
            ],
            [
                "amr-unknown"
            ],
            [
                "large"
            ],
            [
                "most"
            ],
            [
                "area"
            ],
            [
                "state"
            ],
            [
                "metropolitan"
            ],
            [
                "name"
            ],
            [
                "washington"
            ],
            [
                "have-degree-91",
                ":ARG1",
                "amr-unknown"
            ],
            [
                "have-degree-91",
                ":ARG2",
                "large"
            ],
            [
                "have-degree-91",
                ":ARG3",
                "most"
            ],
            [
                "have-degree-91",
                ":ARG5",
                "area"
            ],
            [
                "area",
                ":location",
                "state"
            ],
            [
                "area",
                ":mod",
                "metropolitan"
            ],
            [
                "state",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "washington"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "have-degree-91"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "large"
                    ],
                    [
                        "most"
                    ],
                    [
                        "area"
                    ],
                    [
                        "state"
                    ],
                    [
                        "metropolitan"
                    ],
                    [
                        "name"
                    ],
                    [
                        "washington"
                    ]
                ],
                "2": [
                    [
                        "have-degree-91",
                        ":ARG1",
                        "amr-unknown"
                    ],
                    [
                        "have-degree-91",
                        ":ARG2",
                        "large"
                    ],
                    [
                        "have-degree-91",
                        ":ARG3",
                        "most"
                    ],
                    [
                        "have-degree-91",
                        ":ARG5",
                        "area"
                    ],
                    [
                        "area",
                        ":location",
                        "state"
                    ],
                    [
                        "area",
                        ":mod",
                        "metropolitan"
                    ],
                    [
                        "state",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "washington"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(h / have-degree-91 :ARG1 (a3 / amr-unknown) :ARG2 (l / large) :ARG3 (m2 / most) :ARG5 (a2 / area :location (s / state :name (n / name :op1 \"Washington\")) :mod (m / metropolitan)))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: who killed john lennon\nList of semantic frames: "
            }
        ],
        "question": "who killed john lennon",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "kill-01"
            ],
            [
                "amr-unknown"
            ],
            [
                "person"
            ],
            [
                "name"
            ],
            [
                "john"
            ],
            [
                "lennon"
            ],
            [
                "kill-01",
                ":ARG0",
                "amr-unknown"
            ],
            [
                "kill-01",
                ":ARG1",
                "person"
            ],
            [
                "person",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "john"
            ],
            [
                "name",
                ":op2",
                "lennon"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "kill-01"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "person"
                    ],
                    [
                        "name"
                    ],
                    [
                        "john"
                    ],
                    [
                        "lennon"
                    ]
                ],
                "2": [
                    [
                        "kill-01",
                        ":ARG0",
                        "amr-unknown"
                    ],
                    [
                        "kill-01",
                        ":ARG1",
                        "person"
                    ],
                    [
                        "person",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "john"
                    ],
                    [
                        "name",
                        ":op2",
                        "lennon"
                    ]
                ]
            },
            11
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(k / kill-01 :ARG0 (a / amr-unknown) :ARG1 (p / person :name (n / name :op1 \"John\" :op2 \"Lennon\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which writers studied in istanbul\nList of semantic frames: "
            }
        ],
        "question": "which writers studied in istanbul",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "study-01"
            ],
            [
                "write-01"
            ],
            [
                "person"
            ],
            [
                "city"
            ],
            [
                "amr-unknown"
            ],
            [
                "name"
            ],
            [
                "istanbul"
            ],
            [
                "study-01",
                ":ARG0",
                "person"
            ],
            [
                "study-01",
                ":location",
                "city"
            ],
            [
                "write-01",
                ":ARG0",
                "person"
            ],
            [
                "person",
                ":mod",
                "amr-unknown"
            ],
            [
                "city",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "istanbul"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "study-01"
                    ],
                    [
                        "write-01"
                    ],
                    [
                        "person"
                    ],
                    [
                        "city"
                    ],
                    [
                        "amr-unknown"
                    ],
                    [
                        "name"
                    ],
                    [
                        "istanbul"
                    ]
                ],
                "2": [
                    [
                        "study-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "study-01",
                        ":location",
                        "city"
                    ],
                    [
                        "write-01",
                        ":ARG0",
                        "person"
                    ],
                    [
                        "person",
                        ":mod",
                        "amr-unknown"
                    ],
                    [
                        "city",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "istanbul"
                    ]
                ]
            },
            13
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(s / study-01 :ARG0 (p / person :ARG0-of (w / write-01) :mod (a / amr-unknown)) :location (c / city :name (n / name :op1 \"Istanbul\")))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all australian metalcore bands\nList of semantic frames: "
            }
        ],
        "question": "give me all australian metalcore bands",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "band"
            ],
            [
                "i"
            ],
            [
                "metalcore"
            ],
            [
                "all"
            ],
            [
                "country"
            ],
            [
                "name"
            ],
            [
                "australia"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "band"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "band",
                ":mod",
                "metalcore"
            ],
            [
                "band",
                ":mod",
                "all"
            ],
            [
                "band",
                ":mod",
                "country"
            ],
            [
                "country",
                ":name",
                "name"
            ],
            [
                "name",
                ":op1",
                "australia"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "band"
                    ],
                    [
                        "i"
                    ],
                    [
                        "metalcore"
                    ],
                    [
                        "all"
                    ],
                    [
                        "country"
                    ],
                    [
                        "name"
                    ],
                    [
                        "australia"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "band"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "band",
                        ":mod",
                        "metalcore"
                    ],
                    [
                        "band",
                        ":mod",
                        "all"
                    ],
                    [
                        "band",
                        ":mod",
                        "country"
                    ],
                    [
                        "country",
                        ":name",
                        "name"
                    ],
                    [
                        "name",
                        ":op1",
                        "australia"
                    ]
                ]
            },
            19
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (b / band :mod (m / metalcore) :mod (a / all) :mod (c / country :name (n / name :op1 \"Australia\"))) :ARG2 (i / i))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: which countries adopted the euro\nList of semantic frames: "
            }
        ],
        "question": "which countries adopted the euro",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "adopt-01"
            ],
            [
                "country"
            ],
            [
                "euro"
            ],
            [
                "amr-unknown"
            ],
            [
                "adopt-01",
                ":ARG0",
                "country"
            ],
            [
                "adopt-01",
                ":ARG1",
                "euro"
            ],
            [
                "country",
                ":mod",
                "amr-unknown"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "adopt-01"
                    ],
                    [
                        "country"
                    ],
                    [
                        "euro"
                    ],
                    [
                        "amr-unknown"
                    ]
                ],
                "2": [
                    [
                        "adopt-01",
                        ":ARG0",
                        "country"
                    ],
                    [
                        "adopt-01",
                        ":ARG1",
                        "euro"
                    ],
                    [
                        "country",
                        ":mod",
                        "amr-unknown"
                    ]
                ]
            },
            7
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(a / adopt-01 :ARG0 (c / country :mod (a2 / amr-unknown)) :ARG1 (e / euro))"
    },
    {
        "dialog": [
            {
                "role": "system",
                "content": "Decompose the utterance into a List of semantic frames like in the examples."
            },
            {
                "role": "user",
                "content": "Utterance: which countries have more than ten caves\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('have-03',), ('country',), ('cave',), ('amr-unknown',), ('more-than',), ('10',), ('have-03', ':ARG0', 'country'), ('have-03', ':ARG1', 'cave'), ('country', ':mod', 'amr-unknown'), ('cave', ':quant', 'more-than'), ('more-than', ':op1', '10')]"
            },
            {
                "role": "user",
                "content": "Utterance: give all swimmers that were born in moscow\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('swim-01',), ('bear-02',), ('imperative',), ('you',), ('person',), ('city',), ('all',), ('name',), ('moscow',), ('give-01', ':mode', 'imperative'), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'person'), ('swim-01', ':ARG0', 'person'), ('bear-02', ':ARG1', 'person'), ('bear-02', ':location', 'city'), ('person', ':mod', 'all'), ('city', ':name', 'name'), ('name', ':op1', 'moscow')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me the currency of china\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('give-01',), ('you',), ('currency',), ('i',), ('imperative',), ('country',), ('name',), ('china',), ('give-01', ':ARG0', 'you'), ('give-01', ':ARG1', 'currency'), ('give-01', ':ARG2', 'i'), ('give-01', ':mode', 'imperative'), ('currency', ':poss', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'china')]"
            },
            {
                "role": "user",
                "content": "Utterance: which subsidiary of lufthansa serves both dortmund and berlin tegel\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('serve-01',), ('subsidiary',), ('and',), ('company',), ('amr-unknown',), ('airport',), ('airport',), ('name',), ('name',), ('name',), ('lufthansa',), ('dortmund',), ('berlin',), ('tegel',), ('serve-01', ':ARG0', 'subsidiary'), ('serve-01', ':ARG2', 'and'), ('subsidiary', ':poss', 'company'), ('subsidiary', ':mod', 'amr-unknown'), ('and', ':op1', 'airport'), ('and', ':op2', 'airport'), ('company', ':name', 'name'), ('airport', ':name', 'name'), ('airport', ':name', 'name'), ('name', ':op1', 'lufthansa'), ('name', ':op1', 'dortmund'), ('name', ':op1', 'berlin'), ('name', ':op2', 'tegel')]"
            },
            {
                "role": "user",
                "content": "Utterance: which television shows were created by walt disney\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('company',), ('show-04',), ('name',), ('amr-unknown',), ('television',), ('walt',), ('disney',), ('create-01', ':ARG0', 'company'), ('create-01', ':ARG1', 'show-04'), ('company', ':name', 'name'), ('show-04', ':ARG0', 'company'), ('show-04', ':ARG1', 'amr-unknown'), ('show-04', ':ARG3', 'television'), ('name', ':op1', 'walt'), ('name', ':op2', 'disney')]"
            },
            {
                "role": "user",
                "content": "Utterance: who created goofy\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('create-01',), ('amr-unknown',), ('animal',), ('name',), ('goofy',), ('create-01', ':ARG0', 'amr-unknown'), ('create-01', ':ARG1', 'animal'), ('animal', ':name', 'name'), ('name', ':op1', 'goofy')]"
            },
            {
                "role": "user",
                "content": "Utterance: which rivers flow into a german lake\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('flow-01',), ('river',), ('lake',), ('amr-unknown',), ('country',), ('name',), ('germany',), ('flow-01', ':ARG1', 'river'), ('flow-01', ':destination', 'lake'), ('river', ':mod', 'amr-unknown'), ('lake', ':mod', 'country'), ('country', ':name', 'name'), ('name', ':op1', 'germany')]"
            },
            {
                "role": "user",
                "content": "Utterance: which films starring clint eastwood did he direct himself\nList of semantic frames: "
            },
            {
                "role": "assistant",
                "content": "[('direct-01',), ('star-01',), ('person',), ('film',), ('name',), ('amr-unknown',), ('clint',), ('eastwood',), ('direct-01', ':ARG0', 'person'), ('direct-01', ':ARG1', 'film'), ('star-01', ':ARG2', 'film'), ('star-01', ':ARG1', 'person'), ('person', ':name', 'name'), ('film', ':mod', 'amr-unknown'), ('name', ':op1', 'clint'), ('name', ':op2', 'eastwood')]"
            },
            {
                "role": "user",
                "content": "Utterance: give me all types of eating disorders\nList of semantic frames: "
            }
        ],
        "question": "give me all types of eating disorders",
        "language": "en",
        "target": "amr_ngrams",
        "amr_ngrams": [
            [
                "give-01"
            ],
            [
                "imperative"
            ],
            [
                "you"
            ],
            [
                "order-03"
            ],
            [
                "i"
            ],
            [
                "-"
            ],
            [
                "eat-01"
            ],
            [
                "type"
            ],
            [
                "all"
            ],
            [
                "give-01",
                ":mode",
                "imperative"
            ],
            [
                "give-01",
                ":ARG0",
                "you"
            ],
            [
                "give-01",
                ":ARG1",
                "order-03"
            ],
            [
                "give-01",
                ":ARG2",
                "i"
            ],
            [
                "order-03",
                ":polarity",
                "-"
            ],
            [
                "order-03",
                ":ARG1",
                "eat-01"
            ],
            [
                "order-03",
                ":mod",
                "type"
            ],
            [
                "type",
                ":mod",
                "all"
            ]
        ],
        "ngramInstance": [
            {
                "1": [
                    [
                        "give-01"
                    ],
                    [
                        "imperative"
                    ],
                    [
                        "you"
                    ],
                    [
                        "order-03"
                    ],
                    [
                        "i"
                    ],
                    [
                        "-"
                    ],
                    [
                        "eat-01"
                    ],
                    [
                        "type"
                    ],
                    [
                        "all"
                    ]
                ],
                "2": [
                    [
                        "give-01",
                        ":mode",
                        "imperative"
                    ],
                    [
                        "give-01",
                        ":ARG0",
                        "you"
                    ],
                    [
                        "give-01",
                        ":ARG1",
                        "order-03"
                    ],
                    [
                        "give-01",
                        ":ARG2",
                        "i"
                    ],
                    [
                        "order-03",
                        ":polarity",
                        "-"
                    ],
                    [
                        "order-03",
                        ":ARG1",
                        "eat-01"
                    ],
                    [
                        "order-03",
                        ":mod",
                        "type"
                    ],
                    [
                        "type",
                        ":mod",
                        "all"
                    ]
                ]
            },
            17
        ],
        "max_ngrams": 2,
        "num_samples_in_prompt": 8,
        "raw_amr": "(g / give-01 :mode imperative :ARG0 (y / you) :ARG1 (o / order-03 :polarity - :ARG1 (e / eat-01) :mod (t / type :mod (a / all))) :ARG2 (i / i))"
    }
]